
besturingseenheid.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000013fa  0000148e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000013fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000ec  0080010c  0080010c  0000149a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000149a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000014f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  00001538  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f66  00000000  00000000  00001668  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b48  00000000  00000000  000025ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000083b  00000000  00000000  00003116  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000290  00000000  00000000  00003954  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005c4  00000000  00000000  00003be4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005a4  00000000  00000000  000041a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  0000474c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 6d 01 	jmp	0x2da	; 0x2da <__vector_11>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ea ef       	ldi	r30, 0xFA	; 250
     17e:	f3 e1       	ldi	r31, 0x13	; 19
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	ac 30       	cpi	r26, 0x0C	; 12
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	ac e0       	ldi	r26, 0x0C	; 12
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a8 3f       	cpi	r26, 0xF8	; 248
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <main>
     1a0:	0c 94 fb 09 	jmp	0x13f6	; 0x13f6 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <init_adc>:

#include <avr/io.h>

void init_adc(void)
{
    ADMUX = (1 << REFS0);
     1a8:	80 e4       	ldi	r24, 0x40	; 64
     1aa:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
    ADCSRA = (1 << ADEN) | 7; // enable analog-to-digital converter and set prescaler to 128
     1ae:	87 e8       	ldi	r24, 0x87	; 135
     1b0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     1b4:	08 95       	ret

000001b6 <read_analog_pin>:
}

uint16_t read_analog_pin(uint8_t pin)
{
    ADMUX = (1 << REFS0) | (pin & 0x0f);
     1b6:	8f 70       	andi	r24, 0x0F	; 15
     1b8:	80 64       	ori	r24, 0x40	; 64
     1ba:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
    ADCSRA |= (1 << ADSC);
     1be:	ea e7       	ldi	r30, 0x7A	; 122
     1c0:	f0 e0       	ldi	r31, 0x00	; 0
     1c2:	80 81       	ld	r24, Z
     1c4:	80 64       	ori	r24, 0x40	; 64
     1c6:	80 83       	st	Z, r24
    
    loop_until_bit_is_clear(ADCSRA, ADSC);
     1c8:	80 81       	ld	r24, Z
     1ca:	86 fd       	sbrc	r24, 6
     1cc:	fd cf       	rjmp	.-6      	; 0x1c8 <read_analog_pin+0x12>
    
    return ADCW;
     1ce:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
     1d2:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
     1d6:	08 95       	ret

000001d8 <SCH_Add_Task>:
  Task will be first executed at T = 300 ticks, then 1300, 2300, etc.            
 
-*------------------------------------------------------------------*/

unsigned char SCH_Add_Task(void (*pFunction)(), const unsigned int DELAY, const unsigned int PERIOD)
{
     1d8:	0f 93       	push	r16
     1da:	1f 93       	push	r17
     1dc:	cf 93       	push	r28
     1de:	df 93       	push	r29
     1e0:	8c 01       	movw	r16, r24
   unsigned char Index = 0;

   // First find a gap in the array (if there is one)
   while((SCH_tasks_G[Index].pTask != 0) && (Index < SCH_MAX_TASKS))
     1e2:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <SCH_tasks_G>
     1e6:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <SCH_tasks_G+0x1>
     1ea:	89 2b       	or	r24, r25
     1ec:	81 f0       	breq	.+32     	; 0x20e <SCH_Add_Task+0x36>
     1ee:	e2 e1       	ldi	r30, 0x12	; 18
     1f0:	f1 e0       	ldi	r31, 0x01	; 1
     1f2:	21 e0       	ldi	r18, 0x01	; 1
     1f4:	30 e0       	ldi	r19, 0x00	; 0
   {
      Index++;
     1f6:	82 2f       	mov	r24, r18
unsigned char SCH_Add_Task(void (*pFunction)(), const unsigned int DELAY, const unsigned int PERIOD)
{
   unsigned char Index = 0;

   // First find a gap in the array (if there is one)
   while((SCH_tasks_G[Index].pTask != 0) && (Index < SCH_MAX_TASKS))
     1f8:	e9 01       	movw	r28, r18
     1fa:	a7 81       	ldd	r26, Z+7	; 0x07
     1fc:	b0 85       	ldd	r27, Z+8	; 0x08
     1fe:	2f 5f       	subi	r18, 0xFF	; 255
     200:	3f 4f       	sbci	r19, 0xFF	; 255
     202:	37 96       	adiw	r30, 0x07	; 7
     204:	ab 2b       	or	r26, r27
     206:	b9 f7       	brne	.-18     	; 0x1f6 <SCH_Add_Task+0x1e>
   {
      Index++;
   }

   // Have we reached the end of the list?   
   if(Index == SCH_MAX_TASKS)
     208:	8a 30       	cpi	r24, 0x0A	; 10
     20a:	21 f4       	brne	.+8      	; 0x214 <SCH_Add_Task+0x3c>
     20c:	15 c0       	rjmp	.+42     	; 0x238 <SCH_Add_Task+0x60>
unsigned char SCH_Add_Task(void (*pFunction)(), const unsigned int DELAY, const unsigned int PERIOD)
{
   unsigned char Index = 0;

   // First find a gap in the array (if there is one)
   while((SCH_tasks_G[Index].pTask != 0) && (Index < SCH_MAX_TASKS))
     20e:	c0 e0       	ldi	r28, 0x00	; 0
     210:	d0 e0       	ldi	r29, 0x00	; 0
 
-*------------------------------------------------------------------*/

unsigned char SCH_Add_Task(void (*pFunction)(), const unsigned int DELAY, const unsigned int PERIOD)
{
   unsigned char Index = 0;
     212:	80 e0       	ldi	r24, 0x00	; 0
      // Task list is full, return an error code
      return SCH_MAX_TASKS;  
   }

   // If we're here, there is a space in the task array
   SCH_tasks_G[Index].pTask = pFunction;
     214:	fe 01       	movw	r30, r28
     216:	ee 0f       	add	r30, r30
     218:	ff 1f       	adc	r31, r31
     21a:	ee 0f       	add	r30, r30
     21c:	ff 1f       	adc	r31, r31
     21e:	ee 0f       	add	r30, r30
     220:	ff 1f       	adc	r31, r31
     222:	ec 1b       	sub	r30, r28
     224:	fd 0b       	sbc	r31, r29
     226:	ee 5e       	subi	r30, 0xEE	; 238
     228:	fe 4f       	sbci	r31, 0xFE	; 254
     22a:	11 83       	std	Z+1, r17	; 0x01
     22c:	00 83       	st	Z, r16
   SCH_tasks_G[Index].Delay =DELAY;
     22e:	73 83       	std	Z+3, r23	; 0x03
     230:	62 83       	std	Z+2, r22	; 0x02
   SCH_tasks_G[Index].Period = PERIOD;
     232:	55 83       	std	Z+5, r21	; 0x05
     234:	44 83       	std	Z+4, r20	; 0x04
   SCH_tasks_G[Index].RunMe = 0;
     236:	16 82       	std	Z+6, r1	; 0x06

   // return position of task (to allow later deletion)
   return Index;
}
     238:	df 91       	pop	r29
     23a:	cf 91       	pop	r28
     23c:	1f 91       	pop	r17
     23e:	0f 91       	pop	r16
     240:	08 95       	ret

00000242 <SCH_Delete_Task>:
unsigned char SCH_Delete_Task(const unsigned char TASK_INDEX)
{
   // Return_code can be used for error reporting, NOT USED HERE THOUGH!
   unsigned char Return_code = 0;

   SCH_tasks_G[TASK_INDEX].pTask = 0;
     242:	27 e0       	ldi	r18, 0x07	; 7
     244:	82 9f       	mul	r24, r18
     246:	c0 01       	movw	r24, r0
     248:	11 24       	eor	r1, r1
     24a:	fc 01       	movw	r30, r24
     24c:	ee 5e       	subi	r30, 0xEE	; 238
     24e:	fe 4f       	sbci	r31, 0xFE	; 254
     250:	11 82       	std	Z+1, r1	; 0x01
     252:	10 82       	st	Z, r1
   SCH_tasks_G[TASK_INDEX].Delay = 0;
     254:	13 82       	std	Z+3, r1	; 0x03
     256:	12 82       	std	Z+2, r1	; 0x02
   SCH_tasks_G[TASK_INDEX].Period = 0;
     258:	15 82       	std	Z+5, r1	; 0x05
     25a:	14 82       	std	Z+4, r1	; 0x04
   SCH_tasks_G[TASK_INDEX].RunMe = 0;
     25c:	16 82       	std	Z+6, r1	; 0x06

   return Return_code;
}
     25e:	80 e0       	ldi	r24, 0x00	; 0
     260:	08 95       	ret

00000262 <SCH_Dispatch_Tasks>:
  is due to run, SCH_Dispatch_Tasks() will run it.
  This function must be called (repeatedly) from the main loop.
-*------------------------------------------------------------------*/

void SCH_Dispatch_Tasks(void)
{
     262:	ef 92       	push	r14
     264:	ff 92       	push	r15
     266:	1f 93       	push	r17
     268:	cf 93       	push	r28
     26a:	df 93       	push	r29
     26c:	c2 e1       	ldi	r28, 0x12	; 18
     26e:	d1 e0       	ldi	r29, 0x01	; 1
   unsigned char Index;

   // Dispatches (runs) the next task (if one is ready)
   for(Index = 0; Index < SCH_MAX_TASKS; Index++)
     270:	10 e0       	ldi	r17, 0x00	; 0
   {
      if((SCH_tasks_G[Index].RunMe > 0) && (SCH_tasks_G[Index].pTask != 0))
     272:	8e 81       	ldd	r24, Y+6	; 0x06
     274:	88 23       	and	r24, r24
     276:	79 f0       	breq	.+30     	; 0x296 <SCH_Dispatch_Tasks+0x34>
     278:	e8 81       	ld	r30, Y
     27a:	f9 81       	ldd	r31, Y+1	; 0x01
     27c:	30 97       	sbiw	r30, 0x00	; 0
     27e:	59 f0       	breq	.+22     	; 0x296 <SCH_Dispatch_Tasks+0x34>
      {
         (*SCH_tasks_G[Index].pTask)();  // Run the task
     280:	09 95       	icall
         SCH_tasks_G[Index].RunMe -= 1;   // Reset / reduce RunMe flag
     282:	8e 81       	ldd	r24, Y+6	; 0x06
     284:	81 50       	subi	r24, 0x01	; 1
     286:	8e 83       	std	Y+6, r24	; 0x06

         // Periodic tasks will automatically run again
         // - if this is a 'one shot' task, remove it from the array
         if(SCH_tasks_G[Index].Period == 0)
     288:	8c 81       	ldd	r24, Y+4	; 0x04
     28a:	9d 81       	ldd	r25, Y+5	; 0x05
     28c:	89 2b       	or	r24, r25
     28e:	19 f4       	brne	.+6      	; 0x296 <SCH_Dispatch_Tasks+0x34>
         {
            SCH_Delete_Task(Index);
     290:	81 2f       	mov	r24, r17
     292:	0e 94 21 01 	call	0x242	; 0x242 <SCH_Delete_Task>
void SCH_Dispatch_Tasks(void)
{
   unsigned char Index;

   // Dispatches (runs) the next task (if one is ready)
   for(Index = 0; Index < SCH_MAX_TASKS; Index++)
     296:	1f 5f       	subi	r17, 0xFF	; 255
     298:	27 96       	adiw	r28, 0x07	; 7
     29a:	1a 30       	cpi	r17, 0x0A	; 10
     29c:	51 f7       	brne	.-44     	; 0x272 <SCH_Dispatch_Tasks+0x10>
         {
            SCH_Delete_Task(Index);
         }
      }
   }
}
     29e:	df 91       	pop	r29
     2a0:	cf 91       	pop	r28
     2a2:	1f 91       	pop	r17
     2a4:	ff 90       	pop	r15
     2a6:	ef 90       	pop	r14
     2a8:	08 95       	ret

000002aa <SCH_Init_T1>:
  data structures and sets up timer interrupts at required rate.
  You must call this function before using the scheduler.  
-*------------------------------------------------------------------*/

void SCH_Init_T1(void)
{
     2aa:	cf 93       	push	r28
   unsigned char i;

   for(i = 0; i < SCH_MAX_TASKS; i++)
     2ac:	c0 e0       	ldi	r28, 0x00	; 0
   {
      SCH_Delete_Task(i);
     2ae:	8c 2f       	mov	r24, r28
     2b0:	0e 94 21 01 	call	0x242	; 0x242 <SCH_Delete_Task>

void SCH_Init_T1(void)
{
   unsigned char i;

   for(i = 0; i < SCH_MAX_TASKS; i++)
     2b4:	cf 5f       	subi	r28, 0xFF	; 255
     2b6:	ca 30       	cpi	r28, 0x0A	; 10
     2b8:	d1 f7       	brne	.-12     	; 0x2ae <SCH_Init_T1+0x4>

   // Set up Timer 1
   // Values for 1ms and 10ms ticks are provided for various crystals

   // Hier moet de timer periode worden aangepast ....!
   OCR1A = (uint16_t)625;   		     // 10ms = (256/16.000.000) * 625
     2ba:	81 e7       	ldi	r24, 0x71	; 113
     2bc:	92 e0       	ldi	r25, 0x02	; 2
     2be:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     2c2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
   TCCR1B = (1 << CS12) | (1 << WGM12);  // prescale op 64, top counter = value OCR1A (CTC mode)
     2c6:	8c e0       	ldi	r24, 0x0C	; 12
     2c8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
   TIMSK1 = 1 << OCIE1A;   		     // Timer 1 Output Compare A Match Interrupt Enable
     2cc:	82 e0       	ldi	r24, 0x02	; 2
     2ce:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
}
     2d2:	cf 91       	pop	r28
     2d4:	08 95       	ret

000002d6 <SCH_Start>:
 
-*------------------------------------------------------------------*/

void SCH_Start(void)
{
      sei();
     2d6:	78 94       	sei
     2d8:	08 95       	ret

000002da <__vector_11>:
  This is the scheduler ISR.  It is called at a rate 
  determined by the timer settings in SCH_Init_T1().
-*------------------------------------------------------------------*/

ISR(TIMER1_COMPA_vect)
{
     2da:	1f 92       	push	r1
     2dc:	0f 92       	push	r0
     2de:	0f b6       	in	r0, 0x3f	; 63
     2e0:	0f 92       	push	r0
     2e2:	11 24       	eor	r1, r1
     2e4:	2f 93       	push	r18
     2e6:	3f 93       	push	r19
     2e8:	8f 93       	push	r24
     2ea:	9f 93       	push	r25
     2ec:	af 93       	push	r26
     2ee:	bf 93       	push	r27
     2f0:	ef 93       	push	r30
     2f2:	ff 93       	push	r31
     2f4:	e2 e1       	ldi	r30, 0x12	; 18
     2f6:	f1 e0       	ldi	r31, 0x01	; 1
     2f8:	28 e5       	ldi	r18, 0x58	; 88
     2fa:	31 e0       	ldi	r19, 0x01	; 1
   unsigned char Index;
   for(Index = 0; Index < SCH_MAX_TASKS; Index++)
   {
      // Check if there is a task at this location
      if(SCH_tasks_G[Index].pTask)
     2fc:	80 81       	ld	r24, Z
     2fe:	91 81       	ldd	r25, Z+1	; 0x01
     300:	89 2b       	or	r24, r25
     302:	91 f0       	breq	.+36     	; 0x328 <__vector_11+0x4e>
      {
         if(SCH_tasks_G[Index].Delay == 0)
     304:	82 81       	ldd	r24, Z+2	; 0x02
     306:	93 81       	ldd	r25, Z+3	; 0x03
     308:	00 97       	sbiw	r24, 0x00	; 0
     30a:	59 f4       	brne	.+22     	; 0x322 <__vector_11+0x48>
         {
            // The task is due to run, Inc. the 'RunMe' flag
            SCH_tasks_G[Index].RunMe += 1;
     30c:	86 81       	ldd	r24, Z+6	; 0x06
     30e:	8f 5f       	subi	r24, 0xFF	; 255
     310:	86 83       	std	Z+6, r24	; 0x06

            if(SCH_tasks_G[Index].Period)
     312:	84 81       	ldd	r24, Z+4	; 0x04
     314:	95 81       	ldd	r25, Z+5	; 0x05
     316:	00 97       	sbiw	r24, 0x00	; 0
     318:	39 f0       	breq	.+14     	; 0x328 <__vector_11+0x4e>
            {
               // Schedule periodic tasks to run again
               SCH_tasks_G[Index].Delay = SCH_tasks_G[Index].Period;
               SCH_tasks_G[Index].Delay -= 1;
     31a:	01 97       	sbiw	r24, 0x01	; 1
     31c:	93 83       	std	Z+3, r25	; 0x03
     31e:	82 83       	std	Z+2, r24	; 0x02
     320:	03 c0       	rjmp	.+6      	; 0x328 <__vector_11+0x4e>
            }
         }
         else
         {
            // Not yet ready to run: just decrement the delay
            SCH_tasks_G[Index].Delay -= 1;
     322:	01 97       	sbiw	r24, 0x01	; 1
     324:	93 83       	std	Z+3, r25	; 0x03
     326:	82 83       	std	Z+2, r24	; 0x02
     328:	37 96       	adiw	r30, 0x07	; 7
-*------------------------------------------------------------------*/

ISR(TIMER1_COMPA_vect)
{
   unsigned char Index;
   for(Index = 0; Index < SCH_MAX_TASKS; Index++)
     32a:	e2 17       	cp	r30, r18
     32c:	f3 07       	cpc	r31, r19
     32e:	31 f7       	brne	.-52     	; 0x2fc <__vector_11+0x22>
            // Not yet ready to run: just decrement the delay
            SCH_tasks_G[Index].Delay -= 1;
         }
      }
   }
     330:	ff 91       	pop	r31
     332:	ef 91       	pop	r30
     334:	bf 91       	pop	r27
     336:	af 91       	pop	r26
     338:	9f 91       	pop	r25
     33a:	8f 91       	pop	r24
     33c:	3f 91       	pop	r19
     33e:	2f 91       	pop	r18
     340:	0f 90       	pop	r0
     342:	0f be       	out	0x3f, r0	; 63
     344:	0f 90       	pop	r0
     346:	1f 90       	pop	r1
     348:	18 95       	reti

0000034a <test>:
		SCH_Dispatch_Tasks();
	}
}

void test(void)
{
     34a:	cf 93       	push	r28
     34c:	df 93       	push	r29
     34e:	cd b7       	in	r28, 0x3d	; 61
     350:	de b7       	in	r29, 0x3e	; 62
     352:	ce 56       	subi	r28, 0x6E	; 110
     354:	d1 09       	sbc	r29, r1
     356:	0f b6       	in	r0, 0x3f	; 63
     358:	f8 94       	cli
     35a:	de bf       	out	0x3e, r29	; 62
     35c:	0f be       	out	0x3f, r0	; 63
     35e:	cd bf       	out	0x3d, r28	; 61
	SensorData data;
	
	data.temperature = get_average_temperature_in_celsius();
     360:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <get_average_temperature_in_celsius>
     364:	6b 83       	std	Y+3, r22	; 0x03
     366:	7c 83       	std	Y+4, r23	; 0x04
     368:	8d 83       	std	Y+5, r24	; 0x05
     36a:	9e 83       	std	Y+6, r25	; 0x06
	data.light_intensity = 0;
     36c:	1a 82       	std	Y+2, r1	; 0x02
     36e:	19 82       	std	Y+1, r1	; 0x01
	data.distance = 0;
     370:	1f 82       	std	Y+7, r1	; 0x07
     372:	18 86       	std	Y+8, r1	; 0x08
     374:	19 86       	std	Y+9, r1	; 0x09
     376:	1a 86       	std	Y+10, r1	; 0x0a
	
	char buffer[100];
	
	serialize_sensor_data(&data, buffer);
     378:	be 01       	movw	r22, r28
     37a:	65 5f       	subi	r22, 0xF5	; 245
     37c:	7f 4f       	sbci	r23, 0xFF	; 255
     37e:	ce 01       	movw	r24, r28
     380:	01 96       	adiw	r24, 0x01	; 1
     382:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <serialize_sensor_data>
	
	transmit_message(buffer);
     386:	ce 01       	movw	r24, r28
     388:	0b 96       	adiw	r24, 0x0b	; 11
     38a:	0e 94 3d 02 	call	0x47a	; 0x47a <transmit_message>
}
     38e:	c2 59       	subi	r28, 0x92	; 146
     390:	df 4f       	sbci	r29, 0xFF	; 255
     392:	0f b6       	in	r0, 0x3f	; 63
     394:	f8 94       	cli
     396:	de bf       	out	0x3e, r29	; 62
     398:	0f be       	out	0x3f, r0	; 63
     39a:	cd bf       	out	0x3d, r28	; 61
     39c:	df 91       	pop	r29
     39e:	cf 91       	pop	r28
     3a0:	08 95       	ret

000003a2 <main>:

void test(void);

int main(void)
{
	init_serial_port();
     3a2:	0e 94 27 02 	call	0x44e	; 0x44e <init_serial_port>
	init_temperature_sensor();
     3a6:	0e 94 4c 02 	call	0x498	; 0x498 <init_temperature_sensor>
	
	SCH_Init_T1();
     3aa:	0e 94 55 01 	call	0x2aa	; 0x2aa <SCH_Init_T1>
	
	SCH_Add_Task(&measure_temperature, 0, 100); // measure temperature every second
     3ae:	44 e6       	ldi	r20, 0x64	; 100
     3b0:	50 e0       	ldi	r21, 0x00	; 0
     3b2:	60 e0       	ldi	r22, 0x00	; 0
     3b4:	70 e0       	ldi	r23, 0x00	; 0
     3b6:	84 e7       	ldi	r24, 0x74	; 116
     3b8:	92 e0       	ldi	r25, 0x02	; 2
     3ba:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <SCH_Add_Task>
	SCH_Add_Task(&calculate_average_temperature, 4000, 4000); // calculate average temperature every 40 seconds
     3be:	40 ea       	ldi	r20, 0xA0	; 160
     3c0:	5f e0       	ldi	r21, 0x0F	; 15
     3c2:	60 ea       	ldi	r22, 0xA0	; 160
     3c4:	7f e0       	ldi	r23, 0x0F	; 15
     3c6:	8c e9       	ldi	r24, 0x9C	; 156
     3c8:	92 e0       	ldi	r25, 0x02	; 2
     3ca:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <SCH_Add_Task>
	SCH_Add_Task(&test, 6000, 6000); // transmit sensor data temperature every 60 seconds
     3ce:	40 e7       	ldi	r20, 0x70	; 112
     3d0:	57 e1       	ldi	r21, 0x17	; 23
     3d2:	60 e7       	ldi	r22, 0x70	; 112
     3d4:	77 e1       	ldi	r23, 0x17	; 23
     3d6:	85 ea       	ldi	r24, 0xA5	; 165
     3d8:	91 e0       	ldi	r25, 0x01	; 1
     3da:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <SCH_Add_Task>
	
	SCH_Start();
     3de:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <SCH_Start>
	
	while(1)
	{
		SCH_Dispatch_Tasks();
     3e2:	0e 94 31 01 	call	0x262	; 0x262 <SCH_Dispatch_Tasks>
     3e6:	fd cf       	rjmp	.-6      	; 0x3e2 <main+0x40>

000003e8 <serialize_sensor_data>:

#include <stdio.h>

int serialize_sensor_data(SensorData* data, char* buffer)
{
    if (data == NULL || buffer == NULL)
     3e8:	00 97       	sbiw	r24, 0x00	; 0
     3ea:	59 f1       	breq	.+86     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     3ec:	61 15       	cp	r22, r1
     3ee:	71 05       	cpc	r23, r1
     3f0:	59 f1       	breq	.+86     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     3f2:	fc 01       	movw	r30, r24
    {
        return 0;
    }
	
	sprintf(buffer, "1:%d:%f:%f\n", data->light_intensity, data->temperature, data->distance);
     3f4:	81 85       	ldd	r24, Z+9	; 0x09
     3f6:	8f 93       	push	r24
     3f8:	80 85       	ldd	r24, Z+8	; 0x08
     3fa:	8f 93       	push	r24
     3fc:	87 81       	ldd	r24, Z+7	; 0x07
     3fe:	8f 93       	push	r24
     400:	86 81       	ldd	r24, Z+6	; 0x06
     402:	8f 93       	push	r24
     404:	85 81       	ldd	r24, Z+5	; 0x05
     406:	8f 93       	push	r24
     408:	84 81       	ldd	r24, Z+4	; 0x04
     40a:	8f 93       	push	r24
     40c:	83 81       	ldd	r24, Z+3	; 0x03
     40e:	8f 93       	push	r24
     410:	82 81       	ldd	r24, Z+2	; 0x02
     412:	8f 93       	push	r24
     414:	81 81       	ldd	r24, Z+1	; 0x01
     416:	8f 93       	push	r24
     418:	80 81       	ld	r24, Z
     41a:	8f 93       	push	r24
     41c:	80 e0       	ldi	r24, 0x00	; 0
     41e:	91 e0       	ldi	r25, 0x01	; 1
     420:	9f 93       	push	r25
     422:	8f 93       	push	r24
     424:	7f 93       	push	r23
     426:	6f 93       	push	r22
     428:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <sprintf>
	
    return 1;
     42c:	8d b7       	in	r24, 0x3d	; 61
     42e:	9e b7       	in	r25, 0x3e	; 62
     430:	0e 96       	adiw	r24, 0x0e	; 14
     432:	0f b6       	in	r0, 0x3f	; 63
     434:	f8 94       	cli
     436:	9e bf       	out	0x3e, r25	; 62
     438:	0f be       	out	0x3f, r0	; 63
     43a:	8d bf       	out	0x3d, r24	; 61
     43c:	81 e0       	ldi	r24, 0x01	; 1
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	08 95       	ret

int serialize_sensor_data(SensorData* data, char* buffer)
{
    if (data == NULL || buffer == NULL)
    {
        return 0;
     442:	80 e0       	ldi	r24, 0x00	; 0
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	08 95       	ret
     448:	80 e0       	ldi	r24, 0x00	; 0
     44a:	90 e0       	ldi	r25, 0x00	; 0
    }
	
	sprintf(buffer, "1:%d:%f:%f\n", data->light_intensity, data->temperature, data->distance);
	
    return 1;
     44c:	08 95       	ret

0000044e <init_serial_port>:
#define UBRRVAL 51

void init_serial_port(void)
{
    //set baud rate 19200
    UBRR0H = 0;
     44e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
    UBRR0L = UBRRVAL;
     452:	83 e3       	ldi	r24, 0x33	; 51
     454:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
    
    //disable U2X mode
    UCSR0A = 0;
     458:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
    
    //enable transmitter
    UCSR0B= _BV(RXEN0) | _BV(TXEN0);
     45c:	88 e1       	ldi	r24, 0x18	; 24
     45e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
    
    //set frame format : asynchronous, 8 data bits, 1 stop bit, no parity
    UCSR0C=_BV(UCSZ01)|_BV(UCSZ00);
     462:	86 e0       	ldi	r24, 0x06	; 6
     464:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     468:	08 95       	ret

0000046a <transmit>:
}

void transmit(char value)
{
    loop_until_bit_is_set(UCSR0A, UDRE0);
     46a:	e0 ec       	ldi	r30, 0xC0	; 192
     46c:	f0 e0       	ldi	r31, 0x00	; 0
     46e:	90 81       	ld	r25, Z
     470:	95 ff       	sbrs	r25, 5
     472:	fd cf       	rjmp	.-6      	; 0x46e <transmit+0x4>
    
    UDR0 = value;
     474:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     478:	08 95       	ret

0000047a <transmit_message>:
}

void transmit_message(const char* message)
{
     47a:	cf 93       	push	r28
     47c:	df 93       	push	r29
     47e:	ec 01       	movw	r28, r24
    for(; *message != '\0'; message++) 
     480:	88 81       	ld	r24, Y
     482:	88 23       	and	r24, r24
     484:	31 f0       	breq	.+12     	; 0x492 <transmit_message+0x18>
     486:	21 96       	adiw	r28, 0x01	; 1
        transmit(*message);       
     488:	0e 94 35 02 	call	0x46a	; 0x46a <transmit>
    UDR0 = value;
}

void transmit_message(const char* message)
{
    for(; *message != '\0'; message++) 
     48c:	89 91       	ld	r24, Y+
     48e:	81 11       	cpse	r24, r1
     490:	fb cf       	rjmp	.-10     	; 0x488 <transmit_message+0xe>
        transmit(*message);       
}
     492:	df 91       	pop	r29
     494:	cf 91       	pop	r28
     496:	08 95       	ret

00000498 <init_temperature_sensor>:
float temperatures[NUM_TEMPERATURES];
float average_temperature = 0.0f;

void init_temperature_sensor(void)
{
    init_adc();    
     498:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <init_adc>
     49c:	08 95       	ret

0000049e <get_temperature_in_celsius>:
}

float get_temperature_in_celsius(void)
{
    int reading = read_analog_pin(TEMPERATURE_ANALOG_PORT);
     49e:	81 e0       	ldi	r24, 0x01	; 1
     4a0:	0e 94 db 00 	call	0x1b6	; 0x1b6 <read_analog_pin>
    
    float voltage = reading * (5.0f / 1024.0f);
    
    float temperature = (voltage - 0.5f) * 100;
    
    return temperature;
     4a4:	bc 01       	movw	r22, r24
     4a6:	99 0f       	add	r25, r25
     4a8:	88 0b       	sbc	r24, r24
     4aa:	99 0b       	sbc	r25, r25
     4ac:	0e 94 a4 03 	call	0x748	; 0x748 <__floatsisf>
     4b0:	20 e0       	ldi	r18, 0x00	; 0
     4b2:	30 e0       	ldi	r19, 0x00	; 0
     4b4:	40 ea       	ldi	r20, 0xA0	; 160
     4b6:	5b e3       	ldi	r21, 0x3B	; 59
     4b8:	0e 94 30 04 	call	0x860	; 0x860 <__mulsf3>
     4bc:	20 e0       	ldi	r18, 0x00	; 0
     4be:	30 e0       	ldi	r19, 0x00	; 0
     4c0:	40 e0       	ldi	r20, 0x00	; 0
     4c2:	5f e3       	ldi	r21, 0x3F	; 63
     4c4:	0e 94 c3 02 	call	0x586	; 0x586 <__subsf3>
     4c8:	20 e0       	ldi	r18, 0x00	; 0
     4ca:	30 e0       	ldi	r19, 0x00	; 0
     4cc:	48 ec       	ldi	r20, 0xC8	; 200
     4ce:	52 e4       	ldi	r21, 0x42	; 66
     4d0:	0e 94 30 04 	call	0x860	; 0x860 <__mulsf3>
}
     4d4:	08 95       	ret

000004d6 <get_average_temperature_in_celsius>:

float get_average_temperature_in_celsius(void)
{
	return average_temperature;
     4d6:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <average_temperature>
     4da:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <average_temperature+0x1>
     4de:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <average_temperature+0x2>
     4e2:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <average_temperature+0x3>
}
     4e6:	08 95       	ret

000004e8 <measure_temperature>:

void measure_temperature(void)
{
     4e8:	cf 93       	push	r28
     4ea:	df 93       	push	r29
    static int index = 0;
    
    if(index == NUM_TEMPERATURES)
     4ec:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
     4f0:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x1>
     4f4:	88 97       	sbiw	r24, 0x28	; 40
     4f6:	21 f4       	brne	.+8      	; 0x500 <measure_temperature+0x18>
    {
        index = 0;
     4f8:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <__data_end+0x1>
     4fc:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <__data_end>
    }
    
    temperatures[index] = get_temperature_in_celsius();
     500:	c0 91 0c 01 	lds	r28, 0x010C	; 0x80010c <__data_end>
     504:	d0 91 0d 01 	lds	r29, 0x010D	; 0x80010d <__data_end+0x1>
     508:	0e 94 4f 02 	call	0x49e	; 0x49e <get_temperature_in_celsius>
     50c:	cc 0f       	add	r28, r28
     50e:	dd 1f       	adc	r29, r29
     510:	cc 0f       	add	r28, r28
     512:	dd 1f       	adc	r29, r29
     514:	c8 5a       	subi	r28, 0xA8	; 168
     516:	de 4f       	sbci	r29, 0xFE	; 254
     518:	68 83       	st	Y, r22
     51a:	79 83       	std	Y+1, r23	; 0x01
     51c:	8a 83       	std	Y+2, r24	; 0x02
     51e:	9b 83       	std	Y+3, r25	; 0x03
    
    index++;
     520:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
     524:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x1>
     528:	01 96       	adiw	r24, 0x01	; 1
     52a:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x1>
     52e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
}
     532:	df 91       	pop	r29
     534:	cf 91       	pop	r28
     536:	08 95       	ret

00000538 <calculate_average_temperature>:

void calculate_average_temperature(void)
{
     538:	0f 93       	push	r16
     53a:	1f 93       	push	r17
     53c:	cf 93       	push	r28
     53e:	df 93       	push	r29
     540:	c8 e5       	ldi	r28, 0x58	; 88
     542:	d1 e0       	ldi	r29, 0x01	; 1
     544:	08 ef       	ldi	r16, 0xF8	; 248
     546:	11 e0       	ldi	r17, 0x01	; 1
     548:	60 e0       	ldi	r22, 0x00	; 0
     54a:	70 e0       	ldi	r23, 0x00	; 0
     54c:	cb 01       	movw	r24, r22
    average_temperature = 0.0f; // reset average temperature
    
    for(int i = 0; i < NUM_TEMPERATURES; ++i)
    {
        average_temperature += temperatures[i];
     54e:	29 91       	ld	r18, Y+
     550:	39 91       	ld	r19, Y+
     552:	49 91       	ld	r20, Y+
     554:	59 91       	ld	r21, Y+
     556:	0e 94 c4 02 	call	0x588	; 0x588 <__addsf3>

void calculate_average_temperature(void)
{
    average_temperature = 0.0f; // reset average temperature
    
    for(int i = 0; i < NUM_TEMPERATURES; ++i)
     55a:	c0 17       	cp	r28, r16
     55c:	d1 07       	cpc	r29, r17
     55e:	b9 f7       	brne	.-18     	; 0x54e <calculate_average_temperature+0x16>
    {
        average_temperature += temperatures[i];
    }
    
    average_temperature /= NUM_TEMPERATURES;
     560:	20 e0       	ldi	r18, 0x00	; 0
     562:	30 e0       	ldi	r19, 0x00	; 0
     564:	40 e2       	ldi	r20, 0x20	; 32
     566:	52 e4       	ldi	r21, 0x42	; 66
     568:	0e 94 30 03 	call	0x660	; 0x660 <__divsf3>
     56c:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <average_temperature>
     570:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <average_temperature+0x1>
     574:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <average_temperature+0x2>
     578:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <average_temperature+0x3>
     57c:	df 91       	pop	r29
     57e:	cf 91       	pop	r28
     580:	1f 91       	pop	r17
     582:	0f 91       	pop	r16
     584:	08 95       	ret

00000586 <__subsf3>:
     586:	50 58       	subi	r21, 0x80	; 128

00000588 <__addsf3>:
     588:	bb 27       	eor	r27, r27
     58a:	aa 27       	eor	r26, r26
     58c:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__addsf3x>
     590:	0c 94 f6 03 	jmp	0x7ec	; 0x7ec <__fp_round>
     594:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__fp_pscA>
     598:	38 f0       	brcs	.+14     	; 0x5a8 <__addsf3+0x20>
     59a:	0e 94 ef 03 	call	0x7de	; 0x7de <__fp_pscB>
     59e:	20 f0       	brcs	.+8      	; 0x5a8 <__addsf3+0x20>
     5a0:	39 f4       	brne	.+14     	; 0x5b0 <__addsf3+0x28>
     5a2:	9f 3f       	cpi	r25, 0xFF	; 255
     5a4:	19 f4       	brne	.+6      	; 0x5ac <__addsf3+0x24>
     5a6:	26 f4       	brtc	.+8      	; 0x5b0 <__addsf3+0x28>
     5a8:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__fp_nan>
     5ac:	0e f4       	brtc	.+2      	; 0x5b0 <__addsf3+0x28>
     5ae:	e0 95       	com	r30
     5b0:	e7 fb       	bst	r30, 7
     5b2:	0c 94 df 03 	jmp	0x7be	; 0x7be <__fp_inf>

000005b6 <__addsf3x>:
     5b6:	e9 2f       	mov	r30, r25
     5b8:	0e 94 07 04 	call	0x80e	; 0x80e <__fp_split3>
     5bc:	58 f3       	brcs	.-42     	; 0x594 <__addsf3+0xc>
     5be:	ba 17       	cp	r27, r26
     5c0:	62 07       	cpc	r22, r18
     5c2:	73 07       	cpc	r23, r19
     5c4:	84 07       	cpc	r24, r20
     5c6:	95 07       	cpc	r25, r21
     5c8:	20 f0       	brcs	.+8      	; 0x5d2 <__addsf3x+0x1c>
     5ca:	79 f4       	brne	.+30     	; 0x5ea <__addsf3x+0x34>
     5cc:	a6 f5       	brtc	.+104    	; 0x636 <__addsf3x+0x80>
     5ce:	0c 94 29 04 	jmp	0x852	; 0x852 <__fp_zero>
     5d2:	0e f4       	brtc	.+2      	; 0x5d6 <__addsf3x+0x20>
     5d4:	e0 95       	com	r30
     5d6:	0b 2e       	mov	r0, r27
     5d8:	ba 2f       	mov	r27, r26
     5da:	a0 2d       	mov	r26, r0
     5dc:	0b 01       	movw	r0, r22
     5de:	b9 01       	movw	r22, r18
     5e0:	90 01       	movw	r18, r0
     5e2:	0c 01       	movw	r0, r24
     5e4:	ca 01       	movw	r24, r20
     5e6:	a0 01       	movw	r20, r0
     5e8:	11 24       	eor	r1, r1
     5ea:	ff 27       	eor	r31, r31
     5ec:	59 1b       	sub	r21, r25
     5ee:	99 f0       	breq	.+38     	; 0x616 <__addsf3x+0x60>
     5f0:	59 3f       	cpi	r21, 0xF9	; 249
     5f2:	50 f4       	brcc	.+20     	; 0x608 <__addsf3x+0x52>
     5f4:	50 3e       	cpi	r21, 0xE0	; 224
     5f6:	68 f1       	brcs	.+90     	; 0x652 <__addsf3x+0x9c>
     5f8:	1a 16       	cp	r1, r26
     5fa:	f0 40       	sbci	r31, 0x00	; 0
     5fc:	a2 2f       	mov	r26, r18
     5fe:	23 2f       	mov	r18, r19
     600:	34 2f       	mov	r19, r20
     602:	44 27       	eor	r20, r20
     604:	58 5f       	subi	r21, 0xF8	; 248
     606:	f3 cf       	rjmp	.-26     	; 0x5ee <__addsf3x+0x38>
     608:	46 95       	lsr	r20
     60a:	37 95       	ror	r19
     60c:	27 95       	ror	r18
     60e:	a7 95       	ror	r26
     610:	f0 40       	sbci	r31, 0x00	; 0
     612:	53 95       	inc	r21
     614:	c9 f7       	brne	.-14     	; 0x608 <__addsf3x+0x52>
     616:	7e f4       	brtc	.+30     	; 0x636 <__addsf3x+0x80>
     618:	1f 16       	cp	r1, r31
     61a:	ba 0b       	sbc	r27, r26
     61c:	62 0b       	sbc	r22, r18
     61e:	73 0b       	sbc	r23, r19
     620:	84 0b       	sbc	r24, r20
     622:	ba f0       	brmi	.+46     	; 0x652 <__addsf3x+0x9c>
     624:	91 50       	subi	r25, 0x01	; 1
     626:	a1 f0       	breq	.+40     	; 0x650 <__addsf3x+0x9a>
     628:	ff 0f       	add	r31, r31
     62a:	bb 1f       	adc	r27, r27
     62c:	66 1f       	adc	r22, r22
     62e:	77 1f       	adc	r23, r23
     630:	88 1f       	adc	r24, r24
     632:	c2 f7       	brpl	.-16     	; 0x624 <__addsf3x+0x6e>
     634:	0e c0       	rjmp	.+28     	; 0x652 <__addsf3x+0x9c>
     636:	ba 0f       	add	r27, r26
     638:	62 1f       	adc	r22, r18
     63a:	73 1f       	adc	r23, r19
     63c:	84 1f       	adc	r24, r20
     63e:	48 f4       	brcc	.+18     	; 0x652 <__addsf3x+0x9c>
     640:	87 95       	ror	r24
     642:	77 95       	ror	r23
     644:	67 95       	ror	r22
     646:	b7 95       	ror	r27
     648:	f7 95       	ror	r31
     64a:	9e 3f       	cpi	r25, 0xFE	; 254
     64c:	08 f0       	brcs	.+2      	; 0x650 <__addsf3x+0x9a>
     64e:	b0 cf       	rjmp	.-160    	; 0x5b0 <__addsf3+0x28>
     650:	93 95       	inc	r25
     652:	88 0f       	add	r24, r24
     654:	08 f0       	brcs	.+2      	; 0x658 <__addsf3x+0xa2>
     656:	99 27       	eor	r25, r25
     658:	ee 0f       	add	r30, r30
     65a:	97 95       	ror	r25
     65c:	87 95       	ror	r24
     65e:	08 95       	ret

00000660 <__divsf3>:
     660:	0e 94 44 03 	call	0x688	; 0x688 <__divsf3x>
     664:	0c 94 f6 03 	jmp	0x7ec	; 0x7ec <__fp_round>
     668:	0e 94 ef 03 	call	0x7de	; 0x7de <__fp_pscB>
     66c:	58 f0       	brcs	.+22     	; 0x684 <__divsf3+0x24>
     66e:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__fp_pscA>
     672:	40 f0       	brcs	.+16     	; 0x684 <__divsf3+0x24>
     674:	29 f4       	brne	.+10     	; 0x680 <__divsf3+0x20>
     676:	5f 3f       	cpi	r21, 0xFF	; 255
     678:	29 f0       	breq	.+10     	; 0x684 <__divsf3+0x24>
     67a:	0c 94 df 03 	jmp	0x7be	; 0x7be <__fp_inf>
     67e:	51 11       	cpse	r21, r1
     680:	0c 94 2a 04 	jmp	0x854	; 0x854 <__fp_szero>
     684:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__fp_nan>

00000688 <__divsf3x>:
     688:	0e 94 07 04 	call	0x80e	; 0x80e <__fp_split3>
     68c:	68 f3       	brcs	.-38     	; 0x668 <__divsf3+0x8>

0000068e <__divsf3_pse>:
     68e:	99 23       	and	r25, r25
     690:	b1 f3       	breq	.-20     	; 0x67e <__divsf3+0x1e>
     692:	55 23       	and	r21, r21
     694:	91 f3       	breq	.-28     	; 0x67a <__divsf3+0x1a>
     696:	95 1b       	sub	r25, r21
     698:	55 0b       	sbc	r21, r21
     69a:	bb 27       	eor	r27, r27
     69c:	aa 27       	eor	r26, r26
     69e:	62 17       	cp	r22, r18
     6a0:	73 07       	cpc	r23, r19
     6a2:	84 07       	cpc	r24, r20
     6a4:	38 f0       	brcs	.+14     	; 0x6b4 <__divsf3_pse+0x26>
     6a6:	9f 5f       	subi	r25, 0xFF	; 255
     6a8:	5f 4f       	sbci	r21, 0xFF	; 255
     6aa:	22 0f       	add	r18, r18
     6ac:	33 1f       	adc	r19, r19
     6ae:	44 1f       	adc	r20, r20
     6b0:	aa 1f       	adc	r26, r26
     6b2:	a9 f3       	breq	.-22     	; 0x69e <__divsf3_pse+0x10>
     6b4:	35 d0       	rcall	.+106    	; 0x720 <__divsf3_pse+0x92>
     6b6:	0e 2e       	mov	r0, r30
     6b8:	3a f0       	brmi	.+14     	; 0x6c8 <__divsf3_pse+0x3a>
     6ba:	e0 e8       	ldi	r30, 0x80	; 128
     6bc:	32 d0       	rcall	.+100    	; 0x722 <__divsf3_pse+0x94>
     6be:	91 50       	subi	r25, 0x01	; 1
     6c0:	50 40       	sbci	r21, 0x00	; 0
     6c2:	e6 95       	lsr	r30
     6c4:	00 1c       	adc	r0, r0
     6c6:	ca f7       	brpl	.-14     	; 0x6ba <__divsf3_pse+0x2c>
     6c8:	2b d0       	rcall	.+86     	; 0x720 <__divsf3_pse+0x92>
     6ca:	fe 2f       	mov	r31, r30
     6cc:	29 d0       	rcall	.+82     	; 0x720 <__divsf3_pse+0x92>
     6ce:	66 0f       	add	r22, r22
     6d0:	77 1f       	adc	r23, r23
     6d2:	88 1f       	adc	r24, r24
     6d4:	bb 1f       	adc	r27, r27
     6d6:	26 17       	cp	r18, r22
     6d8:	37 07       	cpc	r19, r23
     6da:	48 07       	cpc	r20, r24
     6dc:	ab 07       	cpc	r26, r27
     6de:	b0 e8       	ldi	r27, 0x80	; 128
     6e0:	09 f0       	breq	.+2      	; 0x6e4 <__divsf3_pse+0x56>
     6e2:	bb 0b       	sbc	r27, r27
     6e4:	80 2d       	mov	r24, r0
     6e6:	bf 01       	movw	r22, r30
     6e8:	ff 27       	eor	r31, r31
     6ea:	93 58       	subi	r25, 0x83	; 131
     6ec:	5f 4f       	sbci	r21, 0xFF	; 255
     6ee:	3a f0       	brmi	.+14     	; 0x6fe <__divsf3_pse+0x70>
     6f0:	9e 3f       	cpi	r25, 0xFE	; 254
     6f2:	51 05       	cpc	r21, r1
     6f4:	78 f0       	brcs	.+30     	; 0x714 <__divsf3_pse+0x86>
     6f6:	0c 94 df 03 	jmp	0x7be	; 0x7be <__fp_inf>
     6fa:	0c 94 2a 04 	jmp	0x854	; 0x854 <__fp_szero>
     6fe:	5f 3f       	cpi	r21, 0xFF	; 255
     700:	e4 f3       	brlt	.-8      	; 0x6fa <__divsf3_pse+0x6c>
     702:	98 3e       	cpi	r25, 0xE8	; 232
     704:	d4 f3       	brlt	.-12     	; 0x6fa <__divsf3_pse+0x6c>
     706:	86 95       	lsr	r24
     708:	77 95       	ror	r23
     70a:	67 95       	ror	r22
     70c:	b7 95       	ror	r27
     70e:	f7 95       	ror	r31
     710:	9f 5f       	subi	r25, 0xFF	; 255
     712:	c9 f7       	brne	.-14     	; 0x706 <__divsf3_pse+0x78>
     714:	88 0f       	add	r24, r24
     716:	91 1d       	adc	r25, r1
     718:	96 95       	lsr	r25
     71a:	87 95       	ror	r24
     71c:	97 f9       	bld	r25, 7
     71e:	08 95       	ret
     720:	e1 e0       	ldi	r30, 0x01	; 1
     722:	66 0f       	add	r22, r22
     724:	77 1f       	adc	r23, r23
     726:	88 1f       	adc	r24, r24
     728:	bb 1f       	adc	r27, r27
     72a:	62 17       	cp	r22, r18
     72c:	73 07       	cpc	r23, r19
     72e:	84 07       	cpc	r24, r20
     730:	ba 07       	cpc	r27, r26
     732:	20 f0       	brcs	.+8      	; 0x73c <__divsf3_pse+0xae>
     734:	62 1b       	sub	r22, r18
     736:	73 0b       	sbc	r23, r19
     738:	84 0b       	sbc	r24, r20
     73a:	ba 0b       	sbc	r27, r26
     73c:	ee 1f       	adc	r30, r30
     73e:	88 f7       	brcc	.-30     	; 0x722 <__divsf3_pse+0x94>
     740:	e0 95       	com	r30
     742:	08 95       	ret

00000744 <__floatunsisf>:
     744:	e8 94       	clt
     746:	09 c0       	rjmp	.+18     	; 0x75a <__floatsisf+0x12>

00000748 <__floatsisf>:
     748:	97 fb       	bst	r25, 7
     74a:	3e f4       	brtc	.+14     	; 0x75a <__floatsisf+0x12>
     74c:	90 95       	com	r25
     74e:	80 95       	com	r24
     750:	70 95       	com	r23
     752:	61 95       	neg	r22
     754:	7f 4f       	sbci	r23, 0xFF	; 255
     756:	8f 4f       	sbci	r24, 0xFF	; 255
     758:	9f 4f       	sbci	r25, 0xFF	; 255
     75a:	99 23       	and	r25, r25
     75c:	a9 f0       	breq	.+42     	; 0x788 <__floatsisf+0x40>
     75e:	f9 2f       	mov	r31, r25
     760:	96 e9       	ldi	r25, 0x96	; 150
     762:	bb 27       	eor	r27, r27
     764:	93 95       	inc	r25
     766:	f6 95       	lsr	r31
     768:	87 95       	ror	r24
     76a:	77 95       	ror	r23
     76c:	67 95       	ror	r22
     76e:	b7 95       	ror	r27
     770:	f1 11       	cpse	r31, r1
     772:	f8 cf       	rjmp	.-16     	; 0x764 <__floatsisf+0x1c>
     774:	fa f4       	brpl	.+62     	; 0x7b4 <__floatsisf+0x6c>
     776:	bb 0f       	add	r27, r27
     778:	11 f4       	brne	.+4      	; 0x77e <__floatsisf+0x36>
     77a:	60 ff       	sbrs	r22, 0
     77c:	1b c0       	rjmp	.+54     	; 0x7b4 <__floatsisf+0x6c>
     77e:	6f 5f       	subi	r22, 0xFF	; 255
     780:	7f 4f       	sbci	r23, 0xFF	; 255
     782:	8f 4f       	sbci	r24, 0xFF	; 255
     784:	9f 4f       	sbci	r25, 0xFF	; 255
     786:	16 c0       	rjmp	.+44     	; 0x7b4 <__floatsisf+0x6c>
     788:	88 23       	and	r24, r24
     78a:	11 f0       	breq	.+4      	; 0x790 <__floatsisf+0x48>
     78c:	96 e9       	ldi	r25, 0x96	; 150
     78e:	11 c0       	rjmp	.+34     	; 0x7b2 <__floatsisf+0x6a>
     790:	77 23       	and	r23, r23
     792:	21 f0       	breq	.+8      	; 0x79c <__floatsisf+0x54>
     794:	9e e8       	ldi	r25, 0x8E	; 142
     796:	87 2f       	mov	r24, r23
     798:	76 2f       	mov	r23, r22
     79a:	05 c0       	rjmp	.+10     	; 0x7a6 <__floatsisf+0x5e>
     79c:	66 23       	and	r22, r22
     79e:	71 f0       	breq	.+28     	; 0x7bc <__floatsisf+0x74>
     7a0:	96 e8       	ldi	r25, 0x86	; 134
     7a2:	86 2f       	mov	r24, r22
     7a4:	70 e0       	ldi	r23, 0x00	; 0
     7a6:	60 e0       	ldi	r22, 0x00	; 0
     7a8:	2a f0       	brmi	.+10     	; 0x7b4 <__floatsisf+0x6c>
     7aa:	9a 95       	dec	r25
     7ac:	66 0f       	add	r22, r22
     7ae:	77 1f       	adc	r23, r23
     7b0:	88 1f       	adc	r24, r24
     7b2:	da f7       	brpl	.-10     	; 0x7aa <__floatsisf+0x62>
     7b4:	88 0f       	add	r24, r24
     7b6:	96 95       	lsr	r25
     7b8:	87 95       	ror	r24
     7ba:	97 f9       	bld	r25, 7
     7bc:	08 95       	ret

000007be <__fp_inf>:
     7be:	97 f9       	bld	r25, 7
     7c0:	9f 67       	ori	r25, 0x7F	; 127
     7c2:	80 e8       	ldi	r24, 0x80	; 128
     7c4:	70 e0       	ldi	r23, 0x00	; 0
     7c6:	60 e0       	ldi	r22, 0x00	; 0
     7c8:	08 95       	ret

000007ca <__fp_nan>:
     7ca:	9f ef       	ldi	r25, 0xFF	; 255
     7cc:	80 ec       	ldi	r24, 0xC0	; 192
     7ce:	08 95       	ret

000007d0 <__fp_pscA>:
     7d0:	00 24       	eor	r0, r0
     7d2:	0a 94       	dec	r0
     7d4:	16 16       	cp	r1, r22
     7d6:	17 06       	cpc	r1, r23
     7d8:	18 06       	cpc	r1, r24
     7da:	09 06       	cpc	r0, r25
     7dc:	08 95       	ret

000007de <__fp_pscB>:
     7de:	00 24       	eor	r0, r0
     7e0:	0a 94       	dec	r0
     7e2:	12 16       	cp	r1, r18
     7e4:	13 06       	cpc	r1, r19
     7e6:	14 06       	cpc	r1, r20
     7e8:	05 06       	cpc	r0, r21
     7ea:	08 95       	ret

000007ec <__fp_round>:
     7ec:	09 2e       	mov	r0, r25
     7ee:	03 94       	inc	r0
     7f0:	00 0c       	add	r0, r0
     7f2:	11 f4       	brne	.+4      	; 0x7f8 <__fp_round+0xc>
     7f4:	88 23       	and	r24, r24
     7f6:	52 f0       	brmi	.+20     	; 0x80c <__fp_round+0x20>
     7f8:	bb 0f       	add	r27, r27
     7fa:	40 f4       	brcc	.+16     	; 0x80c <__fp_round+0x20>
     7fc:	bf 2b       	or	r27, r31
     7fe:	11 f4       	brne	.+4      	; 0x804 <__fp_round+0x18>
     800:	60 ff       	sbrs	r22, 0
     802:	04 c0       	rjmp	.+8      	; 0x80c <__fp_round+0x20>
     804:	6f 5f       	subi	r22, 0xFF	; 255
     806:	7f 4f       	sbci	r23, 0xFF	; 255
     808:	8f 4f       	sbci	r24, 0xFF	; 255
     80a:	9f 4f       	sbci	r25, 0xFF	; 255
     80c:	08 95       	ret

0000080e <__fp_split3>:
     80e:	57 fd       	sbrc	r21, 7
     810:	90 58       	subi	r25, 0x80	; 128
     812:	44 0f       	add	r20, r20
     814:	55 1f       	adc	r21, r21
     816:	59 f0       	breq	.+22     	; 0x82e <__fp_splitA+0x10>
     818:	5f 3f       	cpi	r21, 0xFF	; 255
     81a:	71 f0       	breq	.+28     	; 0x838 <__fp_splitA+0x1a>
     81c:	47 95       	ror	r20

0000081e <__fp_splitA>:
     81e:	88 0f       	add	r24, r24
     820:	97 fb       	bst	r25, 7
     822:	99 1f       	adc	r25, r25
     824:	61 f0       	breq	.+24     	; 0x83e <__fp_splitA+0x20>
     826:	9f 3f       	cpi	r25, 0xFF	; 255
     828:	79 f0       	breq	.+30     	; 0x848 <__fp_splitA+0x2a>
     82a:	87 95       	ror	r24
     82c:	08 95       	ret
     82e:	12 16       	cp	r1, r18
     830:	13 06       	cpc	r1, r19
     832:	14 06       	cpc	r1, r20
     834:	55 1f       	adc	r21, r21
     836:	f2 cf       	rjmp	.-28     	; 0x81c <__fp_split3+0xe>
     838:	46 95       	lsr	r20
     83a:	f1 df       	rcall	.-30     	; 0x81e <__fp_splitA>
     83c:	08 c0       	rjmp	.+16     	; 0x84e <__fp_splitA+0x30>
     83e:	16 16       	cp	r1, r22
     840:	17 06       	cpc	r1, r23
     842:	18 06       	cpc	r1, r24
     844:	99 1f       	adc	r25, r25
     846:	f1 cf       	rjmp	.-30     	; 0x82a <__fp_splitA+0xc>
     848:	86 95       	lsr	r24
     84a:	71 05       	cpc	r23, r1
     84c:	61 05       	cpc	r22, r1
     84e:	08 94       	sec
     850:	08 95       	ret

00000852 <__fp_zero>:
     852:	e8 94       	clt

00000854 <__fp_szero>:
     854:	bb 27       	eor	r27, r27
     856:	66 27       	eor	r22, r22
     858:	77 27       	eor	r23, r23
     85a:	cb 01       	movw	r24, r22
     85c:	97 f9       	bld	r25, 7
     85e:	08 95       	ret

00000860 <__mulsf3>:
     860:	0e 94 43 04 	call	0x886	; 0x886 <__mulsf3x>
     864:	0c 94 f6 03 	jmp	0x7ec	; 0x7ec <__fp_round>
     868:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__fp_pscA>
     86c:	38 f0       	brcs	.+14     	; 0x87c <__mulsf3+0x1c>
     86e:	0e 94 ef 03 	call	0x7de	; 0x7de <__fp_pscB>
     872:	20 f0       	brcs	.+8      	; 0x87c <__mulsf3+0x1c>
     874:	95 23       	and	r25, r21
     876:	11 f0       	breq	.+4      	; 0x87c <__mulsf3+0x1c>
     878:	0c 94 df 03 	jmp	0x7be	; 0x7be <__fp_inf>
     87c:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__fp_nan>
     880:	11 24       	eor	r1, r1
     882:	0c 94 2a 04 	jmp	0x854	; 0x854 <__fp_szero>

00000886 <__mulsf3x>:
     886:	0e 94 07 04 	call	0x80e	; 0x80e <__fp_split3>
     88a:	70 f3       	brcs	.-36     	; 0x868 <__mulsf3+0x8>

0000088c <__mulsf3_pse>:
     88c:	95 9f       	mul	r25, r21
     88e:	c1 f3       	breq	.-16     	; 0x880 <__mulsf3+0x20>
     890:	95 0f       	add	r25, r21
     892:	50 e0       	ldi	r21, 0x00	; 0
     894:	55 1f       	adc	r21, r21
     896:	62 9f       	mul	r22, r18
     898:	f0 01       	movw	r30, r0
     89a:	72 9f       	mul	r23, r18
     89c:	bb 27       	eor	r27, r27
     89e:	f0 0d       	add	r31, r0
     8a0:	b1 1d       	adc	r27, r1
     8a2:	63 9f       	mul	r22, r19
     8a4:	aa 27       	eor	r26, r26
     8a6:	f0 0d       	add	r31, r0
     8a8:	b1 1d       	adc	r27, r1
     8aa:	aa 1f       	adc	r26, r26
     8ac:	64 9f       	mul	r22, r20
     8ae:	66 27       	eor	r22, r22
     8b0:	b0 0d       	add	r27, r0
     8b2:	a1 1d       	adc	r26, r1
     8b4:	66 1f       	adc	r22, r22
     8b6:	82 9f       	mul	r24, r18
     8b8:	22 27       	eor	r18, r18
     8ba:	b0 0d       	add	r27, r0
     8bc:	a1 1d       	adc	r26, r1
     8be:	62 1f       	adc	r22, r18
     8c0:	73 9f       	mul	r23, r19
     8c2:	b0 0d       	add	r27, r0
     8c4:	a1 1d       	adc	r26, r1
     8c6:	62 1f       	adc	r22, r18
     8c8:	83 9f       	mul	r24, r19
     8ca:	a0 0d       	add	r26, r0
     8cc:	61 1d       	adc	r22, r1
     8ce:	22 1f       	adc	r18, r18
     8d0:	74 9f       	mul	r23, r20
     8d2:	33 27       	eor	r19, r19
     8d4:	a0 0d       	add	r26, r0
     8d6:	61 1d       	adc	r22, r1
     8d8:	23 1f       	adc	r18, r19
     8da:	84 9f       	mul	r24, r20
     8dc:	60 0d       	add	r22, r0
     8de:	21 1d       	adc	r18, r1
     8e0:	82 2f       	mov	r24, r18
     8e2:	76 2f       	mov	r23, r22
     8e4:	6a 2f       	mov	r22, r26
     8e6:	11 24       	eor	r1, r1
     8e8:	9f 57       	subi	r25, 0x7F	; 127
     8ea:	50 40       	sbci	r21, 0x00	; 0
     8ec:	9a f0       	brmi	.+38     	; 0x914 <__stack+0x15>
     8ee:	f1 f0       	breq	.+60     	; 0x92c <__stack+0x2d>
     8f0:	88 23       	and	r24, r24
     8f2:	4a f0       	brmi	.+18     	; 0x906 <__stack+0x7>
     8f4:	ee 0f       	add	r30, r30
     8f6:	ff 1f       	adc	r31, r31
     8f8:	bb 1f       	adc	r27, r27
     8fa:	66 1f       	adc	r22, r22
     8fc:	77 1f       	adc	r23, r23
     8fe:	88 1f       	adc	r24, r24
     900:	91 50       	subi	r25, 0x01	; 1
     902:	50 40       	sbci	r21, 0x00	; 0
     904:	a9 f7       	brne	.-22     	; 0x8f0 <__mulsf3_pse+0x64>
     906:	9e 3f       	cpi	r25, 0xFE	; 254
     908:	51 05       	cpc	r21, r1
     90a:	80 f0       	brcs	.+32     	; 0x92c <__stack+0x2d>
     90c:	0c 94 df 03 	jmp	0x7be	; 0x7be <__fp_inf>
     910:	0c 94 2a 04 	jmp	0x854	; 0x854 <__fp_szero>
     914:	5f 3f       	cpi	r21, 0xFF	; 255
     916:	e4 f3       	brlt	.-8      	; 0x910 <__stack+0x11>
     918:	98 3e       	cpi	r25, 0xE8	; 232
     91a:	d4 f3       	brlt	.-12     	; 0x910 <__stack+0x11>
     91c:	86 95       	lsr	r24
     91e:	77 95       	ror	r23
     920:	67 95       	ror	r22
     922:	b7 95       	ror	r27
     924:	f7 95       	ror	r31
     926:	e7 95       	ror	r30
     928:	9f 5f       	subi	r25, 0xFF	; 255
     92a:	c1 f7       	brne	.-16     	; 0x91c <__stack+0x1d>
     92c:	fe 2b       	or	r31, r30
     92e:	88 0f       	add	r24, r24
     930:	91 1d       	adc	r25, r1
     932:	96 95       	lsr	r25
     934:	87 95       	ror	r24
     936:	97 f9       	bld	r25, 7
     938:	08 95       	ret

0000093a <vfprintf>:
     93a:	a0 e1       	ldi	r26, 0x10	; 16
     93c:	b0 e0       	ldi	r27, 0x00	; 0
     93e:	e3 ea       	ldi	r30, 0xA3	; 163
     940:	f4 e0       	ldi	r31, 0x04	; 4
     942:	0c 94 1a 08 	jmp	0x1034	; 0x1034 <__prologue_saves__>
     946:	7c 01       	movw	r14, r24
     948:	1b 01       	movw	r2, r22
     94a:	6a 01       	movw	r12, r20
     94c:	fc 01       	movw	r30, r24
     94e:	17 82       	std	Z+7, r1	; 0x07
     950:	16 82       	std	Z+6, r1	; 0x06
     952:	83 81       	ldd	r24, Z+3	; 0x03
     954:	81 ff       	sbrs	r24, 1
     956:	44 c3       	rjmp	.+1672   	; 0xfe0 <vfprintf+0x6a6>
     958:	9e 01       	movw	r18, r28
     95a:	2f 5f       	subi	r18, 0xFF	; 255
     95c:	3f 4f       	sbci	r19, 0xFF	; 255
     95e:	39 01       	movw	r6, r18
     960:	f7 01       	movw	r30, r14
     962:	93 81       	ldd	r25, Z+3	; 0x03
     964:	f1 01       	movw	r30, r2
     966:	93 fd       	sbrc	r25, 3
     968:	85 91       	lpm	r24, Z+
     96a:	93 ff       	sbrs	r25, 3
     96c:	81 91       	ld	r24, Z+
     96e:	1f 01       	movw	r2, r30
     970:	88 23       	and	r24, r24
     972:	09 f4       	brne	.+2      	; 0x976 <vfprintf+0x3c>
     974:	31 c3       	rjmp	.+1634   	; 0xfd8 <vfprintf+0x69e>
     976:	85 32       	cpi	r24, 0x25	; 37
     978:	39 f4       	brne	.+14     	; 0x988 <vfprintf+0x4e>
     97a:	93 fd       	sbrc	r25, 3
     97c:	85 91       	lpm	r24, Z+
     97e:	93 ff       	sbrs	r25, 3
     980:	81 91       	ld	r24, Z+
     982:	1f 01       	movw	r2, r30
     984:	85 32       	cpi	r24, 0x25	; 37
     986:	39 f4       	brne	.+14     	; 0x996 <vfprintf+0x5c>
     988:	b7 01       	movw	r22, r14
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     990:	56 01       	movw	r10, r12
     992:	65 01       	movw	r12, r10
     994:	e5 cf       	rjmp	.-54     	; 0x960 <vfprintf+0x26>
     996:	10 e0       	ldi	r17, 0x00	; 0
     998:	51 2c       	mov	r5, r1
     99a:	91 2c       	mov	r9, r1
     99c:	ff e1       	ldi	r31, 0x1F	; 31
     99e:	f9 15       	cp	r31, r9
     9a0:	d8 f0       	brcs	.+54     	; 0x9d8 <vfprintf+0x9e>
     9a2:	8b 32       	cpi	r24, 0x2B	; 43
     9a4:	79 f0       	breq	.+30     	; 0x9c4 <vfprintf+0x8a>
     9a6:	38 f4       	brcc	.+14     	; 0x9b6 <vfprintf+0x7c>
     9a8:	80 32       	cpi	r24, 0x20	; 32
     9aa:	79 f0       	breq	.+30     	; 0x9ca <vfprintf+0x90>
     9ac:	83 32       	cpi	r24, 0x23	; 35
     9ae:	a1 f4       	brne	.+40     	; 0x9d8 <vfprintf+0x9e>
     9b0:	f9 2d       	mov	r31, r9
     9b2:	f0 61       	ori	r31, 0x10	; 16
     9b4:	2e c0       	rjmp	.+92     	; 0xa12 <vfprintf+0xd8>
     9b6:	8d 32       	cpi	r24, 0x2D	; 45
     9b8:	61 f0       	breq	.+24     	; 0x9d2 <vfprintf+0x98>
     9ba:	80 33       	cpi	r24, 0x30	; 48
     9bc:	69 f4       	brne	.+26     	; 0x9d8 <vfprintf+0x9e>
     9be:	29 2d       	mov	r18, r9
     9c0:	21 60       	ori	r18, 0x01	; 1
     9c2:	2d c0       	rjmp	.+90     	; 0xa1e <vfprintf+0xe4>
     9c4:	39 2d       	mov	r19, r9
     9c6:	32 60       	ori	r19, 0x02	; 2
     9c8:	93 2e       	mov	r9, r19
     9ca:	89 2d       	mov	r24, r9
     9cc:	84 60       	ori	r24, 0x04	; 4
     9ce:	98 2e       	mov	r9, r24
     9d0:	2a c0       	rjmp	.+84     	; 0xa26 <vfprintf+0xec>
     9d2:	e9 2d       	mov	r30, r9
     9d4:	e8 60       	ori	r30, 0x08	; 8
     9d6:	15 c0       	rjmp	.+42     	; 0xa02 <vfprintf+0xc8>
     9d8:	97 fc       	sbrc	r9, 7
     9da:	2d c0       	rjmp	.+90     	; 0xa36 <vfprintf+0xfc>
     9dc:	20 ed       	ldi	r18, 0xD0	; 208
     9de:	28 0f       	add	r18, r24
     9e0:	2a 30       	cpi	r18, 0x0A	; 10
     9e2:	88 f4       	brcc	.+34     	; 0xa06 <vfprintf+0xcc>
     9e4:	96 fe       	sbrs	r9, 6
     9e6:	06 c0       	rjmp	.+12     	; 0x9f4 <vfprintf+0xba>
     9e8:	3a e0       	ldi	r19, 0x0A	; 10
     9ea:	13 9f       	mul	r17, r19
     9ec:	20 0d       	add	r18, r0
     9ee:	11 24       	eor	r1, r1
     9f0:	12 2f       	mov	r17, r18
     9f2:	19 c0       	rjmp	.+50     	; 0xa26 <vfprintf+0xec>
     9f4:	8a e0       	ldi	r24, 0x0A	; 10
     9f6:	58 9e       	mul	r5, r24
     9f8:	20 0d       	add	r18, r0
     9fa:	11 24       	eor	r1, r1
     9fc:	52 2e       	mov	r5, r18
     9fe:	e9 2d       	mov	r30, r9
     a00:	e0 62       	ori	r30, 0x20	; 32
     a02:	9e 2e       	mov	r9, r30
     a04:	10 c0       	rjmp	.+32     	; 0xa26 <vfprintf+0xec>
     a06:	8e 32       	cpi	r24, 0x2E	; 46
     a08:	31 f4       	brne	.+12     	; 0xa16 <vfprintf+0xdc>
     a0a:	96 fc       	sbrc	r9, 6
     a0c:	e5 c2       	rjmp	.+1482   	; 0xfd8 <vfprintf+0x69e>
     a0e:	f9 2d       	mov	r31, r9
     a10:	f0 64       	ori	r31, 0x40	; 64
     a12:	9f 2e       	mov	r9, r31
     a14:	08 c0       	rjmp	.+16     	; 0xa26 <vfprintf+0xec>
     a16:	8c 36       	cpi	r24, 0x6C	; 108
     a18:	21 f4       	brne	.+8      	; 0xa22 <vfprintf+0xe8>
     a1a:	29 2d       	mov	r18, r9
     a1c:	20 68       	ori	r18, 0x80	; 128
     a1e:	92 2e       	mov	r9, r18
     a20:	02 c0       	rjmp	.+4      	; 0xa26 <vfprintf+0xec>
     a22:	88 36       	cpi	r24, 0x68	; 104
     a24:	41 f4       	brne	.+16     	; 0xa36 <vfprintf+0xfc>
     a26:	f1 01       	movw	r30, r2
     a28:	93 fd       	sbrc	r25, 3
     a2a:	85 91       	lpm	r24, Z+
     a2c:	93 ff       	sbrs	r25, 3
     a2e:	81 91       	ld	r24, Z+
     a30:	1f 01       	movw	r2, r30
     a32:	81 11       	cpse	r24, r1
     a34:	b3 cf       	rjmp	.-154    	; 0x99c <vfprintf+0x62>
     a36:	9b eb       	ldi	r25, 0xBB	; 187
     a38:	98 0f       	add	r25, r24
     a3a:	93 30       	cpi	r25, 0x03	; 3
     a3c:	20 f4       	brcc	.+8      	; 0xa46 <vfprintf+0x10c>
     a3e:	99 2d       	mov	r25, r9
     a40:	90 61       	ori	r25, 0x10	; 16
     a42:	80 5e       	subi	r24, 0xE0	; 224
     a44:	07 c0       	rjmp	.+14     	; 0xa54 <vfprintf+0x11a>
     a46:	9b e9       	ldi	r25, 0x9B	; 155
     a48:	98 0f       	add	r25, r24
     a4a:	93 30       	cpi	r25, 0x03	; 3
     a4c:	08 f0       	brcs	.+2      	; 0xa50 <vfprintf+0x116>
     a4e:	66 c1       	rjmp	.+716    	; 0xd1c <vfprintf+0x3e2>
     a50:	99 2d       	mov	r25, r9
     a52:	9f 7e       	andi	r25, 0xEF	; 239
     a54:	96 ff       	sbrs	r25, 6
     a56:	16 e0       	ldi	r17, 0x06	; 6
     a58:	9f 73       	andi	r25, 0x3F	; 63
     a5a:	99 2e       	mov	r9, r25
     a5c:	85 36       	cpi	r24, 0x65	; 101
     a5e:	19 f4       	brne	.+6      	; 0xa66 <vfprintf+0x12c>
     a60:	90 64       	ori	r25, 0x40	; 64
     a62:	99 2e       	mov	r9, r25
     a64:	08 c0       	rjmp	.+16     	; 0xa76 <vfprintf+0x13c>
     a66:	86 36       	cpi	r24, 0x66	; 102
     a68:	21 f4       	brne	.+8      	; 0xa72 <vfprintf+0x138>
     a6a:	39 2f       	mov	r19, r25
     a6c:	30 68       	ori	r19, 0x80	; 128
     a6e:	93 2e       	mov	r9, r19
     a70:	02 c0       	rjmp	.+4      	; 0xa76 <vfprintf+0x13c>
     a72:	11 11       	cpse	r17, r1
     a74:	11 50       	subi	r17, 0x01	; 1
     a76:	97 fe       	sbrs	r9, 7
     a78:	07 c0       	rjmp	.+14     	; 0xa88 <vfprintf+0x14e>
     a7a:	1c 33       	cpi	r17, 0x3C	; 60
     a7c:	50 f4       	brcc	.+20     	; 0xa92 <vfprintf+0x158>
     a7e:	44 24       	eor	r4, r4
     a80:	43 94       	inc	r4
     a82:	41 0e       	add	r4, r17
     a84:	27 e0       	ldi	r18, 0x07	; 7
     a86:	0b c0       	rjmp	.+22     	; 0xa9e <vfprintf+0x164>
     a88:	18 30       	cpi	r17, 0x08	; 8
     a8a:	38 f0       	brcs	.+14     	; 0xa9a <vfprintf+0x160>
     a8c:	27 e0       	ldi	r18, 0x07	; 7
     a8e:	17 e0       	ldi	r17, 0x07	; 7
     a90:	05 c0       	rjmp	.+10     	; 0xa9c <vfprintf+0x162>
     a92:	27 e0       	ldi	r18, 0x07	; 7
     a94:	9c e3       	ldi	r25, 0x3C	; 60
     a96:	49 2e       	mov	r4, r25
     a98:	02 c0       	rjmp	.+4      	; 0xa9e <vfprintf+0x164>
     a9a:	21 2f       	mov	r18, r17
     a9c:	41 2c       	mov	r4, r1
     a9e:	56 01       	movw	r10, r12
     aa0:	84 e0       	ldi	r24, 0x04	; 4
     aa2:	a8 0e       	add	r10, r24
     aa4:	b1 1c       	adc	r11, r1
     aa6:	f6 01       	movw	r30, r12
     aa8:	60 81       	ld	r22, Z
     aaa:	71 81       	ldd	r23, Z+1	; 0x01
     aac:	82 81       	ldd	r24, Z+2	; 0x02
     aae:	93 81       	ldd	r25, Z+3	; 0x03
     ab0:	04 2d       	mov	r16, r4
     ab2:	a3 01       	movw	r20, r6
     ab4:	0e 94 51 08 	call	0x10a2	; 0x10a2 <__ftoa_engine>
     ab8:	6c 01       	movw	r12, r24
     aba:	f9 81       	ldd	r31, Y+1	; 0x01
     abc:	fc 87       	std	Y+12, r31	; 0x0c
     abe:	f0 ff       	sbrs	r31, 0
     ac0:	02 c0       	rjmp	.+4      	; 0xac6 <vfprintf+0x18c>
     ac2:	f3 ff       	sbrs	r31, 3
     ac4:	06 c0       	rjmp	.+12     	; 0xad2 <vfprintf+0x198>
     ac6:	91 fc       	sbrc	r9, 1
     ac8:	06 c0       	rjmp	.+12     	; 0xad6 <vfprintf+0x19c>
     aca:	92 fe       	sbrs	r9, 2
     acc:	06 c0       	rjmp	.+12     	; 0xada <vfprintf+0x1a0>
     ace:	00 e2       	ldi	r16, 0x20	; 32
     ad0:	05 c0       	rjmp	.+10     	; 0xadc <vfprintf+0x1a2>
     ad2:	0d e2       	ldi	r16, 0x2D	; 45
     ad4:	03 c0       	rjmp	.+6      	; 0xadc <vfprintf+0x1a2>
     ad6:	0b e2       	ldi	r16, 0x2B	; 43
     ad8:	01 c0       	rjmp	.+2      	; 0xadc <vfprintf+0x1a2>
     ada:	00 e0       	ldi	r16, 0x00	; 0
     adc:	8c 85       	ldd	r24, Y+12	; 0x0c
     ade:	8c 70       	andi	r24, 0x0C	; 12
     ae0:	19 f0       	breq	.+6      	; 0xae8 <vfprintf+0x1ae>
     ae2:	01 11       	cpse	r16, r1
     ae4:	5a c2       	rjmp	.+1204   	; 0xf9a <vfprintf+0x660>
     ae6:	9b c2       	rjmp	.+1334   	; 0x101e <vfprintf+0x6e4>
     ae8:	97 fe       	sbrs	r9, 7
     aea:	10 c0       	rjmp	.+32     	; 0xb0c <vfprintf+0x1d2>
     aec:	4c 0c       	add	r4, r12
     aee:	fc 85       	ldd	r31, Y+12	; 0x0c
     af0:	f4 ff       	sbrs	r31, 4
     af2:	04 c0       	rjmp	.+8      	; 0xafc <vfprintf+0x1c2>
     af4:	8a 81       	ldd	r24, Y+2	; 0x02
     af6:	81 33       	cpi	r24, 0x31	; 49
     af8:	09 f4       	brne	.+2      	; 0xafc <vfprintf+0x1c2>
     afa:	4a 94       	dec	r4
     afc:	14 14       	cp	r1, r4
     afe:	74 f5       	brge	.+92     	; 0xb5c <vfprintf+0x222>
     b00:	28 e0       	ldi	r18, 0x08	; 8
     b02:	24 15       	cp	r18, r4
     b04:	78 f5       	brcc	.+94     	; 0xb64 <vfprintf+0x22a>
     b06:	88 e0       	ldi	r24, 0x08	; 8
     b08:	48 2e       	mov	r4, r24
     b0a:	2c c0       	rjmp	.+88     	; 0xb64 <vfprintf+0x22a>
     b0c:	96 fc       	sbrc	r9, 6
     b0e:	2a c0       	rjmp	.+84     	; 0xb64 <vfprintf+0x22a>
     b10:	81 2f       	mov	r24, r17
     b12:	90 e0       	ldi	r25, 0x00	; 0
     b14:	8c 15       	cp	r24, r12
     b16:	9d 05       	cpc	r25, r13
     b18:	9c f0       	brlt	.+38     	; 0xb40 <vfprintf+0x206>
     b1a:	3c ef       	ldi	r19, 0xFC	; 252
     b1c:	c3 16       	cp	r12, r19
     b1e:	3f ef       	ldi	r19, 0xFF	; 255
     b20:	d3 06       	cpc	r13, r19
     b22:	74 f0       	brlt	.+28     	; 0xb40 <vfprintf+0x206>
     b24:	89 2d       	mov	r24, r9
     b26:	80 68       	ori	r24, 0x80	; 128
     b28:	98 2e       	mov	r9, r24
     b2a:	0a c0       	rjmp	.+20     	; 0xb40 <vfprintf+0x206>
     b2c:	e2 e0       	ldi	r30, 0x02	; 2
     b2e:	f0 e0       	ldi	r31, 0x00	; 0
     b30:	ec 0f       	add	r30, r28
     b32:	fd 1f       	adc	r31, r29
     b34:	e1 0f       	add	r30, r17
     b36:	f1 1d       	adc	r31, r1
     b38:	80 81       	ld	r24, Z
     b3a:	80 33       	cpi	r24, 0x30	; 48
     b3c:	19 f4       	brne	.+6      	; 0xb44 <vfprintf+0x20a>
     b3e:	11 50       	subi	r17, 0x01	; 1
     b40:	11 11       	cpse	r17, r1
     b42:	f4 cf       	rjmp	.-24     	; 0xb2c <vfprintf+0x1f2>
     b44:	97 fe       	sbrs	r9, 7
     b46:	0e c0       	rjmp	.+28     	; 0xb64 <vfprintf+0x22a>
     b48:	44 24       	eor	r4, r4
     b4a:	43 94       	inc	r4
     b4c:	41 0e       	add	r4, r17
     b4e:	81 2f       	mov	r24, r17
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	c8 16       	cp	r12, r24
     b54:	d9 06       	cpc	r13, r25
     b56:	2c f4       	brge	.+10     	; 0xb62 <vfprintf+0x228>
     b58:	1c 19       	sub	r17, r12
     b5a:	04 c0       	rjmp	.+8      	; 0xb64 <vfprintf+0x22a>
     b5c:	44 24       	eor	r4, r4
     b5e:	43 94       	inc	r4
     b60:	01 c0       	rjmp	.+2      	; 0xb64 <vfprintf+0x22a>
     b62:	10 e0       	ldi	r17, 0x00	; 0
     b64:	97 fe       	sbrs	r9, 7
     b66:	06 c0       	rjmp	.+12     	; 0xb74 <vfprintf+0x23a>
     b68:	1c 14       	cp	r1, r12
     b6a:	1d 04       	cpc	r1, r13
     b6c:	34 f4       	brge	.+12     	; 0xb7a <vfprintf+0x240>
     b6e:	c6 01       	movw	r24, r12
     b70:	01 96       	adiw	r24, 0x01	; 1
     b72:	05 c0       	rjmp	.+10     	; 0xb7e <vfprintf+0x244>
     b74:	85 e0       	ldi	r24, 0x05	; 5
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	02 c0       	rjmp	.+4      	; 0xb7e <vfprintf+0x244>
     b7a:	81 e0       	ldi	r24, 0x01	; 1
     b7c:	90 e0       	ldi	r25, 0x00	; 0
     b7e:	01 11       	cpse	r16, r1
     b80:	01 96       	adiw	r24, 0x01	; 1
     b82:	11 23       	and	r17, r17
     b84:	31 f0       	breq	.+12     	; 0xb92 <vfprintf+0x258>
     b86:	21 2f       	mov	r18, r17
     b88:	30 e0       	ldi	r19, 0x00	; 0
     b8a:	2f 5f       	subi	r18, 0xFF	; 255
     b8c:	3f 4f       	sbci	r19, 0xFF	; 255
     b8e:	82 0f       	add	r24, r18
     b90:	93 1f       	adc	r25, r19
     b92:	25 2d       	mov	r18, r5
     b94:	30 e0       	ldi	r19, 0x00	; 0
     b96:	82 17       	cp	r24, r18
     b98:	93 07       	cpc	r25, r19
     b9a:	14 f4       	brge	.+4      	; 0xba0 <vfprintf+0x266>
     b9c:	58 1a       	sub	r5, r24
     b9e:	01 c0       	rjmp	.+2      	; 0xba2 <vfprintf+0x268>
     ba0:	51 2c       	mov	r5, r1
     ba2:	89 2d       	mov	r24, r9
     ba4:	89 70       	andi	r24, 0x09	; 9
     ba6:	49 f4       	brne	.+18     	; 0xbba <vfprintf+0x280>
     ba8:	55 20       	and	r5, r5
     baa:	39 f0       	breq	.+14     	; 0xbba <vfprintf+0x280>
     bac:	b7 01       	movw	r22, r14
     bae:	80 e2       	ldi	r24, 0x20	; 32
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     bb6:	5a 94       	dec	r5
     bb8:	f7 cf       	rjmp	.-18     	; 0xba8 <vfprintf+0x26e>
     bba:	00 23       	and	r16, r16
     bbc:	29 f0       	breq	.+10     	; 0xbc8 <vfprintf+0x28e>
     bbe:	b7 01       	movw	r22, r14
     bc0:	80 2f       	mov	r24, r16
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     bc8:	93 fc       	sbrc	r9, 3
     bca:	09 c0       	rjmp	.+18     	; 0xbde <vfprintf+0x2a4>
     bcc:	55 20       	and	r5, r5
     bce:	39 f0       	breq	.+14     	; 0xbde <vfprintf+0x2a4>
     bd0:	b7 01       	movw	r22, r14
     bd2:	80 e3       	ldi	r24, 0x30	; 48
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     bda:	5a 94       	dec	r5
     bdc:	f7 cf       	rjmp	.-18     	; 0xbcc <vfprintf+0x292>
     bde:	97 fe       	sbrs	r9, 7
     be0:	4c c0       	rjmp	.+152    	; 0xc7a <vfprintf+0x340>
     be2:	46 01       	movw	r8, r12
     be4:	d7 fe       	sbrs	r13, 7
     be6:	02 c0       	rjmp	.+4      	; 0xbec <vfprintf+0x2b2>
     be8:	81 2c       	mov	r8, r1
     bea:	91 2c       	mov	r9, r1
     bec:	c6 01       	movw	r24, r12
     bee:	88 19       	sub	r24, r8
     bf0:	99 09       	sbc	r25, r9
     bf2:	f3 01       	movw	r30, r6
     bf4:	e8 0f       	add	r30, r24
     bf6:	f9 1f       	adc	r31, r25
     bf8:	fe 87       	std	Y+14, r31	; 0x0e
     bfa:	ed 87       	std	Y+13, r30	; 0x0d
     bfc:	96 01       	movw	r18, r12
     bfe:	24 19       	sub	r18, r4
     c00:	31 09       	sbc	r19, r1
     c02:	38 8b       	std	Y+16, r19	; 0x10
     c04:	2f 87       	std	Y+15, r18	; 0x0f
     c06:	01 2f       	mov	r16, r17
     c08:	10 e0       	ldi	r17, 0x00	; 0
     c0a:	11 95       	neg	r17
     c0c:	01 95       	neg	r16
     c0e:	11 09       	sbc	r17, r1
     c10:	3f ef       	ldi	r19, 0xFF	; 255
     c12:	83 16       	cp	r8, r19
     c14:	93 06       	cpc	r9, r19
     c16:	29 f4       	brne	.+10     	; 0xc22 <vfprintf+0x2e8>
     c18:	b7 01       	movw	r22, r14
     c1a:	8e e2       	ldi	r24, 0x2E	; 46
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     c22:	c8 14       	cp	r12, r8
     c24:	d9 04       	cpc	r13, r9
     c26:	4c f0       	brlt	.+18     	; 0xc3a <vfprintf+0x300>
     c28:	8f 85       	ldd	r24, Y+15	; 0x0f
     c2a:	98 89       	ldd	r25, Y+16	; 0x10
     c2c:	88 15       	cp	r24, r8
     c2e:	99 05       	cpc	r25, r9
     c30:	24 f4       	brge	.+8      	; 0xc3a <vfprintf+0x300>
     c32:	ed 85       	ldd	r30, Y+13	; 0x0d
     c34:	fe 85       	ldd	r31, Y+14	; 0x0e
     c36:	81 81       	ldd	r24, Z+1	; 0x01
     c38:	01 c0       	rjmp	.+2      	; 0xc3c <vfprintf+0x302>
     c3a:	80 e3       	ldi	r24, 0x30	; 48
     c3c:	f1 e0       	ldi	r31, 0x01	; 1
     c3e:	8f 1a       	sub	r8, r31
     c40:	91 08       	sbc	r9, r1
     c42:	2d 85       	ldd	r18, Y+13	; 0x0d
     c44:	3e 85       	ldd	r19, Y+14	; 0x0e
     c46:	2f 5f       	subi	r18, 0xFF	; 255
     c48:	3f 4f       	sbci	r19, 0xFF	; 255
     c4a:	3e 87       	std	Y+14, r19	; 0x0e
     c4c:	2d 87       	std	Y+13, r18	; 0x0d
     c4e:	80 16       	cp	r8, r16
     c50:	91 06       	cpc	r9, r17
     c52:	2c f0       	brlt	.+10     	; 0xc5e <vfprintf+0x324>
     c54:	b7 01       	movw	r22, r14
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     c5c:	d9 cf       	rjmp	.-78     	; 0xc10 <vfprintf+0x2d6>
     c5e:	c8 14       	cp	r12, r8
     c60:	d9 04       	cpc	r13, r9
     c62:	41 f4       	brne	.+16     	; 0xc74 <vfprintf+0x33a>
     c64:	9a 81       	ldd	r25, Y+2	; 0x02
     c66:	96 33       	cpi	r25, 0x36	; 54
     c68:	20 f4       	brcc	.+8      	; 0xc72 <vfprintf+0x338>
     c6a:	95 33       	cpi	r25, 0x35	; 53
     c6c:	19 f4       	brne	.+6      	; 0xc74 <vfprintf+0x33a>
     c6e:	3c 85       	ldd	r19, Y+12	; 0x0c
     c70:	34 ff       	sbrs	r19, 4
     c72:	81 e3       	ldi	r24, 0x31	; 49
     c74:	b7 01       	movw	r22, r14
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	4e c0       	rjmp	.+156    	; 0xd16 <vfprintf+0x3dc>
     c7a:	8a 81       	ldd	r24, Y+2	; 0x02
     c7c:	81 33       	cpi	r24, 0x31	; 49
     c7e:	19 f0       	breq	.+6      	; 0xc86 <vfprintf+0x34c>
     c80:	9c 85       	ldd	r25, Y+12	; 0x0c
     c82:	9f 7e       	andi	r25, 0xEF	; 239
     c84:	9c 87       	std	Y+12, r25	; 0x0c
     c86:	b7 01       	movw	r22, r14
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     c8e:	11 11       	cpse	r17, r1
     c90:	05 c0       	rjmp	.+10     	; 0xc9c <vfprintf+0x362>
     c92:	94 fc       	sbrc	r9, 4
     c94:	18 c0       	rjmp	.+48     	; 0xcc6 <vfprintf+0x38c>
     c96:	85 e6       	ldi	r24, 0x65	; 101
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	17 c0       	rjmp	.+46     	; 0xcca <vfprintf+0x390>
     c9c:	b7 01       	movw	r22, r14
     c9e:	8e e2       	ldi	r24, 0x2E	; 46
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     ca6:	1e 5f       	subi	r17, 0xFE	; 254
     ca8:	82 e0       	ldi	r24, 0x02	; 2
     caa:	01 e0       	ldi	r16, 0x01	; 1
     cac:	08 0f       	add	r16, r24
     cae:	f3 01       	movw	r30, r6
     cb0:	e8 0f       	add	r30, r24
     cb2:	f1 1d       	adc	r31, r1
     cb4:	80 81       	ld	r24, Z
     cb6:	b7 01       	movw	r22, r14
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     cbe:	80 2f       	mov	r24, r16
     cc0:	01 13       	cpse	r16, r17
     cc2:	f3 cf       	rjmp	.-26     	; 0xcaa <vfprintf+0x370>
     cc4:	e6 cf       	rjmp	.-52     	; 0xc92 <vfprintf+0x358>
     cc6:	85 e4       	ldi	r24, 0x45	; 69
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	b7 01       	movw	r22, r14
     ccc:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     cd0:	d7 fc       	sbrc	r13, 7
     cd2:	06 c0       	rjmp	.+12     	; 0xce0 <vfprintf+0x3a6>
     cd4:	c1 14       	cp	r12, r1
     cd6:	d1 04       	cpc	r13, r1
     cd8:	41 f4       	brne	.+16     	; 0xcea <vfprintf+0x3b0>
     cda:	ec 85       	ldd	r30, Y+12	; 0x0c
     cdc:	e4 ff       	sbrs	r30, 4
     cde:	05 c0       	rjmp	.+10     	; 0xcea <vfprintf+0x3b0>
     ce0:	d1 94       	neg	r13
     ce2:	c1 94       	neg	r12
     ce4:	d1 08       	sbc	r13, r1
     ce6:	8d e2       	ldi	r24, 0x2D	; 45
     ce8:	01 c0       	rjmp	.+2      	; 0xcec <vfprintf+0x3b2>
     cea:	8b e2       	ldi	r24, 0x2B	; 43
     cec:	b7 01       	movw	r22, r14
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     cf4:	80 e3       	ldi	r24, 0x30	; 48
     cf6:	2a e0       	ldi	r18, 0x0A	; 10
     cf8:	c2 16       	cp	r12, r18
     cfa:	d1 04       	cpc	r13, r1
     cfc:	2c f0       	brlt	.+10     	; 0xd08 <vfprintf+0x3ce>
     cfe:	8f 5f       	subi	r24, 0xFF	; 255
     d00:	fa e0       	ldi	r31, 0x0A	; 10
     d02:	cf 1a       	sub	r12, r31
     d04:	d1 08       	sbc	r13, r1
     d06:	f7 cf       	rjmp	.-18     	; 0xcf6 <vfprintf+0x3bc>
     d08:	b7 01       	movw	r22, r14
     d0a:	90 e0       	ldi	r25, 0x00	; 0
     d0c:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     d10:	b7 01       	movw	r22, r14
     d12:	c6 01       	movw	r24, r12
     d14:	c0 96       	adiw	r24, 0x30	; 48
     d16:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     d1a:	54 c1       	rjmp	.+680    	; 0xfc4 <vfprintf+0x68a>
     d1c:	83 36       	cpi	r24, 0x63	; 99
     d1e:	31 f0       	breq	.+12     	; 0xd2c <vfprintf+0x3f2>
     d20:	83 37       	cpi	r24, 0x73	; 115
     d22:	79 f0       	breq	.+30     	; 0xd42 <vfprintf+0x408>
     d24:	83 35       	cpi	r24, 0x53	; 83
     d26:	09 f0       	breq	.+2      	; 0xd2a <vfprintf+0x3f0>
     d28:	56 c0       	rjmp	.+172    	; 0xdd6 <vfprintf+0x49c>
     d2a:	20 c0       	rjmp	.+64     	; 0xd6c <vfprintf+0x432>
     d2c:	56 01       	movw	r10, r12
     d2e:	32 e0       	ldi	r19, 0x02	; 2
     d30:	a3 0e       	add	r10, r19
     d32:	b1 1c       	adc	r11, r1
     d34:	f6 01       	movw	r30, r12
     d36:	80 81       	ld	r24, Z
     d38:	89 83       	std	Y+1, r24	; 0x01
     d3a:	01 e0       	ldi	r16, 0x01	; 1
     d3c:	10 e0       	ldi	r17, 0x00	; 0
     d3e:	63 01       	movw	r12, r6
     d40:	12 c0       	rjmp	.+36     	; 0xd66 <vfprintf+0x42c>
     d42:	56 01       	movw	r10, r12
     d44:	f2 e0       	ldi	r31, 0x02	; 2
     d46:	af 0e       	add	r10, r31
     d48:	b1 1c       	adc	r11, r1
     d4a:	f6 01       	movw	r30, r12
     d4c:	c0 80       	ld	r12, Z
     d4e:	d1 80       	ldd	r13, Z+1	; 0x01
     d50:	96 fe       	sbrs	r9, 6
     d52:	03 c0       	rjmp	.+6      	; 0xd5a <vfprintf+0x420>
     d54:	61 2f       	mov	r22, r17
     d56:	70 e0       	ldi	r23, 0x00	; 0
     d58:	02 c0       	rjmp	.+4      	; 0xd5e <vfprintf+0x424>
     d5a:	6f ef       	ldi	r22, 0xFF	; 255
     d5c:	7f ef       	ldi	r23, 0xFF	; 255
     d5e:	c6 01       	movw	r24, r12
     d60:	0e 94 34 09 	call	0x1268	; 0x1268 <strnlen>
     d64:	8c 01       	movw	r16, r24
     d66:	f9 2d       	mov	r31, r9
     d68:	ff 77       	andi	r31, 0x7F	; 127
     d6a:	14 c0       	rjmp	.+40     	; 0xd94 <vfprintf+0x45a>
     d6c:	56 01       	movw	r10, r12
     d6e:	22 e0       	ldi	r18, 0x02	; 2
     d70:	a2 0e       	add	r10, r18
     d72:	b1 1c       	adc	r11, r1
     d74:	f6 01       	movw	r30, r12
     d76:	c0 80       	ld	r12, Z
     d78:	d1 80       	ldd	r13, Z+1	; 0x01
     d7a:	96 fe       	sbrs	r9, 6
     d7c:	03 c0       	rjmp	.+6      	; 0xd84 <vfprintf+0x44a>
     d7e:	61 2f       	mov	r22, r17
     d80:	70 e0       	ldi	r23, 0x00	; 0
     d82:	02 c0       	rjmp	.+4      	; 0xd88 <vfprintf+0x44e>
     d84:	6f ef       	ldi	r22, 0xFF	; 255
     d86:	7f ef       	ldi	r23, 0xFF	; 255
     d88:	c6 01       	movw	r24, r12
     d8a:	0e 94 29 09 	call	0x1252	; 0x1252 <strnlen_P>
     d8e:	8c 01       	movw	r16, r24
     d90:	f9 2d       	mov	r31, r9
     d92:	f0 68       	ori	r31, 0x80	; 128
     d94:	9f 2e       	mov	r9, r31
     d96:	f3 fd       	sbrc	r31, 3
     d98:	1a c0       	rjmp	.+52     	; 0xdce <vfprintf+0x494>
     d9a:	85 2d       	mov	r24, r5
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	08 17       	cp	r16, r24
     da0:	19 07       	cpc	r17, r25
     da2:	a8 f4       	brcc	.+42     	; 0xdce <vfprintf+0x494>
     da4:	b7 01       	movw	r22, r14
     da6:	80 e2       	ldi	r24, 0x20	; 32
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     dae:	5a 94       	dec	r5
     db0:	f4 cf       	rjmp	.-24     	; 0xd9a <vfprintf+0x460>
     db2:	f6 01       	movw	r30, r12
     db4:	97 fc       	sbrc	r9, 7
     db6:	85 91       	lpm	r24, Z+
     db8:	97 fe       	sbrs	r9, 7
     dba:	81 91       	ld	r24, Z+
     dbc:	6f 01       	movw	r12, r30
     dbe:	b7 01       	movw	r22, r14
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     dc6:	51 10       	cpse	r5, r1
     dc8:	5a 94       	dec	r5
     dca:	01 50       	subi	r16, 0x01	; 1
     dcc:	11 09       	sbc	r17, r1
     dce:	01 15       	cp	r16, r1
     dd0:	11 05       	cpc	r17, r1
     dd2:	79 f7       	brne	.-34     	; 0xdb2 <vfprintf+0x478>
     dd4:	f7 c0       	rjmp	.+494    	; 0xfc4 <vfprintf+0x68a>
     dd6:	84 36       	cpi	r24, 0x64	; 100
     dd8:	11 f0       	breq	.+4      	; 0xdde <vfprintf+0x4a4>
     dda:	89 36       	cpi	r24, 0x69	; 105
     ddc:	61 f5       	brne	.+88     	; 0xe36 <vfprintf+0x4fc>
     dde:	56 01       	movw	r10, r12
     de0:	97 fe       	sbrs	r9, 7
     de2:	09 c0       	rjmp	.+18     	; 0xdf6 <vfprintf+0x4bc>
     de4:	24 e0       	ldi	r18, 0x04	; 4
     de6:	a2 0e       	add	r10, r18
     de8:	b1 1c       	adc	r11, r1
     dea:	f6 01       	movw	r30, r12
     dec:	60 81       	ld	r22, Z
     dee:	71 81       	ldd	r23, Z+1	; 0x01
     df0:	82 81       	ldd	r24, Z+2	; 0x02
     df2:	93 81       	ldd	r25, Z+3	; 0x03
     df4:	0a c0       	rjmp	.+20     	; 0xe0a <vfprintf+0x4d0>
     df6:	f2 e0       	ldi	r31, 0x02	; 2
     df8:	af 0e       	add	r10, r31
     dfa:	b1 1c       	adc	r11, r1
     dfc:	f6 01       	movw	r30, r12
     dfe:	60 81       	ld	r22, Z
     e00:	71 81       	ldd	r23, Z+1	; 0x01
     e02:	07 2e       	mov	r0, r23
     e04:	00 0c       	add	r0, r0
     e06:	88 0b       	sbc	r24, r24
     e08:	99 0b       	sbc	r25, r25
     e0a:	f9 2d       	mov	r31, r9
     e0c:	ff 76       	andi	r31, 0x6F	; 111
     e0e:	9f 2e       	mov	r9, r31
     e10:	97 ff       	sbrs	r25, 7
     e12:	09 c0       	rjmp	.+18     	; 0xe26 <vfprintf+0x4ec>
     e14:	90 95       	com	r25
     e16:	80 95       	com	r24
     e18:	70 95       	com	r23
     e1a:	61 95       	neg	r22
     e1c:	7f 4f       	sbci	r23, 0xFF	; 255
     e1e:	8f 4f       	sbci	r24, 0xFF	; 255
     e20:	9f 4f       	sbci	r25, 0xFF	; 255
     e22:	f0 68       	ori	r31, 0x80	; 128
     e24:	9f 2e       	mov	r9, r31
     e26:	2a e0       	ldi	r18, 0x0A	; 10
     e28:	30 e0       	ldi	r19, 0x00	; 0
     e2a:	a3 01       	movw	r20, r6
     e2c:	0e 94 9d 09 	call	0x133a	; 0x133a <__ultoa_invert>
     e30:	c8 2e       	mov	r12, r24
     e32:	c6 18       	sub	r12, r6
     e34:	3f c0       	rjmp	.+126    	; 0xeb4 <vfprintf+0x57a>
     e36:	09 2d       	mov	r16, r9
     e38:	85 37       	cpi	r24, 0x75	; 117
     e3a:	21 f4       	brne	.+8      	; 0xe44 <vfprintf+0x50a>
     e3c:	0f 7e       	andi	r16, 0xEF	; 239
     e3e:	2a e0       	ldi	r18, 0x0A	; 10
     e40:	30 e0       	ldi	r19, 0x00	; 0
     e42:	1d c0       	rjmp	.+58     	; 0xe7e <vfprintf+0x544>
     e44:	09 7f       	andi	r16, 0xF9	; 249
     e46:	8f 36       	cpi	r24, 0x6F	; 111
     e48:	91 f0       	breq	.+36     	; 0xe6e <vfprintf+0x534>
     e4a:	18 f4       	brcc	.+6      	; 0xe52 <vfprintf+0x518>
     e4c:	88 35       	cpi	r24, 0x58	; 88
     e4e:	59 f0       	breq	.+22     	; 0xe66 <vfprintf+0x52c>
     e50:	c3 c0       	rjmp	.+390    	; 0xfd8 <vfprintf+0x69e>
     e52:	80 37       	cpi	r24, 0x70	; 112
     e54:	19 f0       	breq	.+6      	; 0xe5c <vfprintf+0x522>
     e56:	88 37       	cpi	r24, 0x78	; 120
     e58:	11 f0       	breq	.+4      	; 0xe5e <vfprintf+0x524>
     e5a:	be c0       	rjmp	.+380    	; 0xfd8 <vfprintf+0x69e>
     e5c:	00 61       	ori	r16, 0x10	; 16
     e5e:	04 ff       	sbrs	r16, 4
     e60:	09 c0       	rjmp	.+18     	; 0xe74 <vfprintf+0x53a>
     e62:	04 60       	ori	r16, 0x04	; 4
     e64:	07 c0       	rjmp	.+14     	; 0xe74 <vfprintf+0x53a>
     e66:	94 fe       	sbrs	r9, 4
     e68:	08 c0       	rjmp	.+16     	; 0xe7a <vfprintf+0x540>
     e6a:	06 60       	ori	r16, 0x06	; 6
     e6c:	06 c0       	rjmp	.+12     	; 0xe7a <vfprintf+0x540>
     e6e:	28 e0       	ldi	r18, 0x08	; 8
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	05 c0       	rjmp	.+10     	; 0xe7e <vfprintf+0x544>
     e74:	20 e1       	ldi	r18, 0x10	; 16
     e76:	30 e0       	ldi	r19, 0x00	; 0
     e78:	02 c0       	rjmp	.+4      	; 0xe7e <vfprintf+0x544>
     e7a:	20 e1       	ldi	r18, 0x10	; 16
     e7c:	32 e0       	ldi	r19, 0x02	; 2
     e7e:	56 01       	movw	r10, r12
     e80:	07 ff       	sbrs	r16, 7
     e82:	09 c0       	rjmp	.+18     	; 0xe96 <vfprintf+0x55c>
     e84:	84 e0       	ldi	r24, 0x04	; 4
     e86:	a8 0e       	add	r10, r24
     e88:	b1 1c       	adc	r11, r1
     e8a:	f6 01       	movw	r30, r12
     e8c:	60 81       	ld	r22, Z
     e8e:	71 81       	ldd	r23, Z+1	; 0x01
     e90:	82 81       	ldd	r24, Z+2	; 0x02
     e92:	93 81       	ldd	r25, Z+3	; 0x03
     e94:	08 c0       	rjmp	.+16     	; 0xea6 <vfprintf+0x56c>
     e96:	f2 e0       	ldi	r31, 0x02	; 2
     e98:	af 0e       	add	r10, r31
     e9a:	b1 1c       	adc	r11, r1
     e9c:	f6 01       	movw	r30, r12
     e9e:	60 81       	ld	r22, Z
     ea0:	71 81       	ldd	r23, Z+1	; 0x01
     ea2:	80 e0       	ldi	r24, 0x00	; 0
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	a3 01       	movw	r20, r6
     ea8:	0e 94 9d 09 	call	0x133a	; 0x133a <__ultoa_invert>
     eac:	c8 2e       	mov	r12, r24
     eae:	c6 18       	sub	r12, r6
     eb0:	0f 77       	andi	r16, 0x7F	; 127
     eb2:	90 2e       	mov	r9, r16
     eb4:	96 fe       	sbrs	r9, 6
     eb6:	0b c0       	rjmp	.+22     	; 0xece <vfprintf+0x594>
     eb8:	09 2d       	mov	r16, r9
     eba:	0e 7f       	andi	r16, 0xFE	; 254
     ebc:	c1 16       	cp	r12, r17
     ebe:	50 f4       	brcc	.+20     	; 0xed4 <vfprintf+0x59a>
     ec0:	94 fe       	sbrs	r9, 4
     ec2:	0a c0       	rjmp	.+20     	; 0xed8 <vfprintf+0x59e>
     ec4:	92 fc       	sbrc	r9, 2
     ec6:	08 c0       	rjmp	.+16     	; 0xed8 <vfprintf+0x59e>
     ec8:	09 2d       	mov	r16, r9
     eca:	0e 7e       	andi	r16, 0xEE	; 238
     ecc:	05 c0       	rjmp	.+10     	; 0xed8 <vfprintf+0x59e>
     ece:	dc 2c       	mov	r13, r12
     ed0:	09 2d       	mov	r16, r9
     ed2:	03 c0       	rjmp	.+6      	; 0xeda <vfprintf+0x5a0>
     ed4:	dc 2c       	mov	r13, r12
     ed6:	01 c0       	rjmp	.+2      	; 0xeda <vfprintf+0x5a0>
     ed8:	d1 2e       	mov	r13, r17
     eda:	04 ff       	sbrs	r16, 4
     edc:	0d c0       	rjmp	.+26     	; 0xef8 <vfprintf+0x5be>
     ede:	fe 01       	movw	r30, r28
     ee0:	ec 0d       	add	r30, r12
     ee2:	f1 1d       	adc	r31, r1
     ee4:	80 81       	ld	r24, Z
     ee6:	80 33       	cpi	r24, 0x30	; 48
     ee8:	11 f4       	brne	.+4      	; 0xeee <vfprintf+0x5b4>
     eea:	09 7e       	andi	r16, 0xE9	; 233
     eec:	09 c0       	rjmp	.+18     	; 0xf00 <vfprintf+0x5c6>
     eee:	02 ff       	sbrs	r16, 2
     ef0:	06 c0       	rjmp	.+12     	; 0xefe <vfprintf+0x5c4>
     ef2:	d3 94       	inc	r13
     ef4:	d3 94       	inc	r13
     ef6:	04 c0       	rjmp	.+8      	; 0xf00 <vfprintf+0x5c6>
     ef8:	80 2f       	mov	r24, r16
     efa:	86 78       	andi	r24, 0x86	; 134
     efc:	09 f0       	breq	.+2      	; 0xf00 <vfprintf+0x5c6>
     efe:	d3 94       	inc	r13
     f00:	03 fd       	sbrc	r16, 3
     f02:	11 c0       	rjmp	.+34     	; 0xf26 <vfprintf+0x5ec>
     f04:	00 ff       	sbrs	r16, 0
     f06:	06 c0       	rjmp	.+12     	; 0xf14 <vfprintf+0x5da>
     f08:	1c 2d       	mov	r17, r12
     f0a:	d5 14       	cp	r13, r5
     f0c:	80 f4       	brcc	.+32     	; 0xf2e <vfprintf+0x5f4>
     f0e:	15 0d       	add	r17, r5
     f10:	1d 19       	sub	r17, r13
     f12:	0d c0       	rjmp	.+26     	; 0xf2e <vfprintf+0x5f4>
     f14:	d5 14       	cp	r13, r5
     f16:	58 f4       	brcc	.+22     	; 0xf2e <vfprintf+0x5f4>
     f18:	b7 01       	movw	r22, r14
     f1a:	80 e2       	ldi	r24, 0x20	; 32
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     f22:	d3 94       	inc	r13
     f24:	f7 cf       	rjmp	.-18     	; 0xf14 <vfprintf+0x5da>
     f26:	d5 14       	cp	r13, r5
     f28:	10 f4       	brcc	.+4      	; 0xf2e <vfprintf+0x5f4>
     f2a:	5d 18       	sub	r5, r13
     f2c:	01 c0       	rjmp	.+2      	; 0xf30 <vfprintf+0x5f6>
     f2e:	51 2c       	mov	r5, r1
     f30:	04 ff       	sbrs	r16, 4
     f32:	10 c0       	rjmp	.+32     	; 0xf54 <vfprintf+0x61a>
     f34:	b7 01       	movw	r22, r14
     f36:	80 e3       	ldi	r24, 0x30	; 48
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     f3e:	02 ff       	sbrs	r16, 2
     f40:	17 c0       	rjmp	.+46     	; 0xf70 <vfprintf+0x636>
     f42:	01 fd       	sbrc	r16, 1
     f44:	03 c0       	rjmp	.+6      	; 0xf4c <vfprintf+0x612>
     f46:	88 e7       	ldi	r24, 0x78	; 120
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	02 c0       	rjmp	.+4      	; 0xf50 <vfprintf+0x616>
     f4c:	88 e5       	ldi	r24, 0x58	; 88
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	b7 01       	movw	r22, r14
     f52:	0c c0       	rjmp	.+24     	; 0xf6c <vfprintf+0x632>
     f54:	80 2f       	mov	r24, r16
     f56:	86 78       	andi	r24, 0x86	; 134
     f58:	59 f0       	breq	.+22     	; 0xf70 <vfprintf+0x636>
     f5a:	01 ff       	sbrs	r16, 1
     f5c:	02 c0       	rjmp	.+4      	; 0xf62 <vfprintf+0x628>
     f5e:	8b e2       	ldi	r24, 0x2B	; 43
     f60:	01 c0       	rjmp	.+2      	; 0xf64 <vfprintf+0x62a>
     f62:	80 e2       	ldi	r24, 0x20	; 32
     f64:	07 fd       	sbrc	r16, 7
     f66:	8d e2       	ldi	r24, 0x2D	; 45
     f68:	b7 01       	movw	r22, r14
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     f70:	c1 16       	cp	r12, r17
     f72:	38 f4       	brcc	.+14     	; 0xf82 <vfprintf+0x648>
     f74:	b7 01       	movw	r22, r14
     f76:	80 e3       	ldi	r24, 0x30	; 48
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     f7e:	11 50       	subi	r17, 0x01	; 1
     f80:	f7 cf       	rjmp	.-18     	; 0xf70 <vfprintf+0x636>
     f82:	ca 94       	dec	r12
     f84:	f3 01       	movw	r30, r6
     f86:	ec 0d       	add	r30, r12
     f88:	f1 1d       	adc	r31, r1
     f8a:	80 81       	ld	r24, Z
     f8c:	b7 01       	movw	r22, r14
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     f94:	c1 10       	cpse	r12, r1
     f96:	f5 cf       	rjmp	.-22     	; 0xf82 <vfprintf+0x648>
     f98:	15 c0       	rjmp	.+42     	; 0xfc4 <vfprintf+0x68a>
     f9a:	f4 e0       	ldi	r31, 0x04	; 4
     f9c:	f5 15       	cp	r31, r5
     f9e:	60 f5       	brcc	.+88     	; 0xff8 <vfprintf+0x6be>
     fa0:	84 e0       	ldi	r24, 0x04	; 4
     fa2:	58 1a       	sub	r5, r24
     fa4:	93 fe       	sbrs	r9, 3
     fa6:	1f c0       	rjmp	.+62     	; 0xfe6 <vfprintf+0x6ac>
     fa8:	01 11       	cpse	r16, r1
     faa:	27 c0       	rjmp	.+78     	; 0xffa <vfprintf+0x6c0>
     fac:	2c 85       	ldd	r18, Y+12	; 0x0c
     fae:	23 ff       	sbrs	r18, 3
     fb0:	2a c0       	rjmp	.+84     	; 0x1006 <vfprintf+0x6cc>
     fb2:	08 e6       	ldi	r16, 0x68	; 104
     fb4:	10 e0       	ldi	r17, 0x00	; 0
     fb6:	39 2d       	mov	r19, r9
     fb8:	30 71       	andi	r19, 0x10	; 16
     fba:	93 2e       	mov	r9, r19
     fbc:	f8 01       	movw	r30, r16
     fbe:	84 91       	lpm	r24, Z
     fc0:	81 11       	cpse	r24, r1
     fc2:	24 c0       	rjmp	.+72     	; 0x100c <vfprintf+0x6d2>
     fc4:	55 20       	and	r5, r5
     fc6:	09 f4       	brne	.+2      	; 0xfca <vfprintf+0x690>
     fc8:	e4 cc       	rjmp	.-1592   	; 0x992 <vfprintf+0x58>
     fca:	b7 01       	movw	r22, r14
     fcc:	80 e2       	ldi	r24, 0x20	; 32
     fce:	90 e0       	ldi	r25, 0x00	; 0
     fd0:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     fd4:	5a 94       	dec	r5
     fd6:	f6 cf       	rjmp	.-20     	; 0xfc4 <vfprintf+0x68a>
     fd8:	f7 01       	movw	r30, r14
     fda:	86 81       	ldd	r24, Z+6	; 0x06
     fdc:	97 81       	ldd	r25, Z+7	; 0x07
     fde:	26 c0       	rjmp	.+76     	; 0x102c <vfprintf+0x6f2>
     fe0:	8f ef       	ldi	r24, 0xFF	; 255
     fe2:	9f ef       	ldi	r25, 0xFF	; 255
     fe4:	23 c0       	rjmp	.+70     	; 0x102c <vfprintf+0x6f2>
     fe6:	b7 01       	movw	r22, r14
     fe8:	80 e2       	ldi	r24, 0x20	; 32
     fea:	90 e0       	ldi	r25, 0x00	; 0
     fec:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
     ff0:	5a 94       	dec	r5
     ff2:	51 10       	cpse	r5, r1
     ff4:	f8 cf       	rjmp	.-16     	; 0xfe6 <vfprintf+0x6ac>
     ff6:	d8 cf       	rjmp	.-80     	; 0xfa8 <vfprintf+0x66e>
     ff8:	51 2c       	mov	r5, r1
     ffa:	b7 01       	movw	r22, r14
     ffc:	80 2f       	mov	r24, r16
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
    1004:	d3 cf       	rjmp	.-90     	; 0xfac <vfprintf+0x672>
    1006:	0c e6       	ldi	r16, 0x6C	; 108
    1008:	10 e0       	ldi	r17, 0x00	; 0
    100a:	d5 cf       	rjmp	.-86     	; 0xfb6 <vfprintf+0x67c>
    100c:	91 10       	cpse	r9, r1
    100e:	80 52       	subi	r24, 0x20	; 32
    1010:	b7 01       	movw	r22, r14
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	0e 94 3f 09 	call	0x127e	; 0x127e <fputc>
    1018:	0f 5f       	subi	r16, 0xFF	; 255
    101a:	1f 4f       	sbci	r17, 0xFF	; 255
    101c:	cf cf       	rjmp	.-98     	; 0xfbc <vfprintf+0x682>
    101e:	23 e0       	ldi	r18, 0x03	; 3
    1020:	25 15       	cp	r18, r5
    1022:	10 f4       	brcc	.+4      	; 0x1028 <vfprintf+0x6ee>
    1024:	83 e0       	ldi	r24, 0x03	; 3
    1026:	bd cf       	rjmp	.-134    	; 0xfa2 <vfprintf+0x668>
    1028:	51 2c       	mov	r5, r1
    102a:	c0 cf       	rjmp	.-128    	; 0xfac <vfprintf+0x672>
    102c:	60 96       	adiw	r28, 0x10	; 16
    102e:	e2 e1       	ldi	r30, 0x12	; 18
    1030:	0c 94 36 08 	jmp	0x106c	; 0x106c <__epilogue_restores__>

00001034 <__prologue_saves__>:
    1034:	2f 92       	push	r2
    1036:	3f 92       	push	r3
    1038:	4f 92       	push	r4
    103a:	5f 92       	push	r5
    103c:	6f 92       	push	r6
    103e:	7f 92       	push	r7
    1040:	8f 92       	push	r8
    1042:	9f 92       	push	r9
    1044:	af 92       	push	r10
    1046:	bf 92       	push	r11
    1048:	cf 92       	push	r12
    104a:	df 92       	push	r13
    104c:	ef 92       	push	r14
    104e:	ff 92       	push	r15
    1050:	0f 93       	push	r16
    1052:	1f 93       	push	r17
    1054:	cf 93       	push	r28
    1056:	df 93       	push	r29
    1058:	cd b7       	in	r28, 0x3d	; 61
    105a:	de b7       	in	r29, 0x3e	; 62
    105c:	ca 1b       	sub	r28, r26
    105e:	db 0b       	sbc	r29, r27
    1060:	0f b6       	in	r0, 0x3f	; 63
    1062:	f8 94       	cli
    1064:	de bf       	out	0x3e, r29	; 62
    1066:	0f be       	out	0x3f, r0	; 63
    1068:	cd bf       	out	0x3d, r28	; 61
    106a:	09 94       	ijmp

0000106c <__epilogue_restores__>:
    106c:	2a 88       	ldd	r2, Y+18	; 0x12
    106e:	39 88       	ldd	r3, Y+17	; 0x11
    1070:	48 88       	ldd	r4, Y+16	; 0x10
    1072:	5f 84       	ldd	r5, Y+15	; 0x0f
    1074:	6e 84       	ldd	r6, Y+14	; 0x0e
    1076:	7d 84       	ldd	r7, Y+13	; 0x0d
    1078:	8c 84       	ldd	r8, Y+12	; 0x0c
    107a:	9b 84       	ldd	r9, Y+11	; 0x0b
    107c:	aa 84       	ldd	r10, Y+10	; 0x0a
    107e:	b9 84       	ldd	r11, Y+9	; 0x09
    1080:	c8 84       	ldd	r12, Y+8	; 0x08
    1082:	df 80       	ldd	r13, Y+7	; 0x07
    1084:	ee 80       	ldd	r14, Y+6	; 0x06
    1086:	fd 80       	ldd	r15, Y+5	; 0x05
    1088:	0c 81       	ldd	r16, Y+4	; 0x04
    108a:	1b 81       	ldd	r17, Y+3	; 0x03
    108c:	aa 81       	ldd	r26, Y+2	; 0x02
    108e:	b9 81       	ldd	r27, Y+1	; 0x01
    1090:	ce 0f       	add	r28, r30
    1092:	d1 1d       	adc	r29, r1
    1094:	0f b6       	in	r0, 0x3f	; 63
    1096:	f8 94       	cli
    1098:	de bf       	out	0x3e, r29	; 62
    109a:	0f be       	out	0x3f, r0	; 63
    109c:	cd bf       	out	0x3d, r28	; 61
    109e:	ed 01       	movw	r28, r26
    10a0:	08 95       	ret

000010a2 <__ftoa_engine>:
    10a2:	28 30       	cpi	r18, 0x08	; 8
    10a4:	08 f0       	brcs	.+2      	; 0x10a8 <__ftoa_engine+0x6>
    10a6:	27 e0       	ldi	r18, 0x07	; 7
    10a8:	33 27       	eor	r19, r19
    10aa:	da 01       	movw	r26, r20
    10ac:	99 0f       	add	r25, r25
    10ae:	31 1d       	adc	r19, r1
    10b0:	87 fd       	sbrc	r24, 7
    10b2:	91 60       	ori	r25, 0x01	; 1
    10b4:	00 96       	adiw	r24, 0x00	; 0
    10b6:	61 05       	cpc	r22, r1
    10b8:	71 05       	cpc	r23, r1
    10ba:	39 f4       	brne	.+14     	; 0x10ca <__ftoa_engine+0x28>
    10bc:	32 60       	ori	r19, 0x02	; 2
    10be:	2e 5f       	subi	r18, 0xFE	; 254
    10c0:	3d 93       	st	X+, r19
    10c2:	30 e3       	ldi	r19, 0x30	; 48
    10c4:	2a 95       	dec	r18
    10c6:	e1 f7       	brne	.-8      	; 0x10c0 <__ftoa_engine+0x1e>
    10c8:	08 95       	ret
    10ca:	9f 3f       	cpi	r25, 0xFF	; 255
    10cc:	30 f0       	brcs	.+12     	; 0x10da <__ftoa_engine+0x38>
    10ce:	80 38       	cpi	r24, 0x80	; 128
    10d0:	71 05       	cpc	r23, r1
    10d2:	61 05       	cpc	r22, r1
    10d4:	09 f0       	breq	.+2      	; 0x10d8 <__ftoa_engine+0x36>
    10d6:	3c 5f       	subi	r19, 0xFC	; 252
    10d8:	3c 5f       	subi	r19, 0xFC	; 252
    10da:	3d 93       	st	X+, r19
    10dc:	91 30       	cpi	r25, 0x01	; 1
    10de:	08 f0       	brcs	.+2      	; 0x10e2 <__ftoa_engine+0x40>
    10e0:	80 68       	ori	r24, 0x80	; 128
    10e2:	91 1d       	adc	r25, r1
    10e4:	df 93       	push	r29
    10e6:	cf 93       	push	r28
    10e8:	1f 93       	push	r17
    10ea:	0f 93       	push	r16
    10ec:	ff 92       	push	r15
    10ee:	ef 92       	push	r14
    10f0:	19 2f       	mov	r17, r25
    10f2:	98 7f       	andi	r25, 0xF8	; 248
    10f4:	96 95       	lsr	r25
    10f6:	e9 2f       	mov	r30, r25
    10f8:	96 95       	lsr	r25
    10fa:	96 95       	lsr	r25
    10fc:	e9 0f       	add	r30, r25
    10fe:	ff 27       	eor	r31, r31
    1100:	e6 53       	subi	r30, 0x36	; 54
    1102:	ff 4f       	sbci	r31, 0xFF	; 255
    1104:	99 27       	eor	r25, r25
    1106:	33 27       	eor	r19, r19
    1108:	ee 24       	eor	r14, r14
    110a:	ff 24       	eor	r15, r15
    110c:	a7 01       	movw	r20, r14
    110e:	e7 01       	movw	r28, r14
    1110:	05 90       	lpm	r0, Z+
    1112:	08 94       	sec
    1114:	07 94       	ror	r0
    1116:	28 f4       	brcc	.+10     	; 0x1122 <__ftoa_engine+0x80>
    1118:	36 0f       	add	r19, r22
    111a:	e7 1e       	adc	r14, r23
    111c:	f8 1e       	adc	r15, r24
    111e:	49 1f       	adc	r20, r25
    1120:	51 1d       	adc	r21, r1
    1122:	66 0f       	add	r22, r22
    1124:	77 1f       	adc	r23, r23
    1126:	88 1f       	adc	r24, r24
    1128:	99 1f       	adc	r25, r25
    112a:	06 94       	lsr	r0
    112c:	a1 f7       	brne	.-24     	; 0x1116 <__ftoa_engine+0x74>
    112e:	05 90       	lpm	r0, Z+
    1130:	07 94       	ror	r0
    1132:	28 f4       	brcc	.+10     	; 0x113e <__ftoa_engine+0x9c>
    1134:	e7 0e       	add	r14, r23
    1136:	f8 1e       	adc	r15, r24
    1138:	49 1f       	adc	r20, r25
    113a:	56 1f       	adc	r21, r22
    113c:	c1 1d       	adc	r28, r1
    113e:	77 0f       	add	r23, r23
    1140:	88 1f       	adc	r24, r24
    1142:	99 1f       	adc	r25, r25
    1144:	66 1f       	adc	r22, r22
    1146:	06 94       	lsr	r0
    1148:	a1 f7       	brne	.-24     	; 0x1132 <__ftoa_engine+0x90>
    114a:	05 90       	lpm	r0, Z+
    114c:	07 94       	ror	r0
    114e:	28 f4       	brcc	.+10     	; 0x115a <__ftoa_engine+0xb8>
    1150:	f8 0e       	add	r15, r24
    1152:	49 1f       	adc	r20, r25
    1154:	56 1f       	adc	r21, r22
    1156:	c7 1f       	adc	r28, r23
    1158:	d1 1d       	adc	r29, r1
    115a:	88 0f       	add	r24, r24
    115c:	99 1f       	adc	r25, r25
    115e:	66 1f       	adc	r22, r22
    1160:	77 1f       	adc	r23, r23
    1162:	06 94       	lsr	r0
    1164:	a1 f7       	brne	.-24     	; 0x114e <__ftoa_engine+0xac>
    1166:	05 90       	lpm	r0, Z+
    1168:	07 94       	ror	r0
    116a:	20 f4       	brcc	.+8      	; 0x1174 <__ftoa_engine+0xd2>
    116c:	49 0f       	add	r20, r25
    116e:	56 1f       	adc	r21, r22
    1170:	c7 1f       	adc	r28, r23
    1172:	d8 1f       	adc	r29, r24
    1174:	99 0f       	add	r25, r25
    1176:	66 1f       	adc	r22, r22
    1178:	77 1f       	adc	r23, r23
    117a:	88 1f       	adc	r24, r24
    117c:	06 94       	lsr	r0
    117e:	a9 f7       	brne	.-22     	; 0x116a <__ftoa_engine+0xc8>
    1180:	84 91       	lpm	r24, Z
    1182:	10 95       	com	r17
    1184:	17 70       	andi	r17, 0x07	; 7
    1186:	41 f0       	breq	.+16     	; 0x1198 <__ftoa_engine+0xf6>
    1188:	d6 95       	lsr	r29
    118a:	c7 95       	ror	r28
    118c:	57 95       	ror	r21
    118e:	47 95       	ror	r20
    1190:	f7 94       	ror	r15
    1192:	e7 94       	ror	r14
    1194:	1a 95       	dec	r17
    1196:	c1 f7       	brne	.-16     	; 0x1188 <__ftoa_engine+0xe6>
    1198:	e0 e7       	ldi	r30, 0x70	; 112
    119a:	f0 e0       	ldi	r31, 0x00	; 0
    119c:	68 94       	set
    119e:	15 90       	lpm	r1, Z+
    11a0:	15 91       	lpm	r17, Z+
    11a2:	35 91       	lpm	r19, Z+
    11a4:	65 91       	lpm	r22, Z+
    11a6:	95 91       	lpm	r25, Z+
    11a8:	05 90       	lpm	r0, Z+
    11aa:	7f e2       	ldi	r23, 0x2F	; 47
    11ac:	73 95       	inc	r23
    11ae:	e1 18       	sub	r14, r1
    11b0:	f1 0a       	sbc	r15, r17
    11b2:	43 0b       	sbc	r20, r19
    11b4:	56 0b       	sbc	r21, r22
    11b6:	c9 0b       	sbc	r28, r25
    11b8:	d0 09       	sbc	r29, r0
    11ba:	c0 f7       	brcc	.-16     	; 0x11ac <__ftoa_engine+0x10a>
    11bc:	e1 0c       	add	r14, r1
    11be:	f1 1e       	adc	r15, r17
    11c0:	43 1f       	adc	r20, r19
    11c2:	56 1f       	adc	r21, r22
    11c4:	c9 1f       	adc	r28, r25
    11c6:	d0 1d       	adc	r29, r0
    11c8:	7e f4       	brtc	.+30     	; 0x11e8 <__ftoa_engine+0x146>
    11ca:	70 33       	cpi	r23, 0x30	; 48
    11cc:	11 f4       	brne	.+4      	; 0x11d2 <__ftoa_engine+0x130>
    11ce:	8a 95       	dec	r24
    11d0:	e6 cf       	rjmp	.-52     	; 0x119e <__ftoa_engine+0xfc>
    11d2:	e8 94       	clt
    11d4:	01 50       	subi	r16, 0x01	; 1
    11d6:	30 f0       	brcs	.+12     	; 0x11e4 <__ftoa_engine+0x142>
    11d8:	08 0f       	add	r16, r24
    11da:	0a f4       	brpl	.+2      	; 0x11de <__ftoa_engine+0x13c>
    11dc:	00 27       	eor	r16, r16
    11de:	02 17       	cp	r16, r18
    11e0:	08 f4       	brcc	.+2      	; 0x11e4 <__ftoa_engine+0x142>
    11e2:	20 2f       	mov	r18, r16
    11e4:	23 95       	inc	r18
    11e6:	02 2f       	mov	r16, r18
    11e8:	7a 33       	cpi	r23, 0x3A	; 58
    11ea:	28 f0       	brcs	.+10     	; 0x11f6 <__ftoa_engine+0x154>
    11ec:	79 e3       	ldi	r23, 0x39	; 57
    11ee:	7d 93       	st	X+, r23
    11f0:	2a 95       	dec	r18
    11f2:	e9 f7       	brne	.-6      	; 0x11ee <__ftoa_engine+0x14c>
    11f4:	10 c0       	rjmp	.+32     	; 0x1216 <__ftoa_engine+0x174>
    11f6:	7d 93       	st	X+, r23
    11f8:	2a 95       	dec	r18
    11fa:	89 f6       	brne	.-94     	; 0x119e <__ftoa_engine+0xfc>
    11fc:	06 94       	lsr	r0
    11fe:	97 95       	ror	r25
    1200:	67 95       	ror	r22
    1202:	37 95       	ror	r19
    1204:	17 95       	ror	r17
    1206:	17 94       	ror	r1
    1208:	e1 18       	sub	r14, r1
    120a:	f1 0a       	sbc	r15, r17
    120c:	43 0b       	sbc	r20, r19
    120e:	56 0b       	sbc	r21, r22
    1210:	c9 0b       	sbc	r28, r25
    1212:	d0 09       	sbc	r29, r0
    1214:	98 f0       	brcs	.+38     	; 0x123c <__ftoa_engine+0x19a>
    1216:	23 95       	inc	r18
    1218:	7e 91       	ld	r23, -X
    121a:	73 95       	inc	r23
    121c:	7a 33       	cpi	r23, 0x3A	; 58
    121e:	08 f0       	brcs	.+2      	; 0x1222 <__ftoa_engine+0x180>
    1220:	70 e3       	ldi	r23, 0x30	; 48
    1222:	7c 93       	st	X, r23
    1224:	20 13       	cpse	r18, r16
    1226:	b8 f7       	brcc	.-18     	; 0x1216 <__ftoa_engine+0x174>
    1228:	7e 91       	ld	r23, -X
    122a:	70 61       	ori	r23, 0x10	; 16
    122c:	7d 93       	st	X+, r23
    122e:	30 f0       	brcs	.+12     	; 0x123c <__ftoa_engine+0x19a>
    1230:	83 95       	inc	r24
    1232:	71 e3       	ldi	r23, 0x31	; 49
    1234:	7d 93       	st	X+, r23
    1236:	70 e3       	ldi	r23, 0x30	; 48
    1238:	2a 95       	dec	r18
    123a:	e1 f7       	brne	.-8      	; 0x1234 <__ftoa_engine+0x192>
    123c:	11 24       	eor	r1, r1
    123e:	ef 90       	pop	r14
    1240:	ff 90       	pop	r15
    1242:	0f 91       	pop	r16
    1244:	1f 91       	pop	r17
    1246:	cf 91       	pop	r28
    1248:	df 91       	pop	r29
    124a:	99 27       	eor	r25, r25
    124c:	87 fd       	sbrc	r24, 7
    124e:	90 95       	com	r25
    1250:	08 95       	ret

00001252 <strnlen_P>:
    1252:	fc 01       	movw	r30, r24
    1254:	05 90       	lpm	r0, Z+
    1256:	61 50       	subi	r22, 0x01	; 1
    1258:	70 40       	sbci	r23, 0x00	; 0
    125a:	01 10       	cpse	r0, r1
    125c:	d8 f7       	brcc	.-10     	; 0x1254 <strnlen_P+0x2>
    125e:	80 95       	com	r24
    1260:	90 95       	com	r25
    1262:	8e 0f       	add	r24, r30
    1264:	9f 1f       	adc	r25, r31
    1266:	08 95       	ret

00001268 <strnlen>:
    1268:	fc 01       	movw	r30, r24
    126a:	61 50       	subi	r22, 0x01	; 1
    126c:	70 40       	sbci	r23, 0x00	; 0
    126e:	01 90       	ld	r0, Z+
    1270:	01 10       	cpse	r0, r1
    1272:	d8 f7       	brcc	.-10     	; 0x126a <strnlen+0x2>
    1274:	80 95       	com	r24
    1276:	90 95       	com	r25
    1278:	8e 0f       	add	r24, r30
    127a:	9f 1f       	adc	r25, r31
    127c:	08 95       	ret

0000127e <fputc>:
    127e:	0f 93       	push	r16
    1280:	1f 93       	push	r17
    1282:	cf 93       	push	r28
    1284:	df 93       	push	r29
    1286:	fb 01       	movw	r30, r22
    1288:	23 81       	ldd	r18, Z+3	; 0x03
    128a:	21 fd       	sbrc	r18, 1
    128c:	03 c0       	rjmp	.+6      	; 0x1294 <fputc+0x16>
    128e:	8f ef       	ldi	r24, 0xFF	; 255
    1290:	9f ef       	ldi	r25, 0xFF	; 255
    1292:	2c c0       	rjmp	.+88     	; 0x12ec <fputc+0x6e>
    1294:	22 ff       	sbrs	r18, 2
    1296:	16 c0       	rjmp	.+44     	; 0x12c4 <fputc+0x46>
    1298:	46 81       	ldd	r20, Z+6	; 0x06
    129a:	57 81       	ldd	r21, Z+7	; 0x07
    129c:	24 81       	ldd	r18, Z+4	; 0x04
    129e:	35 81       	ldd	r19, Z+5	; 0x05
    12a0:	42 17       	cp	r20, r18
    12a2:	53 07       	cpc	r21, r19
    12a4:	44 f4       	brge	.+16     	; 0x12b6 <fputc+0x38>
    12a6:	a0 81       	ld	r26, Z
    12a8:	b1 81       	ldd	r27, Z+1	; 0x01
    12aa:	9d 01       	movw	r18, r26
    12ac:	2f 5f       	subi	r18, 0xFF	; 255
    12ae:	3f 4f       	sbci	r19, 0xFF	; 255
    12b0:	31 83       	std	Z+1, r19	; 0x01
    12b2:	20 83       	st	Z, r18
    12b4:	8c 93       	st	X, r24
    12b6:	26 81       	ldd	r18, Z+6	; 0x06
    12b8:	37 81       	ldd	r19, Z+7	; 0x07
    12ba:	2f 5f       	subi	r18, 0xFF	; 255
    12bc:	3f 4f       	sbci	r19, 0xFF	; 255
    12be:	37 83       	std	Z+7, r19	; 0x07
    12c0:	26 83       	std	Z+6, r18	; 0x06
    12c2:	14 c0       	rjmp	.+40     	; 0x12ec <fputc+0x6e>
    12c4:	8b 01       	movw	r16, r22
    12c6:	ec 01       	movw	r28, r24
    12c8:	fb 01       	movw	r30, r22
    12ca:	00 84       	ldd	r0, Z+8	; 0x08
    12cc:	f1 85       	ldd	r31, Z+9	; 0x09
    12ce:	e0 2d       	mov	r30, r0
    12d0:	09 95       	icall
    12d2:	89 2b       	or	r24, r25
    12d4:	e1 f6       	brne	.-72     	; 0x128e <fputc+0x10>
    12d6:	d8 01       	movw	r26, r16
    12d8:	16 96       	adiw	r26, 0x06	; 6
    12da:	8d 91       	ld	r24, X+
    12dc:	9c 91       	ld	r25, X
    12de:	17 97       	sbiw	r26, 0x07	; 7
    12e0:	01 96       	adiw	r24, 0x01	; 1
    12e2:	17 96       	adiw	r26, 0x07	; 7
    12e4:	9c 93       	st	X, r25
    12e6:	8e 93       	st	-X, r24
    12e8:	16 97       	sbiw	r26, 0x06	; 6
    12ea:	ce 01       	movw	r24, r28
    12ec:	df 91       	pop	r29
    12ee:	cf 91       	pop	r28
    12f0:	1f 91       	pop	r17
    12f2:	0f 91       	pop	r16
    12f4:	08 95       	ret

000012f6 <sprintf>:
    12f6:	ae e0       	ldi	r26, 0x0E	; 14
    12f8:	b0 e0       	ldi	r27, 0x00	; 0
    12fa:	e1 e8       	ldi	r30, 0x81	; 129
    12fc:	f9 e0       	ldi	r31, 0x09	; 9
    12fe:	0c 94 28 08 	jmp	0x1050	; 0x1050 <__prologue_saves__+0x1c>
    1302:	0d 89       	ldd	r16, Y+21	; 0x15
    1304:	1e 89       	ldd	r17, Y+22	; 0x16
    1306:	86 e0       	ldi	r24, 0x06	; 6
    1308:	8c 83       	std	Y+4, r24	; 0x04
    130a:	1a 83       	std	Y+2, r17	; 0x02
    130c:	09 83       	std	Y+1, r16	; 0x01
    130e:	8f ef       	ldi	r24, 0xFF	; 255
    1310:	9f e7       	ldi	r25, 0x7F	; 127
    1312:	9e 83       	std	Y+6, r25	; 0x06
    1314:	8d 83       	std	Y+5, r24	; 0x05
    1316:	ae 01       	movw	r20, r28
    1318:	47 5e       	subi	r20, 0xE7	; 231
    131a:	5f 4f       	sbci	r21, 0xFF	; 255
    131c:	6f 89       	ldd	r22, Y+23	; 0x17
    131e:	78 8d       	ldd	r23, Y+24	; 0x18
    1320:	ce 01       	movw	r24, r28
    1322:	01 96       	adiw	r24, 0x01	; 1
    1324:	0e 94 9d 04 	call	0x93a	; 0x93a <vfprintf>
    1328:	ef 81       	ldd	r30, Y+7	; 0x07
    132a:	f8 85       	ldd	r31, Y+8	; 0x08
    132c:	e0 0f       	add	r30, r16
    132e:	f1 1f       	adc	r31, r17
    1330:	10 82       	st	Z, r1
    1332:	2e 96       	adiw	r28, 0x0e	; 14
    1334:	e4 e0       	ldi	r30, 0x04	; 4
    1336:	0c 94 44 08 	jmp	0x1088	; 0x1088 <__epilogue_restores__+0x1c>

0000133a <__ultoa_invert>:
    133a:	fa 01       	movw	r30, r20
    133c:	aa 27       	eor	r26, r26
    133e:	28 30       	cpi	r18, 0x08	; 8
    1340:	51 f1       	breq	.+84     	; 0x1396 <__ultoa_invert+0x5c>
    1342:	20 31       	cpi	r18, 0x10	; 16
    1344:	81 f1       	breq	.+96     	; 0x13a6 <__ultoa_invert+0x6c>
    1346:	e8 94       	clt
    1348:	6f 93       	push	r22
    134a:	6e 7f       	andi	r22, 0xFE	; 254
    134c:	6e 5f       	subi	r22, 0xFE	; 254
    134e:	7f 4f       	sbci	r23, 0xFF	; 255
    1350:	8f 4f       	sbci	r24, 0xFF	; 255
    1352:	9f 4f       	sbci	r25, 0xFF	; 255
    1354:	af 4f       	sbci	r26, 0xFF	; 255
    1356:	b1 e0       	ldi	r27, 0x01	; 1
    1358:	3e d0       	rcall	.+124    	; 0x13d6 <__ultoa_invert+0x9c>
    135a:	b4 e0       	ldi	r27, 0x04	; 4
    135c:	3c d0       	rcall	.+120    	; 0x13d6 <__ultoa_invert+0x9c>
    135e:	67 0f       	add	r22, r23
    1360:	78 1f       	adc	r23, r24
    1362:	89 1f       	adc	r24, r25
    1364:	9a 1f       	adc	r25, r26
    1366:	a1 1d       	adc	r26, r1
    1368:	68 0f       	add	r22, r24
    136a:	79 1f       	adc	r23, r25
    136c:	8a 1f       	adc	r24, r26
    136e:	91 1d       	adc	r25, r1
    1370:	a1 1d       	adc	r26, r1
    1372:	6a 0f       	add	r22, r26
    1374:	71 1d       	adc	r23, r1
    1376:	81 1d       	adc	r24, r1
    1378:	91 1d       	adc	r25, r1
    137a:	a1 1d       	adc	r26, r1
    137c:	20 d0       	rcall	.+64     	; 0x13be <__ultoa_invert+0x84>
    137e:	09 f4       	brne	.+2      	; 0x1382 <__ultoa_invert+0x48>
    1380:	68 94       	set
    1382:	3f 91       	pop	r19
    1384:	2a e0       	ldi	r18, 0x0A	; 10
    1386:	26 9f       	mul	r18, r22
    1388:	11 24       	eor	r1, r1
    138a:	30 19       	sub	r19, r0
    138c:	30 5d       	subi	r19, 0xD0	; 208
    138e:	31 93       	st	Z+, r19
    1390:	de f6       	brtc	.-74     	; 0x1348 <__ultoa_invert+0xe>
    1392:	cf 01       	movw	r24, r30
    1394:	08 95       	ret
    1396:	46 2f       	mov	r20, r22
    1398:	47 70       	andi	r20, 0x07	; 7
    139a:	40 5d       	subi	r20, 0xD0	; 208
    139c:	41 93       	st	Z+, r20
    139e:	b3 e0       	ldi	r27, 0x03	; 3
    13a0:	0f d0       	rcall	.+30     	; 0x13c0 <__ultoa_invert+0x86>
    13a2:	c9 f7       	brne	.-14     	; 0x1396 <__ultoa_invert+0x5c>
    13a4:	f6 cf       	rjmp	.-20     	; 0x1392 <__ultoa_invert+0x58>
    13a6:	46 2f       	mov	r20, r22
    13a8:	4f 70       	andi	r20, 0x0F	; 15
    13aa:	40 5d       	subi	r20, 0xD0	; 208
    13ac:	4a 33       	cpi	r20, 0x3A	; 58
    13ae:	18 f0       	brcs	.+6      	; 0x13b6 <__ultoa_invert+0x7c>
    13b0:	49 5d       	subi	r20, 0xD9	; 217
    13b2:	31 fd       	sbrc	r19, 1
    13b4:	40 52       	subi	r20, 0x20	; 32
    13b6:	41 93       	st	Z+, r20
    13b8:	02 d0       	rcall	.+4      	; 0x13be <__ultoa_invert+0x84>
    13ba:	a9 f7       	brne	.-22     	; 0x13a6 <__ultoa_invert+0x6c>
    13bc:	ea cf       	rjmp	.-44     	; 0x1392 <__ultoa_invert+0x58>
    13be:	b4 e0       	ldi	r27, 0x04	; 4
    13c0:	a6 95       	lsr	r26
    13c2:	97 95       	ror	r25
    13c4:	87 95       	ror	r24
    13c6:	77 95       	ror	r23
    13c8:	67 95       	ror	r22
    13ca:	ba 95       	dec	r27
    13cc:	c9 f7       	brne	.-14     	; 0x13c0 <__ultoa_invert+0x86>
    13ce:	00 97       	sbiw	r24, 0x00	; 0
    13d0:	61 05       	cpc	r22, r1
    13d2:	71 05       	cpc	r23, r1
    13d4:	08 95       	ret
    13d6:	9b 01       	movw	r18, r22
    13d8:	ac 01       	movw	r20, r24
    13da:	0a 2e       	mov	r0, r26
    13dc:	06 94       	lsr	r0
    13de:	57 95       	ror	r21
    13e0:	47 95       	ror	r20
    13e2:	37 95       	ror	r19
    13e4:	27 95       	ror	r18
    13e6:	ba 95       	dec	r27
    13e8:	c9 f7       	brne	.-14     	; 0x13dc <__ultoa_invert+0xa2>
    13ea:	62 0f       	add	r22, r18
    13ec:	73 1f       	adc	r23, r19
    13ee:	84 1f       	adc	r24, r20
    13f0:	95 1f       	adc	r25, r21
    13f2:	a0 1d       	adc	r26, r0
    13f4:	08 95       	ret

000013f6 <_exit>:
    13f6:	f8 94       	cli

000013f8 <__stop_program>:
    13f8:	ff cf       	rjmp	.-2      	; 0x13f8 <__stop_program>
