
besturingseenheid.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000f1c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ea8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004e  00800100  00800100  00000f1c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f1c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f78  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e0  00000000  00000000  00000fb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017ac  00000000  00000000  00001198  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ee7  00000000  00000000  00002944  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000df1  00000000  00000000  0000382b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003f8  00000000  00000000  0000461c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007c6  00000000  00000000  00004a14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000bd7  00000000  00000000  000051da  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000160  00000000  00000000  00005db1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
   4:	0c 94 9a 01 	jmp	0x334	; 0x334 <__vector_1>
   8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
   c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  2c:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__vector_11>
  30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	6e 61       	ori	r22, 0x1E	; 30
  6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
  6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
  7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
  8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
  9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
  ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
  bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
  cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
  dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
  ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
  fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
 10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
 11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
 12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
 13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
 14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
 15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
 16a:	11 24       	eor	r1, r1
 16c:	1f be       	out	0x3f, r1	; 63
 16e:	cf ef       	ldi	r28, 0xFF	; 255
 170:	d8 e0       	ldi	r29, 0x08	; 8
 172:	de bf       	out	0x3e, r29	; 62
 174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
 176:	11 e0       	ldi	r17, 0x01	; 1
 178:	a0 e0       	ldi	r26, 0x00	; 0
 17a:	b1 e0       	ldi	r27, 0x01	; 1
 17c:	e8 ea       	ldi	r30, 0xA8	; 168
 17e:	fe e0       	ldi	r31, 0x0E	; 14
 180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
 182:	05 90       	lpm	r0, Z+
 184:	0d 92       	st	X+, r0
 186:	a0 30       	cpi	r26, 0x00	; 0
 188:	b1 07       	cpc	r27, r17
 18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
 18c:	21 e0       	ldi	r18, 0x01	; 1
 18e:	a0 e0       	ldi	r26, 0x00	; 0
 190:	b1 e0       	ldi	r27, 0x01	; 1
 192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
 194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
 196:	ae 34       	cpi	r26, 0x4E	; 78
 198:	b2 07       	cpc	r27, r18
 19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
 19c:	0e 94 26 01 	call	0x24c	; 0x24c <main>
 1a0:	0c 94 52 07 	jmp	0xea4	; 0xea4 <_exit>

000001a4 <__bad_interrupt>:
 1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <init_adc>:

#include <avr/io.h>

void init_adc(void)
{
    ADMUX = (1 << REFS0);
 1a8:	80 e4       	ldi	r24, 0x40	; 64
 1aa:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
    ADCSRA = (1 << ADEN) | 6; // enable analog-to-digital converter and set prescaler to 128
 1ae:	86 e8       	ldi	r24, 0x86	; 134
 1b0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
 1b4:	08 95       	ret

000001b6 <__vector_11>:
  This is the scheduler ISR.  It is called at a rate 
  determined by the timer settings in SCH_Init_T1().
-*------------------------------------------------------------------*/

ISR(TIMER1_COMPA_vect)
{
 1b6:	1f 92       	push	r1
 1b8:	0f 92       	push	r0
 1ba:	0f b6       	in	r0, 0x3f	; 63
 1bc:	0f 92       	push	r0
 1be:	11 24       	eor	r1, r1
 1c0:	2f 93       	push	r18
 1c2:	3f 93       	push	r19
 1c4:	8f 93       	push	r24
 1c6:	9f 93       	push	r25
 1c8:	af 93       	push	r26
 1ca:	bf 93       	push	r27
 1cc:	ef 93       	push	r30
 1ce:	ff 93       	push	r31
 1d0:	e8 e0       	ldi	r30, 0x08	; 8
 1d2:	f1 e0       	ldi	r31, 0x01	; 1
 1d4:	2e e4       	ldi	r18, 0x4E	; 78
 1d6:	31 e0       	ldi	r19, 0x01	; 1
   unsigned char Index;
   for(Index = 0; Index < SCH_MAX_TASKS; Index++)
   {
      // Check if there is a task at this location
      if(SCH_tasks_G[Index].pTask)
 1d8:	80 81       	ld	r24, Z
 1da:	91 81       	ldd	r25, Z+1	; 0x01
 1dc:	89 2b       	or	r24, r25
 1de:	91 f0       	breq	.+36     	; 0x204 <__vector_11+0x4e>
      {
         if(SCH_tasks_G[Index].Delay == 0)
 1e0:	82 81       	ldd	r24, Z+2	; 0x02
 1e2:	93 81       	ldd	r25, Z+3	; 0x03
 1e4:	00 97       	sbiw	r24, 0x00	; 0
 1e6:	59 f4       	brne	.+22     	; 0x1fe <__vector_11+0x48>
         {
            // The task is due to run, Inc. the 'RunMe' flag
            SCH_tasks_G[Index].RunMe += 1;
 1e8:	86 81       	ldd	r24, Z+6	; 0x06
 1ea:	8f 5f       	subi	r24, 0xFF	; 255
 1ec:	86 83       	std	Z+6, r24	; 0x06

            if(SCH_tasks_G[Index].Period)
 1ee:	84 81       	ldd	r24, Z+4	; 0x04
 1f0:	95 81       	ldd	r25, Z+5	; 0x05
 1f2:	00 97       	sbiw	r24, 0x00	; 0
 1f4:	39 f0       	breq	.+14     	; 0x204 <__vector_11+0x4e>
            {
               // Schedule periodic tasks to run again
               SCH_tasks_G[Index].Delay = SCH_tasks_G[Index].Period;
               SCH_tasks_G[Index].Delay -= 1;
 1f6:	01 97       	sbiw	r24, 0x01	; 1
 1f8:	93 83       	std	Z+3, r25	; 0x03
 1fa:	82 83       	std	Z+2, r24	; 0x02
 1fc:	03 c0       	rjmp	.+6      	; 0x204 <__vector_11+0x4e>
            }
         }
         else
         {
            // Not yet ready to run: just decrement the delay
            SCH_tasks_G[Index].Delay -= 1;
 1fe:	01 97       	sbiw	r24, 0x01	; 1
 200:	93 83       	std	Z+3, r25	; 0x03
 202:	82 83       	std	Z+2, r24	; 0x02
 204:	37 96       	adiw	r30, 0x07	; 7
-*------------------------------------------------------------------*/

ISR(TIMER1_COMPA_vect)
{
   unsigned char Index;
   for(Index = 0; Index < SCH_MAX_TASKS; Index++)
 206:	e2 17       	cp	r30, r18
 208:	f3 07       	cpc	r31, r19
 20a:	31 f7       	brne	.-52     	; 0x1d8 <__vector_11+0x22>
            // Not yet ready to run: just decrement the delay
            SCH_tasks_G[Index].Delay -= 1;
         }
      }
   }
 20c:	ff 91       	pop	r31
 20e:	ef 91       	pop	r30
 210:	bf 91       	pop	r27
 212:	af 91       	pop	r26
 214:	9f 91       	pop	r25
 216:	8f 91       	pop	r24
 218:	3f 91       	pop	r19
 21a:	2f 91       	pop	r18
 21c:	0f 90       	pop	r0
 21e:	0f be       	out	0x3f, r0	; 63
 220:	0f 90       	pop	r0
 222:	1f 90       	pop	r1
 224:	18 95       	reti

00000226 <init_light_sensor>:
float lightintensities[NUM_LIGHTINTENSITIES];
float averageLightIntensity = 0.0f;

void init_light_sensor(void)
{
	init_adc();
 226:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <init_adc>
 22a:	08 95       	ret

0000022c <test4>:
	rolluik_going_up(15);
}

void test4()
{
	measure_distance();
 22c:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <measure_distance>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 230:	2f ef       	ldi	r18, 0xFF	; 255
 232:	83 ed       	ldi	r24, 0xD3	; 211
 234:	90 e3       	ldi	r25, 0x30	; 48
 236:	21 50       	subi	r18, 0x01	; 1
 238:	80 40       	sbci	r24, 0x00	; 0
 23a:	90 40       	sbci	r25, 0x00	; 0
 23c:	e1 f7       	brne	.-8      	; 0x236 <test4+0xa>
 23e:	00 c0       	rjmp	.+0      	; 0x240 <test4+0x14>
 240:	00 00       	nop
	_delay_ms(1000);
	transmit(get_distance());
 242:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <get_distance>
 246:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <transmit>
 24a:	08 95       	ret

0000024c <main>:
//void test2(void);
//void serial_receiver(void);

int main(void)
{
	init_serial_port();
 24c:	0e 94 6e 01 	call	0x2dc	; 0x2dc <init_serial_port>
 250:	2f ef       	ldi	r18, 0xFF	; 255
 252:	83 ed       	ldi	r24, 0xD3	; 211
 254:	90 e3       	ldi	r25, 0x30	; 48
 256:	21 50       	subi	r18, 0x01	; 1
 258:	80 40       	sbci	r24, 0x00	; 0
 25a:	90 40       	sbci	r25, 0x00	; 0
 25c:	e1 f7       	brne	.-8      	; 0x256 <main+0xa>
 25e:	00 c0       	rjmp	.+0      	; 0x260 <main+0x14>
 260:	00 00       	nop
	_delay_ms(1000);
	init_temperature_sensor();
 262:	0e 94 84 01 	call	0x308	; 0x308 <init_temperature_sensor>
 266:	2f ef       	ldi	r18, 0xFF	; 255
 268:	83 ed       	ldi	r24, 0xD3	; 211
 26a:	90 e3       	ldi	r25, 0x30	; 48
 26c:	21 50       	subi	r18, 0x01	; 1
 26e:	80 40       	sbci	r24, 0x00	; 0
 270:	90 40       	sbci	r25, 0x00	; 0
 272:	e1 f7       	brne	.-8      	; 0x26c <main+0x20>
 274:	00 c0       	rjmp	.+0      	; 0x276 <main+0x2a>
 276:	00 00       	nop
	_delay_ms(1000);
	init_light_sensor();
 278:	0e 94 13 01 	call	0x226	; 0x226 <init_light_sensor>
 27c:	2f ef       	ldi	r18, 0xFF	; 255
 27e:	83 ed       	ldi	r24, 0xD3	; 211
 280:	90 e3       	ldi	r25, 0x30	; 48
 282:	21 50       	subi	r18, 0x01	; 1
 284:	80 40       	sbci	r24, 0x00	; 0
 286:	90 40       	sbci	r25, 0x00	; 0
 288:	e1 f7       	brne	.-8      	; 0x282 <main+0x36>
 28a:	00 c0       	rjmp	.+0      	; 0x28c <main+0x40>
 28c:	00 00       	nop
	_delay_ms(1000);
	init_rolluik_leds();
 28e:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <init_rolluik_leds>
 292:	2f ef       	ldi	r18, 0xFF	; 255
 294:	83 ed       	ldi	r24, 0xD3	; 211
 296:	90 e3       	ldi	r25, 0x30	; 48
 298:	21 50       	subi	r18, 0x01	; 1
 29a:	80 40       	sbci	r24, 0x00	; 0
 29c:	90 40       	sbci	r25, 0x00	; 0
 29e:	e1 f7       	brne	.-8      	; 0x298 <main+0x4c>
 2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <main+0x56>
 2a2:	00 00       	nop
	_delay_ms(1000);
	init_ultrasonic_sensor();
 2a4:	0e 94 87 01 	call	0x30e	; 0x30e <init_ultrasonic_sensor>
 2a8:	2f ef       	ldi	r18, 0xFF	; 255
 2aa:	83 ed       	ldi	r24, 0xD3	; 211
 2ac:	90 e3       	ldi	r25, 0x30	; 48
 2ae:	21 50       	subi	r18, 0x01	; 1
 2b0:	80 40       	sbci	r24, 0x00	; 0
 2b2:	90 40       	sbci	r25, 0x00	; 0
 2b4:	e1 f7       	brne	.-8      	; 0x2ae <main+0x62>
 2b6:	00 c0       	rjmp	.+0      	; 0x2b8 <main+0x6c>
 2b8:	00 00       	nop
	_delay_ms(1000);	
	
	DDRD = 0xff;
 2ba:	8f ef       	ldi	r24, 0xFF	; 255
 2bc:	8a b9       	out	0x0a, r24	; 10
		//_delay_ms(500);
		//test2(); // test de licht intensiteit
		//_delay_ms(500);
		//test3(); // test de LEDs
		//_delay_ms(500);
		test4(); // test de ultrasonic sensor
 2be:	0e 94 16 01 	call	0x22c	; 0x22c <test4>
 2c2:	2f ef       	ldi	r18, 0xFF	; 255
 2c4:	89 e6       	ldi	r24, 0x69	; 105
 2c6:	98 e1       	ldi	r25, 0x18	; 24
 2c8:	21 50       	subi	r18, 0x01	; 1
 2ca:	80 40       	sbci	r24, 0x00	; 0
 2cc:	90 40       	sbci	r25, 0x00	; 0
 2ce:	e1 f7       	brne	.-8      	; 0x2c8 <main+0x7c>
 2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <main+0x86>
 2d2:	00 00       	nop
 2d4:	f4 cf       	rjmp	.-24     	; 0x2be <main+0x72>

000002d6 <init_rolluik_leds>:
void init_rolluik_leds(void)
{
	uint8_t PORT_WRITE_ALL = 0b00011100;
	
	uint8_t temp = PORT_WRITE_ALL;
	DDRD = temp;
 2d6:	8c e1       	ldi	r24, 0x1C	; 28
 2d8:	8a b9       	out	0x0a, r24	; 10
 2da:	08 95       	ret

000002dc <init_serial_port>:
#define UBRRVAL 51

void init_serial_port(void)
{
    //set baud rate 19200
    UBRR0H = 0;
 2dc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
    UBRR0L = UBRRVAL;
 2e0:	83 e3       	ldi	r24, 0x33	; 51
 2e2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
    
    //disable U2X mode
    UCSR0A = 0;
 2e6:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
    
    //enable transmitter
    UCSR0B = _BV(TXEN0) | _BV(RXEN0);
 2ea:	88 e1       	ldi	r24, 0x18	; 24
 2ec:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
    
    //set frame format : asynchronous, 8 data bits, 1 stop bit, no parity
    UCSR0C = _BV(UCSZ01)|_BV(UCSZ00);
 2f0:	86 e0       	ldi	r24, 0x06	; 6
 2f2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
 2f6:	08 95       	ret

000002f8 <transmit>:
}

void transmit(char value)
{
    loop_until_bit_is_set(UCSR0A, UDRE0);
 2f8:	e0 ec       	ldi	r30, 0xC0	; 192
 2fa:	f0 e0       	ldi	r31, 0x00	; 0
 2fc:	90 81       	ld	r25, Z
 2fe:	95 ff       	sbrs	r25, 5
 300:	fd cf       	rjmp	.-6      	; 0x2fc <transmit+0x4>
    
    UDR0 = value;
 302:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 306:	08 95       	ret

00000308 <init_temperature_sensor>:
float temperatures[NUM_TEMPERATURES];
float average_temperature = 0.0f;

void init_temperature_sensor(void)
{
    init_adc();    
 308:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <init_adc>
 30c:	08 95       	ret

0000030e <init_ultrasonic_sensor>:
int16_t COUNTA = 0; // storing digital output


void init_ultrasonic_sensor()
{
	DDRD = 0b11111011;
 30e:	8b ef       	ldi	r24, 0xFB	; 251
 310:	8a b9       	out	0x0a, r24	; 10
 312:	2f e9       	ldi	r18, 0x9F	; 159
 314:	86 e8       	ldi	r24, 0x86	; 134
 316:	91 e0       	ldi	r25, 0x01	; 1
 318:	21 50       	subi	r18, 0x01	; 1
 31a:	80 40       	sbci	r24, 0x00	; 0
 31c:	90 40       	sbci	r25, 0x00	; 0
 31e:	e1 f7       	brne	.-8      	; 0x318 <init_ultrasonic_sensor+0xa>
 320:	00 c0       	rjmp	.+0      	; 0x322 <init_ultrasonic_sensor+0x14>
 322:	00 00       	nop
	_delay_ms(50);
	
	EIMSK |= (1 << INT0); // enabling interrupt0
 324:	e8 9a       	sbi	0x1d, 0	; 29
	EICRA |= (1 << ISC00); // setting interrupt triggering logic change
 326:	e9 e6       	ldi	r30, 0x69	; 105
 328:	f0 e0       	ldi	r31, 0x00	; 0
 32a:	80 81       	ld	r24, Z
 32c:	81 60       	ori	r24, 0x01	; 1
 32e:	80 83       	st	Z, r24
	
	sei();
 330:	78 94       	sei
 332:	08 95       	ret

00000334 <__vector_1>:
}

ISR(INT0_vect) // interrupt service routine when there is a change in logic level
{
 334:	1f 92       	push	r1
 336:	0f 92       	push	r0
 338:	0f b6       	in	r0, 0x3f	; 63
 33a:	0f 92       	push	r0
 33c:	11 24       	eor	r1, r1
 33e:	8f 93       	push	r24
 340:	9f 93       	push	r25
 342:	ef 93       	push	r30
 344:	ff 93       	push	r31
	if(i == 1) // when logic from HIGH to LOW
 346:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <i>
 34a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <i+0x1>
 34e:	01 97       	sbiw	r24, 0x01	; 1
 350:	81 f4       	brne	.+32     	; 0x372 <__vector_1+0x3e>
	{
		TCCR1B = 0; // disabling counter
 352:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
		pulse = TCNT1; // count memory is updated to integer
 356:	e4 e8       	ldi	r30, 0x84	; 132
 358:	f0 e0       	ldi	r31, 0x00	; 0
 35a:	80 81       	ld	r24, Z
 35c:	91 81       	ldd	r25, Z+1	; 0x01
 35e:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <pulse+0x1>
 362:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <pulse>
		TCNT1 = 0; // resetting the counter memory
 366:	11 82       	std	Z+1, r1	; 0x01
 368:	10 82       	st	Z, r1
		i = 0;
 36a:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <i+0x1>
 36e:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <i>
	}
	if(i == 0) // when logic change is from LOW to HIGH
 372:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <i>
 376:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <i+0x1>
 37a:	89 2b       	or	r24, r25
 37c:	59 f4       	brne	.+22     	; 0x394 <__vector_1+0x60>
	{
		TCCR1B |= (1 << CS10); // enabling counter
 37e:	e1 e8       	ldi	r30, 0x81	; 129
 380:	f0 e0       	ldi	r31, 0x00	; 0
 382:	80 81       	ld	r24, Z
 384:	81 60       	ori	r24, 0x01	; 1
 386:	80 83       	st	Z, r24
		i = 1;
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <i+0x1>
 390:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <i>
	}
}
 394:	ff 91       	pop	r31
 396:	ef 91       	pop	r30
 398:	9f 91       	pop	r25
 39a:	8f 91       	pop	r24
 39c:	0f 90       	pop	r0
 39e:	0f be       	out	0x3f, r0	; 63
 3a0:	0f 90       	pop	r0
 3a2:	1f 90       	pop	r1
 3a4:	18 95       	reti

000003a6 <get_distance>:

int16_t get_distance()
{
	return distance;
}
 3a6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <distance>
 3aa:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <distance+0x1>
 3ae:	08 95       	ret

000003b0 <measure_distance>:

void measure_distance()
{
	PORTD |= (1 << PIND0);
 3b0:	58 9a       	sbi	0x0b, 0	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3b2:	82 e3       	ldi	r24, 0x32	; 50
 3b4:	8a 95       	dec	r24
 3b6:	f1 f7       	brne	.-4      	; 0x3b4 <measure_distance+0x4>
	_delay_us(15);
	PORTD &= ~(1 << PIND0);
 3b8:	58 98       	cbi	0x0b, 0	; 11
	
	COUNTA = pulse / 58; // getting the distance based on formula
 3ba:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <pulse>
 3be:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <pulse+0x1>
 3c2:	6a e3       	ldi	r22, 0x3A	; 58
 3c4:	70 e0       	ldi	r23, 0x00	; 0
 3c6:	0e 94 6b 05 	call	0xad6	; 0xad6 <__divmodhi4>
 3ca:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_end+0x1>
 3ce:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_end>
	
	distance = COUNTA;
 3d2:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <distance+0x1>
 3d6:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <distance>
 3da:	08 95       	ret

000003dc <vfprintf>:
 3dc:	a0 e1       	ldi	r26, 0x10	; 16
 3de:	b0 e0       	ldi	r27, 0x00	; 0
 3e0:	e4 ef       	ldi	r30, 0xF4	; 244
 3e2:	f1 e0       	ldi	r31, 0x01	; 1
 3e4:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__prologue_saves__>
 3e8:	7c 01       	movw	r14, r24
 3ea:	1b 01       	movw	r2, r22
 3ec:	6a 01       	movw	r12, r20
 3ee:	fc 01       	movw	r30, r24
 3f0:	17 82       	std	Z+7, r1	; 0x07
 3f2:	16 82       	std	Z+6, r1	; 0x06
 3f4:	83 81       	ldd	r24, Z+3	; 0x03
 3f6:	81 ff       	sbrs	r24, 1
 3f8:	44 c3       	rjmp	.+1672   	; 0xa82 <__stack+0x183>
 3fa:	9e 01       	movw	r18, r28
 3fc:	2f 5f       	subi	r18, 0xFF	; 255
 3fe:	3f 4f       	sbci	r19, 0xFF	; 255
 400:	39 01       	movw	r6, r18
 402:	f7 01       	movw	r30, r14
 404:	93 81       	ldd	r25, Z+3	; 0x03
 406:	f1 01       	movw	r30, r2
 408:	93 fd       	sbrc	r25, 3
 40a:	85 91       	lpm	r24, Z+
 40c:	93 ff       	sbrs	r25, 3
 40e:	81 91       	ld	r24, Z+
 410:	1f 01       	movw	r2, r30
 412:	88 23       	and	r24, r24
 414:	09 f4       	brne	.+2      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 416:	31 c3       	rjmp	.+1634   	; 0xa7a <__stack+0x17b>
 418:	85 32       	cpi	r24, 0x25	; 37
 41a:	39 f4       	brne	.+14     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 41c:	93 fd       	sbrc	r25, 3
 41e:	85 91       	lpm	r24, Z+
 420:	93 ff       	sbrs	r25, 3
 422:	81 91       	ld	r24, Z+
 424:	1f 01       	movw	r2, r30
 426:	85 32       	cpi	r24, 0x25	; 37
 428:	39 f4       	brne	.+14     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 42a:	b7 01       	movw	r22, r14
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 432:	56 01       	movw	r10, r12
 434:	65 01       	movw	r12, r10
 436:	e5 cf       	rjmp	.-54     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 438:	10 e0       	ldi	r17, 0x00	; 0
 43a:	51 2c       	mov	r5, r1
 43c:	91 2c       	mov	r9, r1
 43e:	ff e1       	ldi	r31, 0x1F	; 31
 440:	f9 15       	cp	r31, r9
 442:	d8 f0       	brcs	.+54     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 444:	8b 32       	cpi	r24, 0x2B	; 43
 446:	79 f0       	breq	.+30     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 448:	38 f4       	brcc	.+14     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 44a:	80 32       	cpi	r24, 0x20	; 32
 44c:	79 f0       	breq	.+30     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 44e:	83 32       	cpi	r24, 0x23	; 35
 450:	a1 f4       	brne	.+40     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 452:	f9 2d       	mov	r31, r9
 454:	f0 61       	ori	r31, 0x10	; 16
 456:	2e c0       	rjmp	.+92     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 458:	8d 32       	cpi	r24, 0x2D	; 45
 45a:	61 f0       	breq	.+24     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 45c:	80 33       	cpi	r24, 0x30	; 48
 45e:	69 f4       	brne	.+26     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 460:	29 2d       	mov	r18, r9
 462:	21 60       	ori	r18, 0x01	; 1
 464:	2d c0       	rjmp	.+90     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 466:	39 2d       	mov	r19, r9
 468:	32 60       	ori	r19, 0x02	; 2
 46a:	93 2e       	mov	r9, r19
 46c:	89 2d       	mov	r24, r9
 46e:	84 60       	ori	r24, 0x04	; 4
 470:	98 2e       	mov	r9, r24
 472:	2a c0       	rjmp	.+84     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 474:	e9 2d       	mov	r30, r9
 476:	e8 60       	ori	r30, 0x08	; 8
 478:	15 c0       	rjmp	.+42     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 47a:	97 fc       	sbrc	r9, 7
 47c:	2d c0       	rjmp	.+90     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 47e:	20 ed       	ldi	r18, 0xD0	; 208
 480:	28 0f       	add	r18, r24
 482:	2a 30       	cpi	r18, 0x0A	; 10
 484:	88 f4       	brcc	.+34     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 486:	96 fe       	sbrs	r9, 6
 488:	06 c0       	rjmp	.+12     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 48a:	3a e0       	ldi	r19, 0x0A	; 10
 48c:	13 9f       	mul	r17, r19
 48e:	20 0d       	add	r18, r0
 490:	11 24       	eor	r1, r1
 492:	12 2f       	mov	r17, r18
 494:	19 c0       	rjmp	.+50     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 496:	8a e0       	ldi	r24, 0x0A	; 10
 498:	58 9e       	mul	r5, r24
 49a:	20 0d       	add	r18, r0
 49c:	11 24       	eor	r1, r1
 49e:	52 2e       	mov	r5, r18
 4a0:	e9 2d       	mov	r30, r9
 4a2:	e0 62       	ori	r30, 0x20	; 32
 4a4:	9e 2e       	mov	r9, r30
 4a6:	10 c0       	rjmp	.+32     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4a8:	8e 32       	cpi	r24, 0x2E	; 46
 4aa:	31 f4       	brne	.+12     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 4ac:	96 fc       	sbrc	r9, 6
 4ae:	e5 c2       	rjmp	.+1482   	; 0xa7a <__stack+0x17b>
 4b0:	f9 2d       	mov	r31, r9
 4b2:	f0 64       	ori	r31, 0x40	; 64
 4b4:	9f 2e       	mov	r9, r31
 4b6:	08 c0       	rjmp	.+16     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4b8:	8c 36       	cpi	r24, 0x6C	; 108
 4ba:	21 f4       	brne	.+8      	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4bc:	29 2d       	mov	r18, r9
 4be:	20 68       	ori	r18, 0x80	; 128
 4c0:	92 2e       	mov	r9, r18
 4c2:	02 c0       	rjmp	.+4      	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4c4:	88 36       	cpi	r24, 0x68	; 104
 4c6:	41 f4       	brne	.+16     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4c8:	f1 01       	movw	r30, r2
 4ca:	93 fd       	sbrc	r25, 3
 4cc:	85 91       	lpm	r24, Z+
 4ce:	93 ff       	sbrs	r25, 3
 4d0:	81 91       	ld	r24, Z+
 4d2:	1f 01       	movw	r2, r30
 4d4:	81 11       	cpse	r24, r1
 4d6:	b3 cf       	rjmp	.-154    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 4d8:	9b eb       	ldi	r25, 0xBB	; 187
 4da:	98 0f       	add	r25, r24
 4dc:	93 30       	cpi	r25, 0x03	; 3
 4de:	20 f4       	brcc	.+8      	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4e0:	99 2d       	mov	r25, r9
 4e2:	90 61       	ori	r25, 0x10	; 16
 4e4:	80 5e       	subi	r24, 0xE0	; 224
 4e6:	07 c0       	rjmp	.+14     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4e8:	9b e9       	ldi	r25, 0x9B	; 155
 4ea:	98 0f       	add	r25, r24
 4ec:	93 30       	cpi	r25, 0x03	; 3
 4ee:	08 f0       	brcs	.+2      	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4f0:	66 c1       	rjmp	.+716    	; 0x7be <__LOCK_REGION_LENGTH__+0x3be>
 4f2:	99 2d       	mov	r25, r9
 4f4:	9f 7e       	andi	r25, 0xEF	; 239
 4f6:	96 ff       	sbrs	r25, 6
 4f8:	16 e0       	ldi	r17, 0x06	; 6
 4fa:	9f 73       	andi	r25, 0x3F	; 63
 4fc:	99 2e       	mov	r9, r25
 4fe:	85 36       	cpi	r24, 0x65	; 101
 500:	19 f4       	brne	.+6      	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 502:	90 64       	ori	r25, 0x40	; 64
 504:	99 2e       	mov	r9, r25
 506:	08 c0       	rjmp	.+16     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 508:	86 36       	cpi	r24, 0x66	; 102
 50a:	21 f4       	brne	.+8      	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 50c:	39 2f       	mov	r19, r25
 50e:	30 68       	ori	r19, 0x80	; 128
 510:	93 2e       	mov	r9, r19
 512:	02 c0       	rjmp	.+4      	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 514:	11 11       	cpse	r17, r1
 516:	11 50       	subi	r17, 0x01	; 1
 518:	97 fe       	sbrs	r9, 7
 51a:	07 c0       	rjmp	.+14     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 51c:	1c 33       	cpi	r17, 0x3C	; 60
 51e:	50 f4       	brcc	.+20     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 520:	44 24       	eor	r4, r4
 522:	43 94       	inc	r4
 524:	41 0e       	add	r4, r17
 526:	27 e0       	ldi	r18, 0x07	; 7
 528:	0b c0       	rjmp	.+22     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 52a:	18 30       	cpi	r17, 0x08	; 8
 52c:	38 f0       	brcs	.+14     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 52e:	27 e0       	ldi	r18, 0x07	; 7
 530:	17 e0       	ldi	r17, 0x07	; 7
 532:	05 c0       	rjmp	.+10     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 534:	27 e0       	ldi	r18, 0x07	; 7
 536:	9c e3       	ldi	r25, 0x3C	; 60
 538:	49 2e       	mov	r4, r25
 53a:	02 c0       	rjmp	.+4      	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 53c:	21 2f       	mov	r18, r17
 53e:	41 2c       	mov	r4, r1
 540:	56 01       	movw	r10, r12
 542:	84 e0       	ldi	r24, 0x04	; 4
 544:	a8 0e       	add	r10, r24
 546:	b1 1c       	adc	r11, r1
 548:	f6 01       	movw	r30, r12
 54a:	60 81       	ld	r22, Z
 54c:	71 81       	ldd	r23, Z+1	; 0x01
 54e:	82 81       	ldd	r24, Z+2	; 0x02
 550:	93 81       	ldd	r25, Z+3	; 0x03
 552:	04 2d       	mov	r16, r4
 554:	a3 01       	movw	r20, r6
 556:	0e 94 ca 05 	call	0xb94	; 0xb94 <__ftoa_engine>
 55a:	6c 01       	movw	r12, r24
 55c:	f9 81       	ldd	r31, Y+1	; 0x01
 55e:	fc 87       	std	Y+12, r31	; 0x0c
 560:	f0 ff       	sbrs	r31, 0
 562:	02 c0       	rjmp	.+4      	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 564:	f3 ff       	sbrs	r31, 3
 566:	06 c0       	rjmp	.+12     	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 568:	91 fc       	sbrc	r9, 1
 56a:	06 c0       	rjmp	.+12     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 56c:	92 fe       	sbrs	r9, 2
 56e:	06 c0       	rjmp	.+12     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 570:	00 e2       	ldi	r16, 0x20	; 32
 572:	05 c0       	rjmp	.+10     	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 574:	0d e2       	ldi	r16, 0x2D	; 45
 576:	03 c0       	rjmp	.+6      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 578:	0b e2       	ldi	r16, 0x2B	; 43
 57a:	01 c0       	rjmp	.+2      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 57c:	00 e0       	ldi	r16, 0x00	; 0
 57e:	8c 85       	ldd	r24, Y+12	; 0x0c
 580:	8c 70       	andi	r24, 0x0C	; 12
 582:	19 f0       	breq	.+6      	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 584:	01 11       	cpse	r16, r1
 586:	5a c2       	rjmp	.+1204   	; 0xa3c <__stack+0x13d>
 588:	9b c2       	rjmp	.+1334   	; 0xac0 <__stack+0x1c1>
 58a:	97 fe       	sbrs	r9, 7
 58c:	10 c0       	rjmp	.+32     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 58e:	4c 0c       	add	r4, r12
 590:	fc 85       	ldd	r31, Y+12	; 0x0c
 592:	f4 ff       	sbrs	r31, 4
 594:	04 c0       	rjmp	.+8      	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 596:	8a 81       	ldd	r24, Y+2	; 0x02
 598:	81 33       	cpi	r24, 0x31	; 49
 59a:	09 f4       	brne	.+2      	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 59c:	4a 94       	dec	r4
 59e:	14 14       	cp	r1, r4
 5a0:	74 f5       	brge	.+92     	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5a2:	28 e0       	ldi	r18, 0x08	; 8
 5a4:	24 15       	cp	r18, r4
 5a6:	78 f5       	brcc	.+94     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5a8:	88 e0       	ldi	r24, 0x08	; 8
 5aa:	48 2e       	mov	r4, r24
 5ac:	2c c0       	rjmp	.+88     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5ae:	96 fc       	sbrc	r9, 6
 5b0:	2a c0       	rjmp	.+84     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5b2:	81 2f       	mov	r24, r17
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	8c 15       	cp	r24, r12
 5b8:	9d 05       	cpc	r25, r13
 5ba:	9c f0       	brlt	.+38     	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5bc:	3c ef       	ldi	r19, 0xFC	; 252
 5be:	c3 16       	cp	r12, r19
 5c0:	3f ef       	ldi	r19, 0xFF	; 255
 5c2:	d3 06       	cpc	r13, r19
 5c4:	74 f0       	brlt	.+28     	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5c6:	89 2d       	mov	r24, r9
 5c8:	80 68       	ori	r24, 0x80	; 128
 5ca:	98 2e       	mov	r9, r24
 5cc:	0a c0       	rjmp	.+20     	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5ce:	e2 e0       	ldi	r30, 0x02	; 2
 5d0:	f0 e0       	ldi	r31, 0x00	; 0
 5d2:	ec 0f       	add	r30, r28
 5d4:	fd 1f       	adc	r31, r29
 5d6:	e1 0f       	add	r30, r17
 5d8:	f1 1d       	adc	r31, r1
 5da:	80 81       	ld	r24, Z
 5dc:	80 33       	cpi	r24, 0x30	; 48
 5de:	19 f4       	brne	.+6      	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5e0:	11 50       	subi	r17, 0x01	; 1
 5e2:	11 11       	cpse	r17, r1
 5e4:	f4 cf       	rjmp	.-24     	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5e6:	97 fe       	sbrs	r9, 7
 5e8:	0e c0       	rjmp	.+28     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5ea:	44 24       	eor	r4, r4
 5ec:	43 94       	inc	r4
 5ee:	41 0e       	add	r4, r17
 5f0:	81 2f       	mov	r24, r17
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	c8 16       	cp	r12, r24
 5f6:	d9 06       	cpc	r13, r25
 5f8:	2c f4       	brge	.+10     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5fa:	1c 19       	sub	r17, r12
 5fc:	04 c0       	rjmp	.+8      	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5fe:	44 24       	eor	r4, r4
 600:	43 94       	inc	r4
 602:	01 c0       	rjmp	.+2      	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 604:	10 e0       	ldi	r17, 0x00	; 0
 606:	97 fe       	sbrs	r9, 7
 608:	06 c0       	rjmp	.+12     	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 60a:	1c 14       	cp	r1, r12
 60c:	1d 04       	cpc	r1, r13
 60e:	34 f4       	brge	.+12     	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 610:	c6 01       	movw	r24, r12
 612:	01 96       	adiw	r24, 0x01	; 1
 614:	05 c0       	rjmp	.+10     	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 616:	85 e0       	ldi	r24, 0x05	; 5
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	02 c0       	rjmp	.+4      	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 61c:	81 e0       	ldi	r24, 0x01	; 1
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	01 11       	cpse	r16, r1
 622:	01 96       	adiw	r24, 0x01	; 1
 624:	11 23       	and	r17, r17
 626:	31 f0       	breq	.+12     	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 628:	21 2f       	mov	r18, r17
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	2f 5f       	subi	r18, 0xFF	; 255
 62e:	3f 4f       	sbci	r19, 0xFF	; 255
 630:	82 0f       	add	r24, r18
 632:	93 1f       	adc	r25, r19
 634:	25 2d       	mov	r18, r5
 636:	30 e0       	ldi	r19, 0x00	; 0
 638:	82 17       	cp	r24, r18
 63a:	93 07       	cpc	r25, r19
 63c:	14 f4       	brge	.+4      	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 63e:	58 1a       	sub	r5, r24
 640:	01 c0       	rjmp	.+2      	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 642:	51 2c       	mov	r5, r1
 644:	89 2d       	mov	r24, r9
 646:	89 70       	andi	r24, 0x09	; 9
 648:	49 f4       	brne	.+18     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 64a:	55 20       	and	r5, r5
 64c:	39 f0       	breq	.+14     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 64e:	b7 01       	movw	r22, r14
 650:	80 e2       	ldi	r24, 0x20	; 32
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 658:	5a 94       	dec	r5
 65a:	f7 cf       	rjmp	.-18     	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
 65c:	00 23       	and	r16, r16
 65e:	29 f0       	breq	.+10     	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 660:	b7 01       	movw	r22, r14
 662:	80 2f       	mov	r24, r16
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 66a:	93 fc       	sbrc	r9, 3
 66c:	09 c0       	rjmp	.+18     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 66e:	55 20       	and	r5, r5
 670:	39 f0       	breq	.+14     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 672:	b7 01       	movw	r22, r14
 674:	80 e3       	ldi	r24, 0x30	; 48
 676:	90 e0       	ldi	r25, 0x00	; 0
 678:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 67c:	5a 94       	dec	r5
 67e:	f7 cf       	rjmp	.-18     	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 680:	97 fe       	sbrs	r9, 7
 682:	4c c0       	rjmp	.+152    	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 684:	46 01       	movw	r8, r12
 686:	d7 fe       	sbrs	r13, 7
 688:	02 c0       	rjmp	.+4      	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
 68a:	81 2c       	mov	r8, r1
 68c:	91 2c       	mov	r9, r1
 68e:	c6 01       	movw	r24, r12
 690:	88 19       	sub	r24, r8
 692:	99 09       	sbc	r25, r9
 694:	f3 01       	movw	r30, r6
 696:	e8 0f       	add	r30, r24
 698:	f9 1f       	adc	r31, r25
 69a:	fe 87       	std	Y+14, r31	; 0x0e
 69c:	ed 87       	std	Y+13, r30	; 0x0d
 69e:	96 01       	movw	r18, r12
 6a0:	24 19       	sub	r18, r4
 6a2:	31 09       	sbc	r19, r1
 6a4:	38 8b       	std	Y+16, r19	; 0x10
 6a6:	2f 87       	std	Y+15, r18	; 0x0f
 6a8:	01 2f       	mov	r16, r17
 6aa:	10 e0       	ldi	r17, 0x00	; 0
 6ac:	11 95       	neg	r17
 6ae:	01 95       	neg	r16
 6b0:	11 09       	sbc	r17, r1
 6b2:	3f ef       	ldi	r19, 0xFF	; 255
 6b4:	83 16       	cp	r8, r19
 6b6:	93 06       	cpc	r9, r19
 6b8:	29 f4       	brne	.+10     	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6ba:	b7 01       	movw	r22, r14
 6bc:	8e e2       	ldi	r24, 0x2E	; 46
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 6c4:	c8 14       	cp	r12, r8
 6c6:	d9 04       	cpc	r13, r9
 6c8:	4c f0       	brlt	.+18     	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 6ca:	8f 85       	ldd	r24, Y+15	; 0x0f
 6cc:	98 89       	ldd	r25, Y+16	; 0x10
 6ce:	88 15       	cp	r24, r8
 6d0:	99 05       	cpc	r25, r9
 6d2:	24 f4       	brge	.+8      	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 6d4:	ed 85       	ldd	r30, Y+13	; 0x0d
 6d6:	fe 85       	ldd	r31, Y+14	; 0x0e
 6d8:	81 81       	ldd	r24, Z+1	; 0x01
 6da:	01 c0       	rjmp	.+2      	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6dc:	80 e3       	ldi	r24, 0x30	; 48
 6de:	f1 e0       	ldi	r31, 0x01	; 1
 6e0:	8f 1a       	sub	r8, r31
 6e2:	91 08       	sbc	r9, r1
 6e4:	2d 85       	ldd	r18, Y+13	; 0x0d
 6e6:	3e 85       	ldd	r19, Y+14	; 0x0e
 6e8:	2f 5f       	subi	r18, 0xFF	; 255
 6ea:	3f 4f       	sbci	r19, 0xFF	; 255
 6ec:	3e 87       	std	Y+14, r19	; 0x0e
 6ee:	2d 87       	std	Y+13, r18	; 0x0d
 6f0:	80 16       	cp	r8, r16
 6f2:	91 06       	cpc	r9, r17
 6f4:	2c f0       	brlt	.+10     	; 0x700 <__LOCK_REGION_LENGTH__+0x300>
 6f6:	b7 01       	movw	r22, r14
 6f8:	90 e0       	ldi	r25, 0x00	; 0
 6fa:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 6fe:	d9 cf       	rjmp	.-78     	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 700:	c8 14       	cp	r12, r8
 702:	d9 04       	cpc	r13, r9
 704:	41 f4       	brne	.+16     	; 0x716 <__LOCK_REGION_LENGTH__+0x316>
 706:	9a 81       	ldd	r25, Y+2	; 0x02
 708:	96 33       	cpi	r25, 0x36	; 54
 70a:	20 f4       	brcc	.+8      	; 0x714 <__LOCK_REGION_LENGTH__+0x314>
 70c:	95 33       	cpi	r25, 0x35	; 53
 70e:	19 f4       	brne	.+6      	; 0x716 <__LOCK_REGION_LENGTH__+0x316>
 710:	3c 85       	ldd	r19, Y+12	; 0x0c
 712:	34 ff       	sbrs	r19, 4
 714:	81 e3       	ldi	r24, 0x31	; 49
 716:	b7 01       	movw	r22, r14
 718:	90 e0       	ldi	r25, 0x00	; 0
 71a:	4e c0       	rjmp	.+156    	; 0x7b8 <__LOCK_REGION_LENGTH__+0x3b8>
 71c:	8a 81       	ldd	r24, Y+2	; 0x02
 71e:	81 33       	cpi	r24, 0x31	; 49
 720:	19 f0       	breq	.+6      	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 722:	9c 85       	ldd	r25, Y+12	; 0x0c
 724:	9f 7e       	andi	r25, 0xEF	; 239
 726:	9c 87       	std	Y+12, r25	; 0x0c
 728:	b7 01       	movw	r22, r14
 72a:	90 e0       	ldi	r25, 0x00	; 0
 72c:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 730:	11 11       	cpse	r17, r1
 732:	05 c0       	rjmp	.+10     	; 0x73e <__LOCK_REGION_LENGTH__+0x33e>
 734:	94 fc       	sbrc	r9, 4
 736:	18 c0       	rjmp	.+48     	; 0x768 <__LOCK_REGION_LENGTH__+0x368>
 738:	85 e6       	ldi	r24, 0x65	; 101
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	17 c0       	rjmp	.+46     	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
 73e:	b7 01       	movw	r22, r14
 740:	8e e2       	ldi	r24, 0x2E	; 46
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 748:	1e 5f       	subi	r17, 0xFE	; 254
 74a:	82 e0       	ldi	r24, 0x02	; 2
 74c:	01 e0       	ldi	r16, 0x01	; 1
 74e:	08 0f       	add	r16, r24
 750:	f3 01       	movw	r30, r6
 752:	e8 0f       	add	r30, r24
 754:	f1 1d       	adc	r31, r1
 756:	80 81       	ld	r24, Z
 758:	b7 01       	movw	r22, r14
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 760:	80 2f       	mov	r24, r16
 762:	01 13       	cpse	r16, r17
 764:	f3 cf       	rjmp	.-26     	; 0x74c <__LOCK_REGION_LENGTH__+0x34c>
 766:	e6 cf       	rjmp	.-52     	; 0x734 <__LOCK_REGION_LENGTH__+0x334>
 768:	85 e4       	ldi	r24, 0x45	; 69
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	b7 01       	movw	r22, r14
 76e:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 772:	d7 fc       	sbrc	r13, 7
 774:	06 c0       	rjmp	.+12     	; 0x782 <__LOCK_REGION_LENGTH__+0x382>
 776:	c1 14       	cp	r12, r1
 778:	d1 04       	cpc	r13, r1
 77a:	41 f4       	brne	.+16     	; 0x78c <__LOCK_REGION_LENGTH__+0x38c>
 77c:	ec 85       	ldd	r30, Y+12	; 0x0c
 77e:	e4 ff       	sbrs	r30, 4
 780:	05 c0       	rjmp	.+10     	; 0x78c <__LOCK_REGION_LENGTH__+0x38c>
 782:	d1 94       	neg	r13
 784:	c1 94       	neg	r12
 786:	d1 08       	sbc	r13, r1
 788:	8d e2       	ldi	r24, 0x2D	; 45
 78a:	01 c0       	rjmp	.+2      	; 0x78e <__LOCK_REGION_LENGTH__+0x38e>
 78c:	8b e2       	ldi	r24, 0x2B	; 43
 78e:	b7 01       	movw	r22, r14
 790:	90 e0       	ldi	r25, 0x00	; 0
 792:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 796:	80 e3       	ldi	r24, 0x30	; 48
 798:	2a e0       	ldi	r18, 0x0A	; 10
 79a:	c2 16       	cp	r12, r18
 79c:	d1 04       	cpc	r13, r1
 79e:	2c f0       	brlt	.+10     	; 0x7aa <__LOCK_REGION_LENGTH__+0x3aa>
 7a0:	8f 5f       	subi	r24, 0xFF	; 255
 7a2:	fa e0       	ldi	r31, 0x0A	; 10
 7a4:	cf 1a       	sub	r12, r31
 7a6:	d1 08       	sbc	r13, r1
 7a8:	f7 cf       	rjmp	.-18     	; 0x798 <__LOCK_REGION_LENGTH__+0x398>
 7aa:	b7 01       	movw	r22, r14
 7ac:	90 e0       	ldi	r25, 0x00	; 0
 7ae:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 7b2:	b7 01       	movw	r22, r14
 7b4:	c6 01       	movw	r24, r12
 7b6:	c0 96       	adiw	r24, 0x30	; 48
 7b8:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 7bc:	54 c1       	rjmp	.+680    	; 0xa66 <__stack+0x167>
 7be:	83 36       	cpi	r24, 0x63	; 99
 7c0:	31 f0       	breq	.+12     	; 0x7ce <__LOCK_REGION_LENGTH__+0x3ce>
 7c2:	83 37       	cpi	r24, 0x73	; 115
 7c4:	79 f0       	breq	.+30     	; 0x7e4 <__LOCK_REGION_LENGTH__+0x3e4>
 7c6:	83 35       	cpi	r24, 0x53	; 83
 7c8:	09 f0       	breq	.+2      	; 0x7cc <__LOCK_REGION_LENGTH__+0x3cc>
 7ca:	56 c0       	rjmp	.+172    	; 0x878 <__LOCK_REGION_LENGTH__+0x478>
 7cc:	20 c0       	rjmp	.+64     	; 0x80e <__LOCK_REGION_LENGTH__+0x40e>
 7ce:	56 01       	movw	r10, r12
 7d0:	32 e0       	ldi	r19, 0x02	; 2
 7d2:	a3 0e       	add	r10, r19
 7d4:	b1 1c       	adc	r11, r1
 7d6:	f6 01       	movw	r30, r12
 7d8:	80 81       	ld	r24, Z
 7da:	89 83       	std	Y+1, r24	; 0x01
 7dc:	01 e0       	ldi	r16, 0x01	; 1
 7de:	10 e0       	ldi	r17, 0x00	; 0
 7e0:	63 01       	movw	r12, r6
 7e2:	12 c0       	rjmp	.+36     	; 0x808 <__LOCK_REGION_LENGTH__+0x408>
 7e4:	56 01       	movw	r10, r12
 7e6:	f2 e0       	ldi	r31, 0x02	; 2
 7e8:	af 0e       	add	r10, r31
 7ea:	b1 1c       	adc	r11, r1
 7ec:	f6 01       	movw	r30, r12
 7ee:	c0 80       	ld	r12, Z
 7f0:	d1 80       	ldd	r13, Z+1	; 0x01
 7f2:	96 fe       	sbrs	r9, 6
 7f4:	03 c0       	rjmp	.+6      	; 0x7fc <__LOCK_REGION_LENGTH__+0x3fc>
 7f6:	61 2f       	mov	r22, r17
 7f8:	70 e0       	ldi	r23, 0x00	; 0
 7fa:	02 c0       	rjmp	.+4      	; 0x800 <__LOCK_REGION_LENGTH__+0x400>
 7fc:	6f ef       	ldi	r22, 0xFF	; 255
 7fe:	7f ef       	ldi	r23, 0xFF	; 255
 800:	c6 01       	movw	r24, r12
 802:	0e 94 ad 06 	call	0xd5a	; 0xd5a <strnlen>
 806:	8c 01       	movw	r16, r24
 808:	f9 2d       	mov	r31, r9
 80a:	ff 77       	andi	r31, 0x7F	; 127
 80c:	14 c0       	rjmp	.+40     	; 0x836 <__LOCK_REGION_LENGTH__+0x436>
 80e:	56 01       	movw	r10, r12
 810:	22 e0       	ldi	r18, 0x02	; 2
 812:	a2 0e       	add	r10, r18
 814:	b1 1c       	adc	r11, r1
 816:	f6 01       	movw	r30, r12
 818:	c0 80       	ld	r12, Z
 81a:	d1 80       	ldd	r13, Z+1	; 0x01
 81c:	96 fe       	sbrs	r9, 6
 81e:	03 c0       	rjmp	.+6      	; 0x826 <__LOCK_REGION_LENGTH__+0x426>
 820:	61 2f       	mov	r22, r17
 822:	70 e0       	ldi	r23, 0x00	; 0
 824:	02 c0       	rjmp	.+4      	; 0x82a <__LOCK_REGION_LENGTH__+0x42a>
 826:	6f ef       	ldi	r22, 0xFF	; 255
 828:	7f ef       	ldi	r23, 0xFF	; 255
 82a:	c6 01       	movw	r24, r12
 82c:	0e 94 a2 06 	call	0xd44	; 0xd44 <strnlen_P>
 830:	8c 01       	movw	r16, r24
 832:	f9 2d       	mov	r31, r9
 834:	f0 68       	ori	r31, 0x80	; 128
 836:	9f 2e       	mov	r9, r31
 838:	f3 fd       	sbrc	r31, 3
 83a:	1a c0       	rjmp	.+52     	; 0x870 <__LOCK_REGION_LENGTH__+0x470>
 83c:	85 2d       	mov	r24, r5
 83e:	90 e0       	ldi	r25, 0x00	; 0
 840:	08 17       	cp	r16, r24
 842:	19 07       	cpc	r17, r25
 844:	a8 f4       	brcc	.+42     	; 0x870 <__LOCK_REGION_LENGTH__+0x470>
 846:	b7 01       	movw	r22, r14
 848:	80 e2       	ldi	r24, 0x20	; 32
 84a:	90 e0       	ldi	r25, 0x00	; 0
 84c:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 850:	5a 94       	dec	r5
 852:	f4 cf       	rjmp	.-24     	; 0x83c <__LOCK_REGION_LENGTH__+0x43c>
 854:	f6 01       	movw	r30, r12
 856:	97 fc       	sbrc	r9, 7
 858:	85 91       	lpm	r24, Z+
 85a:	97 fe       	sbrs	r9, 7
 85c:	81 91       	ld	r24, Z+
 85e:	6f 01       	movw	r12, r30
 860:	b7 01       	movw	r22, r14
 862:	90 e0       	ldi	r25, 0x00	; 0
 864:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 868:	51 10       	cpse	r5, r1
 86a:	5a 94       	dec	r5
 86c:	01 50       	subi	r16, 0x01	; 1
 86e:	11 09       	sbc	r17, r1
 870:	01 15       	cp	r16, r1
 872:	11 05       	cpc	r17, r1
 874:	79 f7       	brne	.-34     	; 0x854 <__LOCK_REGION_LENGTH__+0x454>
 876:	f7 c0       	rjmp	.+494    	; 0xa66 <__stack+0x167>
 878:	84 36       	cpi	r24, 0x64	; 100
 87a:	11 f0       	breq	.+4      	; 0x880 <__LOCK_REGION_LENGTH__+0x480>
 87c:	89 36       	cpi	r24, 0x69	; 105
 87e:	61 f5       	brne	.+88     	; 0x8d8 <__LOCK_REGION_LENGTH__+0x4d8>
 880:	56 01       	movw	r10, r12
 882:	97 fe       	sbrs	r9, 7
 884:	09 c0       	rjmp	.+18     	; 0x898 <__LOCK_REGION_LENGTH__+0x498>
 886:	24 e0       	ldi	r18, 0x04	; 4
 888:	a2 0e       	add	r10, r18
 88a:	b1 1c       	adc	r11, r1
 88c:	f6 01       	movw	r30, r12
 88e:	60 81       	ld	r22, Z
 890:	71 81       	ldd	r23, Z+1	; 0x01
 892:	82 81       	ldd	r24, Z+2	; 0x02
 894:	93 81       	ldd	r25, Z+3	; 0x03
 896:	0a c0       	rjmp	.+20     	; 0x8ac <__LOCK_REGION_LENGTH__+0x4ac>
 898:	f2 e0       	ldi	r31, 0x02	; 2
 89a:	af 0e       	add	r10, r31
 89c:	b1 1c       	adc	r11, r1
 89e:	f6 01       	movw	r30, r12
 8a0:	60 81       	ld	r22, Z
 8a2:	71 81       	ldd	r23, Z+1	; 0x01
 8a4:	07 2e       	mov	r0, r23
 8a6:	00 0c       	add	r0, r0
 8a8:	88 0b       	sbc	r24, r24
 8aa:	99 0b       	sbc	r25, r25
 8ac:	f9 2d       	mov	r31, r9
 8ae:	ff 76       	andi	r31, 0x6F	; 111
 8b0:	9f 2e       	mov	r9, r31
 8b2:	97 ff       	sbrs	r25, 7
 8b4:	09 c0       	rjmp	.+18     	; 0x8c8 <__LOCK_REGION_LENGTH__+0x4c8>
 8b6:	90 95       	com	r25
 8b8:	80 95       	com	r24
 8ba:	70 95       	com	r23
 8bc:	61 95       	neg	r22
 8be:	7f 4f       	sbci	r23, 0xFF	; 255
 8c0:	8f 4f       	sbci	r24, 0xFF	; 255
 8c2:	9f 4f       	sbci	r25, 0xFF	; 255
 8c4:	f0 68       	ori	r31, 0x80	; 128
 8c6:	9f 2e       	mov	r9, r31
 8c8:	2a e0       	ldi	r18, 0x0A	; 10
 8ca:	30 e0       	ldi	r19, 0x00	; 0
 8cc:	a3 01       	movw	r20, r6
 8ce:	0e 94 f4 06 	call	0xde8	; 0xde8 <__ultoa_invert>
 8d2:	c8 2e       	mov	r12, r24
 8d4:	c6 18       	sub	r12, r6
 8d6:	3f c0       	rjmp	.+126    	; 0x956 <__stack+0x57>
 8d8:	09 2d       	mov	r16, r9
 8da:	85 37       	cpi	r24, 0x75	; 117
 8dc:	21 f4       	brne	.+8      	; 0x8e6 <__LOCK_REGION_LENGTH__+0x4e6>
 8de:	0f 7e       	andi	r16, 0xEF	; 239
 8e0:	2a e0       	ldi	r18, 0x0A	; 10
 8e2:	30 e0       	ldi	r19, 0x00	; 0
 8e4:	1d c0       	rjmp	.+58     	; 0x920 <__stack+0x21>
 8e6:	09 7f       	andi	r16, 0xF9	; 249
 8e8:	8f 36       	cpi	r24, 0x6F	; 111
 8ea:	91 f0       	breq	.+36     	; 0x910 <__stack+0x11>
 8ec:	18 f4       	brcc	.+6      	; 0x8f4 <__LOCK_REGION_LENGTH__+0x4f4>
 8ee:	88 35       	cpi	r24, 0x58	; 88
 8f0:	59 f0       	breq	.+22     	; 0x908 <__stack+0x9>
 8f2:	c3 c0       	rjmp	.+390    	; 0xa7a <__stack+0x17b>
 8f4:	80 37       	cpi	r24, 0x70	; 112
 8f6:	19 f0       	breq	.+6      	; 0x8fe <__LOCK_REGION_LENGTH__+0x4fe>
 8f8:	88 37       	cpi	r24, 0x78	; 120
 8fa:	11 f0       	breq	.+4      	; 0x900 <__stack+0x1>
 8fc:	be c0       	rjmp	.+380    	; 0xa7a <__stack+0x17b>
 8fe:	00 61       	ori	r16, 0x10	; 16
 900:	04 ff       	sbrs	r16, 4
 902:	09 c0       	rjmp	.+18     	; 0x916 <__stack+0x17>
 904:	04 60       	ori	r16, 0x04	; 4
 906:	07 c0       	rjmp	.+14     	; 0x916 <__stack+0x17>
 908:	94 fe       	sbrs	r9, 4
 90a:	08 c0       	rjmp	.+16     	; 0x91c <__stack+0x1d>
 90c:	06 60       	ori	r16, 0x06	; 6
 90e:	06 c0       	rjmp	.+12     	; 0x91c <__stack+0x1d>
 910:	28 e0       	ldi	r18, 0x08	; 8
 912:	30 e0       	ldi	r19, 0x00	; 0
 914:	05 c0       	rjmp	.+10     	; 0x920 <__stack+0x21>
 916:	20 e1       	ldi	r18, 0x10	; 16
 918:	30 e0       	ldi	r19, 0x00	; 0
 91a:	02 c0       	rjmp	.+4      	; 0x920 <__stack+0x21>
 91c:	20 e1       	ldi	r18, 0x10	; 16
 91e:	32 e0       	ldi	r19, 0x02	; 2
 920:	56 01       	movw	r10, r12
 922:	07 ff       	sbrs	r16, 7
 924:	09 c0       	rjmp	.+18     	; 0x938 <__stack+0x39>
 926:	84 e0       	ldi	r24, 0x04	; 4
 928:	a8 0e       	add	r10, r24
 92a:	b1 1c       	adc	r11, r1
 92c:	f6 01       	movw	r30, r12
 92e:	60 81       	ld	r22, Z
 930:	71 81       	ldd	r23, Z+1	; 0x01
 932:	82 81       	ldd	r24, Z+2	; 0x02
 934:	93 81       	ldd	r25, Z+3	; 0x03
 936:	08 c0       	rjmp	.+16     	; 0x948 <__stack+0x49>
 938:	f2 e0       	ldi	r31, 0x02	; 2
 93a:	af 0e       	add	r10, r31
 93c:	b1 1c       	adc	r11, r1
 93e:	f6 01       	movw	r30, r12
 940:	60 81       	ld	r22, Z
 942:	71 81       	ldd	r23, Z+1	; 0x01
 944:	80 e0       	ldi	r24, 0x00	; 0
 946:	90 e0       	ldi	r25, 0x00	; 0
 948:	a3 01       	movw	r20, r6
 94a:	0e 94 f4 06 	call	0xde8	; 0xde8 <__ultoa_invert>
 94e:	c8 2e       	mov	r12, r24
 950:	c6 18       	sub	r12, r6
 952:	0f 77       	andi	r16, 0x7F	; 127
 954:	90 2e       	mov	r9, r16
 956:	96 fe       	sbrs	r9, 6
 958:	0b c0       	rjmp	.+22     	; 0x970 <__stack+0x71>
 95a:	09 2d       	mov	r16, r9
 95c:	0e 7f       	andi	r16, 0xFE	; 254
 95e:	c1 16       	cp	r12, r17
 960:	50 f4       	brcc	.+20     	; 0x976 <__stack+0x77>
 962:	94 fe       	sbrs	r9, 4
 964:	0a c0       	rjmp	.+20     	; 0x97a <__stack+0x7b>
 966:	92 fc       	sbrc	r9, 2
 968:	08 c0       	rjmp	.+16     	; 0x97a <__stack+0x7b>
 96a:	09 2d       	mov	r16, r9
 96c:	0e 7e       	andi	r16, 0xEE	; 238
 96e:	05 c0       	rjmp	.+10     	; 0x97a <__stack+0x7b>
 970:	dc 2c       	mov	r13, r12
 972:	09 2d       	mov	r16, r9
 974:	03 c0       	rjmp	.+6      	; 0x97c <__stack+0x7d>
 976:	dc 2c       	mov	r13, r12
 978:	01 c0       	rjmp	.+2      	; 0x97c <__stack+0x7d>
 97a:	d1 2e       	mov	r13, r17
 97c:	04 ff       	sbrs	r16, 4
 97e:	0d c0       	rjmp	.+26     	; 0x99a <__stack+0x9b>
 980:	fe 01       	movw	r30, r28
 982:	ec 0d       	add	r30, r12
 984:	f1 1d       	adc	r31, r1
 986:	80 81       	ld	r24, Z
 988:	80 33       	cpi	r24, 0x30	; 48
 98a:	11 f4       	brne	.+4      	; 0x990 <__stack+0x91>
 98c:	09 7e       	andi	r16, 0xE9	; 233
 98e:	09 c0       	rjmp	.+18     	; 0x9a2 <__stack+0xa3>
 990:	02 ff       	sbrs	r16, 2
 992:	06 c0       	rjmp	.+12     	; 0x9a0 <__stack+0xa1>
 994:	d3 94       	inc	r13
 996:	d3 94       	inc	r13
 998:	04 c0       	rjmp	.+8      	; 0x9a2 <__stack+0xa3>
 99a:	80 2f       	mov	r24, r16
 99c:	86 78       	andi	r24, 0x86	; 134
 99e:	09 f0       	breq	.+2      	; 0x9a2 <__stack+0xa3>
 9a0:	d3 94       	inc	r13
 9a2:	03 fd       	sbrc	r16, 3
 9a4:	11 c0       	rjmp	.+34     	; 0x9c8 <__stack+0xc9>
 9a6:	00 ff       	sbrs	r16, 0
 9a8:	06 c0       	rjmp	.+12     	; 0x9b6 <__stack+0xb7>
 9aa:	1c 2d       	mov	r17, r12
 9ac:	d5 14       	cp	r13, r5
 9ae:	80 f4       	brcc	.+32     	; 0x9d0 <__stack+0xd1>
 9b0:	15 0d       	add	r17, r5
 9b2:	1d 19       	sub	r17, r13
 9b4:	0d c0       	rjmp	.+26     	; 0x9d0 <__stack+0xd1>
 9b6:	d5 14       	cp	r13, r5
 9b8:	58 f4       	brcc	.+22     	; 0x9d0 <__stack+0xd1>
 9ba:	b7 01       	movw	r22, r14
 9bc:	80 e2       	ldi	r24, 0x20	; 32
 9be:	90 e0       	ldi	r25, 0x00	; 0
 9c0:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 9c4:	d3 94       	inc	r13
 9c6:	f7 cf       	rjmp	.-18     	; 0x9b6 <__stack+0xb7>
 9c8:	d5 14       	cp	r13, r5
 9ca:	10 f4       	brcc	.+4      	; 0x9d0 <__stack+0xd1>
 9cc:	5d 18       	sub	r5, r13
 9ce:	01 c0       	rjmp	.+2      	; 0x9d2 <__stack+0xd3>
 9d0:	51 2c       	mov	r5, r1
 9d2:	04 ff       	sbrs	r16, 4
 9d4:	10 c0       	rjmp	.+32     	; 0x9f6 <__stack+0xf7>
 9d6:	b7 01       	movw	r22, r14
 9d8:	80 e3       	ldi	r24, 0x30	; 48
 9da:	90 e0       	ldi	r25, 0x00	; 0
 9dc:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 9e0:	02 ff       	sbrs	r16, 2
 9e2:	17 c0       	rjmp	.+46     	; 0xa12 <__stack+0x113>
 9e4:	01 fd       	sbrc	r16, 1
 9e6:	03 c0       	rjmp	.+6      	; 0x9ee <__stack+0xef>
 9e8:	88 e7       	ldi	r24, 0x78	; 120
 9ea:	90 e0       	ldi	r25, 0x00	; 0
 9ec:	02 c0       	rjmp	.+4      	; 0x9f2 <__stack+0xf3>
 9ee:	88 e5       	ldi	r24, 0x58	; 88
 9f0:	90 e0       	ldi	r25, 0x00	; 0
 9f2:	b7 01       	movw	r22, r14
 9f4:	0c c0       	rjmp	.+24     	; 0xa0e <__stack+0x10f>
 9f6:	80 2f       	mov	r24, r16
 9f8:	86 78       	andi	r24, 0x86	; 134
 9fa:	59 f0       	breq	.+22     	; 0xa12 <__stack+0x113>
 9fc:	01 ff       	sbrs	r16, 1
 9fe:	02 c0       	rjmp	.+4      	; 0xa04 <__stack+0x105>
 a00:	8b e2       	ldi	r24, 0x2B	; 43
 a02:	01 c0       	rjmp	.+2      	; 0xa06 <__stack+0x107>
 a04:	80 e2       	ldi	r24, 0x20	; 32
 a06:	07 fd       	sbrc	r16, 7
 a08:	8d e2       	ldi	r24, 0x2D	; 45
 a0a:	b7 01       	movw	r22, r14
 a0c:	90 e0       	ldi	r25, 0x00	; 0
 a0e:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 a12:	c1 16       	cp	r12, r17
 a14:	38 f4       	brcc	.+14     	; 0xa24 <__stack+0x125>
 a16:	b7 01       	movw	r22, r14
 a18:	80 e3       	ldi	r24, 0x30	; 48
 a1a:	90 e0       	ldi	r25, 0x00	; 0
 a1c:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 a20:	11 50       	subi	r17, 0x01	; 1
 a22:	f7 cf       	rjmp	.-18     	; 0xa12 <__stack+0x113>
 a24:	ca 94       	dec	r12
 a26:	f3 01       	movw	r30, r6
 a28:	ec 0d       	add	r30, r12
 a2a:	f1 1d       	adc	r31, r1
 a2c:	80 81       	ld	r24, Z
 a2e:	b7 01       	movw	r22, r14
 a30:	90 e0       	ldi	r25, 0x00	; 0
 a32:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 a36:	c1 10       	cpse	r12, r1
 a38:	f5 cf       	rjmp	.-22     	; 0xa24 <__stack+0x125>
 a3a:	15 c0       	rjmp	.+42     	; 0xa66 <__stack+0x167>
 a3c:	f4 e0       	ldi	r31, 0x04	; 4
 a3e:	f5 15       	cp	r31, r5
 a40:	60 f5       	brcc	.+88     	; 0xa9a <__stack+0x19b>
 a42:	84 e0       	ldi	r24, 0x04	; 4
 a44:	58 1a       	sub	r5, r24
 a46:	93 fe       	sbrs	r9, 3
 a48:	1f c0       	rjmp	.+62     	; 0xa88 <__stack+0x189>
 a4a:	01 11       	cpse	r16, r1
 a4c:	27 c0       	rjmp	.+78     	; 0xa9c <__stack+0x19d>
 a4e:	2c 85       	ldd	r18, Y+12	; 0x0c
 a50:	23 ff       	sbrs	r18, 3
 a52:	2a c0       	rjmp	.+84     	; 0xaa8 <__stack+0x1a9>
 a54:	08 e6       	ldi	r16, 0x68	; 104
 a56:	10 e0       	ldi	r17, 0x00	; 0
 a58:	39 2d       	mov	r19, r9
 a5a:	30 71       	andi	r19, 0x10	; 16
 a5c:	93 2e       	mov	r9, r19
 a5e:	f8 01       	movw	r30, r16
 a60:	84 91       	lpm	r24, Z
 a62:	81 11       	cpse	r24, r1
 a64:	24 c0       	rjmp	.+72     	; 0xaae <__stack+0x1af>
 a66:	55 20       	and	r5, r5
 a68:	09 f4       	brne	.+2      	; 0xa6c <__stack+0x16d>
 a6a:	e4 cc       	rjmp	.-1592   	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 a6c:	b7 01       	movw	r22, r14
 a6e:	80 e2       	ldi	r24, 0x20	; 32
 a70:	90 e0       	ldi	r25, 0x00	; 0
 a72:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 a76:	5a 94       	dec	r5
 a78:	f6 cf       	rjmp	.-20     	; 0xa66 <__stack+0x167>
 a7a:	f7 01       	movw	r30, r14
 a7c:	86 81       	ldd	r24, Z+6	; 0x06
 a7e:	97 81       	ldd	r25, Z+7	; 0x07
 a80:	26 c0       	rjmp	.+76     	; 0xace <__stack+0x1cf>
 a82:	8f ef       	ldi	r24, 0xFF	; 255
 a84:	9f ef       	ldi	r25, 0xFF	; 255
 a86:	23 c0       	rjmp	.+70     	; 0xace <__stack+0x1cf>
 a88:	b7 01       	movw	r22, r14
 a8a:	80 e2       	ldi	r24, 0x20	; 32
 a8c:	90 e0       	ldi	r25, 0x00	; 0
 a8e:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 a92:	5a 94       	dec	r5
 a94:	51 10       	cpse	r5, r1
 a96:	f8 cf       	rjmp	.-16     	; 0xa88 <__stack+0x189>
 a98:	d8 cf       	rjmp	.-80     	; 0xa4a <__stack+0x14b>
 a9a:	51 2c       	mov	r5, r1
 a9c:	b7 01       	movw	r22, r14
 a9e:	80 2f       	mov	r24, r16
 aa0:	90 e0       	ldi	r25, 0x00	; 0
 aa2:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 aa6:	d3 cf       	rjmp	.-90     	; 0xa4e <__stack+0x14f>
 aa8:	0c e6       	ldi	r16, 0x6C	; 108
 aaa:	10 e0       	ldi	r17, 0x00	; 0
 aac:	d5 cf       	rjmp	.-86     	; 0xa58 <__stack+0x159>
 aae:	91 10       	cpse	r9, r1
 ab0:	80 52       	subi	r24, 0x20	; 32
 ab2:	b7 01       	movw	r22, r14
 ab4:	90 e0       	ldi	r25, 0x00	; 0
 ab6:	0e 94 b8 06 	call	0xd70	; 0xd70 <fputc>
 aba:	0f 5f       	subi	r16, 0xFF	; 255
 abc:	1f 4f       	sbci	r17, 0xFF	; 255
 abe:	cf cf       	rjmp	.-98     	; 0xa5e <__stack+0x15f>
 ac0:	23 e0       	ldi	r18, 0x03	; 3
 ac2:	25 15       	cp	r18, r5
 ac4:	10 f4       	brcc	.+4      	; 0xaca <__stack+0x1cb>
 ac6:	83 e0       	ldi	r24, 0x03	; 3
 ac8:	bd cf       	rjmp	.-134    	; 0xa44 <__stack+0x145>
 aca:	51 2c       	mov	r5, r1
 acc:	c0 cf       	rjmp	.-128    	; 0xa4e <__stack+0x14f>
 ace:	60 96       	adiw	r28, 0x10	; 16
 ad0:	e2 e1       	ldi	r30, 0x12	; 18
 ad2:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <__epilogue_restores__>

00000ad6 <__divmodhi4>:
 ad6:	97 fb       	bst	r25, 7
 ad8:	07 2e       	mov	r0, r23
 ada:	16 f4       	brtc	.+4      	; 0xae0 <__divmodhi4+0xa>
 adc:	00 94       	com	r0
 ade:	07 d0       	rcall	.+14     	; 0xaee <__divmodhi4_neg1>
 ae0:	77 fd       	sbrc	r23, 7
 ae2:	09 d0       	rcall	.+18     	; 0xaf6 <__divmodhi4_neg2>
 ae4:	0e 94 b6 05 	call	0xb6c	; 0xb6c <__udivmodhi4>
 ae8:	07 fc       	sbrc	r0, 7
 aea:	05 d0       	rcall	.+10     	; 0xaf6 <__divmodhi4_neg2>
 aec:	3e f4       	brtc	.+14     	; 0xafc <__divmodhi4_exit>

00000aee <__divmodhi4_neg1>:
 aee:	90 95       	com	r25
 af0:	81 95       	neg	r24
 af2:	9f 4f       	sbci	r25, 0xFF	; 255
 af4:	08 95       	ret

00000af6 <__divmodhi4_neg2>:
 af6:	70 95       	com	r23
 af8:	61 95       	neg	r22
 afa:	7f 4f       	sbci	r23, 0xFF	; 255

00000afc <__divmodhi4_exit>:
 afc:	08 95       	ret

00000afe <__prologue_saves__>:
 afe:	2f 92       	push	r2
 b00:	3f 92       	push	r3
 b02:	4f 92       	push	r4
 b04:	5f 92       	push	r5
 b06:	6f 92       	push	r6
 b08:	7f 92       	push	r7
 b0a:	8f 92       	push	r8
 b0c:	9f 92       	push	r9
 b0e:	af 92       	push	r10
 b10:	bf 92       	push	r11
 b12:	cf 92       	push	r12
 b14:	df 92       	push	r13
 b16:	ef 92       	push	r14
 b18:	ff 92       	push	r15
 b1a:	0f 93       	push	r16
 b1c:	1f 93       	push	r17
 b1e:	cf 93       	push	r28
 b20:	df 93       	push	r29
 b22:	cd b7       	in	r28, 0x3d	; 61
 b24:	de b7       	in	r29, 0x3e	; 62
 b26:	ca 1b       	sub	r28, r26
 b28:	db 0b       	sbc	r29, r27
 b2a:	0f b6       	in	r0, 0x3f	; 63
 b2c:	f8 94       	cli
 b2e:	de bf       	out	0x3e, r29	; 62
 b30:	0f be       	out	0x3f, r0	; 63
 b32:	cd bf       	out	0x3d, r28	; 61
 b34:	09 94       	ijmp

00000b36 <__epilogue_restores__>:
 b36:	2a 88       	ldd	r2, Y+18	; 0x12
 b38:	39 88       	ldd	r3, Y+17	; 0x11
 b3a:	48 88       	ldd	r4, Y+16	; 0x10
 b3c:	5f 84       	ldd	r5, Y+15	; 0x0f
 b3e:	6e 84       	ldd	r6, Y+14	; 0x0e
 b40:	7d 84       	ldd	r7, Y+13	; 0x0d
 b42:	8c 84       	ldd	r8, Y+12	; 0x0c
 b44:	9b 84       	ldd	r9, Y+11	; 0x0b
 b46:	aa 84       	ldd	r10, Y+10	; 0x0a
 b48:	b9 84       	ldd	r11, Y+9	; 0x09
 b4a:	c8 84       	ldd	r12, Y+8	; 0x08
 b4c:	df 80       	ldd	r13, Y+7	; 0x07
 b4e:	ee 80       	ldd	r14, Y+6	; 0x06
 b50:	fd 80       	ldd	r15, Y+5	; 0x05
 b52:	0c 81       	ldd	r16, Y+4	; 0x04
 b54:	1b 81       	ldd	r17, Y+3	; 0x03
 b56:	aa 81       	ldd	r26, Y+2	; 0x02
 b58:	b9 81       	ldd	r27, Y+1	; 0x01
 b5a:	ce 0f       	add	r28, r30
 b5c:	d1 1d       	adc	r29, r1
 b5e:	0f b6       	in	r0, 0x3f	; 63
 b60:	f8 94       	cli
 b62:	de bf       	out	0x3e, r29	; 62
 b64:	0f be       	out	0x3f, r0	; 63
 b66:	cd bf       	out	0x3d, r28	; 61
 b68:	ed 01       	movw	r28, r26
 b6a:	08 95       	ret

00000b6c <__udivmodhi4>:
 b6c:	aa 1b       	sub	r26, r26
 b6e:	bb 1b       	sub	r27, r27
 b70:	51 e1       	ldi	r21, 0x11	; 17
 b72:	07 c0       	rjmp	.+14     	; 0xb82 <__udivmodhi4_ep>

00000b74 <__udivmodhi4_loop>:
 b74:	aa 1f       	adc	r26, r26
 b76:	bb 1f       	adc	r27, r27
 b78:	a6 17       	cp	r26, r22
 b7a:	b7 07       	cpc	r27, r23
 b7c:	10 f0       	brcs	.+4      	; 0xb82 <__udivmodhi4_ep>
 b7e:	a6 1b       	sub	r26, r22
 b80:	b7 0b       	sbc	r27, r23

00000b82 <__udivmodhi4_ep>:
 b82:	88 1f       	adc	r24, r24
 b84:	99 1f       	adc	r25, r25
 b86:	5a 95       	dec	r21
 b88:	a9 f7       	brne	.-22     	; 0xb74 <__udivmodhi4_loop>
 b8a:	80 95       	com	r24
 b8c:	90 95       	com	r25
 b8e:	bc 01       	movw	r22, r24
 b90:	cd 01       	movw	r24, r26
 b92:	08 95       	ret

00000b94 <__ftoa_engine>:
 b94:	28 30       	cpi	r18, 0x08	; 8
 b96:	08 f0       	brcs	.+2      	; 0xb9a <__ftoa_engine+0x6>
 b98:	27 e0       	ldi	r18, 0x07	; 7
 b9a:	33 27       	eor	r19, r19
 b9c:	da 01       	movw	r26, r20
 b9e:	99 0f       	add	r25, r25
 ba0:	31 1d       	adc	r19, r1
 ba2:	87 fd       	sbrc	r24, 7
 ba4:	91 60       	ori	r25, 0x01	; 1
 ba6:	00 96       	adiw	r24, 0x00	; 0
 ba8:	61 05       	cpc	r22, r1
 baa:	71 05       	cpc	r23, r1
 bac:	39 f4       	brne	.+14     	; 0xbbc <__ftoa_engine+0x28>
 bae:	32 60       	ori	r19, 0x02	; 2
 bb0:	2e 5f       	subi	r18, 0xFE	; 254
 bb2:	3d 93       	st	X+, r19
 bb4:	30 e3       	ldi	r19, 0x30	; 48
 bb6:	2a 95       	dec	r18
 bb8:	e1 f7       	brne	.-8      	; 0xbb2 <__ftoa_engine+0x1e>
 bba:	08 95       	ret
 bbc:	9f 3f       	cpi	r25, 0xFF	; 255
 bbe:	30 f0       	brcs	.+12     	; 0xbcc <__ftoa_engine+0x38>
 bc0:	80 38       	cpi	r24, 0x80	; 128
 bc2:	71 05       	cpc	r23, r1
 bc4:	61 05       	cpc	r22, r1
 bc6:	09 f0       	breq	.+2      	; 0xbca <__ftoa_engine+0x36>
 bc8:	3c 5f       	subi	r19, 0xFC	; 252
 bca:	3c 5f       	subi	r19, 0xFC	; 252
 bcc:	3d 93       	st	X+, r19
 bce:	91 30       	cpi	r25, 0x01	; 1
 bd0:	08 f0       	brcs	.+2      	; 0xbd4 <__ftoa_engine+0x40>
 bd2:	80 68       	ori	r24, 0x80	; 128
 bd4:	91 1d       	adc	r25, r1
 bd6:	df 93       	push	r29
 bd8:	cf 93       	push	r28
 bda:	1f 93       	push	r17
 bdc:	0f 93       	push	r16
 bde:	ff 92       	push	r15
 be0:	ef 92       	push	r14
 be2:	19 2f       	mov	r17, r25
 be4:	98 7f       	andi	r25, 0xF8	; 248
 be6:	96 95       	lsr	r25
 be8:	e9 2f       	mov	r30, r25
 bea:	96 95       	lsr	r25
 bec:	96 95       	lsr	r25
 bee:	e9 0f       	add	r30, r25
 bf0:	ff 27       	eor	r31, r31
 bf2:	e6 53       	subi	r30, 0x36	; 54
 bf4:	ff 4f       	sbci	r31, 0xFF	; 255
 bf6:	99 27       	eor	r25, r25
 bf8:	33 27       	eor	r19, r19
 bfa:	ee 24       	eor	r14, r14
 bfc:	ff 24       	eor	r15, r15
 bfe:	a7 01       	movw	r20, r14
 c00:	e7 01       	movw	r28, r14
 c02:	05 90       	lpm	r0, Z+
 c04:	08 94       	sec
 c06:	07 94       	ror	r0
 c08:	28 f4       	brcc	.+10     	; 0xc14 <__ftoa_engine+0x80>
 c0a:	36 0f       	add	r19, r22
 c0c:	e7 1e       	adc	r14, r23
 c0e:	f8 1e       	adc	r15, r24
 c10:	49 1f       	adc	r20, r25
 c12:	51 1d       	adc	r21, r1
 c14:	66 0f       	add	r22, r22
 c16:	77 1f       	adc	r23, r23
 c18:	88 1f       	adc	r24, r24
 c1a:	99 1f       	adc	r25, r25
 c1c:	06 94       	lsr	r0
 c1e:	a1 f7       	brne	.-24     	; 0xc08 <__ftoa_engine+0x74>
 c20:	05 90       	lpm	r0, Z+
 c22:	07 94       	ror	r0
 c24:	28 f4       	brcc	.+10     	; 0xc30 <__ftoa_engine+0x9c>
 c26:	e7 0e       	add	r14, r23
 c28:	f8 1e       	adc	r15, r24
 c2a:	49 1f       	adc	r20, r25
 c2c:	56 1f       	adc	r21, r22
 c2e:	c1 1d       	adc	r28, r1
 c30:	77 0f       	add	r23, r23
 c32:	88 1f       	adc	r24, r24
 c34:	99 1f       	adc	r25, r25
 c36:	66 1f       	adc	r22, r22
 c38:	06 94       	lsr	r0
 c3a:	a1 f7       	brne	.-24     	; 0xc24 <__ftoa_engine+0x90>
 c3c:	05 90       	lpm	r0, Z+
 c3e:	07 94       	ror	r0
 c40:	28 f4       	brcc	.+10     	; 0xc4c <__ftoa_engine+0xb8>
 c42:	f8 0e       	add	r15, r24
 c44:	49 1f       	adc	r20, r25
 c46:	56 1f       	adc	r21, r22
 c48:	c7 1f       	adc	r28, r23
 c4a:	d1 1d       	adc	r29, r1
 c4c:	88 0f       	add	r24, r24
 c4e:	99 1f       	adc	r25, r25
 c50:	66 1f       	adc	r22, r22
 c52:	77 1f       	adc	r23, r23
 c54:	06 94       	lsr	r0
 c56:	a1 f7       	brne	.-24     	; 0xc40 <__ftoa_engine+0xac>
 c58:	05 90       	lpm	r0, Z+
 c5a:	07 94       	ror	r0
 c5c:	20 f4       	brcc	.+8      	; 0xc66 <__ftoa_engine+0xd2>
 c5e:	49 0f       	add	r20, r25
 c60:	56 1f       	adc	r21, r22
 c62:	c7 1f       	adc	r28, r23
 c64:	d8 1f       	adc	r29, r24
 c66:	99 0f       	add	r25, r25
 c68:	66 1f       	adc	r22, r22
 c6a:	77 1f       	adc	r23, r23
 c6c:	88 1f       	adc	r24, r24
 c6e:	06 94       	lsr	r0
 c70:	a9 f7       	brne	.-22     	; 0xc5c <__ftoa_engine+0xc8>
 c72:	84 91       	lpm	r24, Z
 c74:	10 95       	com	r17
 c76:	17 70       	andi	r17, 0x07	; 7
 c78:	41 f0       	breq	.+16     	; 0xc8a <__ftoa_engine+0xf6>
 c7a:	d6 95       	lsr	r29
 c7c:	c7 95       	ror	r28
 c7e:	57 95       	ror	r21
 c80:	47 95       	ror	r20
 c82:	f7 94       	ror	r15
 c84:	e7 94       	ror	r14
 c86:	1a 95       	dec	r17
 c88:	c1 f7       	brne	.-16     	; 0xc7a <__ftoa_engine+0xe6>
 c8a:	e0 e7       	ldi	r30, 0x70	; 112
 c8c:	f0 e0       	ldi	r31, 0x00	; 0
 c8e:	68 94       	set
 c90:	15 90       	lpm	r1, Z+
 c92:	15 91       	lpm	r17, Z+
 c94:	35 91       	lpm	r19, Z+
 c96:	65 91       	lpm	r22, Z+
 c98:	95 91       	lpm	r25, Z+
 c9a:	05 90       	lpm	r0, Z+
 c9c:	7f e2       	ldi	r23, 0x2F	; 47
 c9e:	73 95       	inc	r23
 ca0:	e1 18       	sub	r14, r1
 ca2:	f1 0a       	sbc	r15, r17
 ca4:	43 0b       	sbc	r20, r19
 ca6:	56 0b       	sbc	r21, r22
 ca8:	c9 0b       	sbc	r28, r25
 caa:	d0 09       	sbc	r29, r0
 cac:	c0 f7       	brcc	.-16     	; 0xc9e <__ftoa_engine+0x10a>
 cae:	e1 0c       	add	r14, r1
 cb0:	f1 1e       	adc	r15, r17
 cb2:	43 1f       	adc	r20, r19
 cb4:	56 1f       	adc	r21, r22
 cb6:	c9 1f       	adc	r28, r25
 cb8:	d0 1d       	adc	r29, r0
 cba:	7e f4       	brtc	.+30     	; 0xcda <__ftoa_engine+0x146>
 cbc:	70 33       	cpi	r23, 0x30	; 48
 cbe:	11 f4       	brne	.+4      	; 0xcc4 <__ftoa_engine+0x130>
 cc0:	8a 95       	dec	r24
 cc2:	e6 cf       	rjmp	.-52     	; 0xc90 <__ftoa_engine+0xfc>
 cc4:	e8 94       	clt
 cc6:	01 50       	subi	r16, 0x01	; 1
 cc8:	30 f0       	brcs	.+12     	; 0xcd6 <__ftoa_engine+0x142>
 cca:	08 0f       	add	r16, r24
 ccc:	0a f4       	brpl	.+2      	; 0xcd0 <__ftoa_engine+0x13c>
 cce:	00 27       	eor	r16, r16
 cd0:	02 17       	cp	r16, r18
 cd2:	08 f4       	brcc	.+2      	; 0xcd6 <__ftoa_engine+0x142>
 cd4:	20 2f       	mov	r18, r16
 cd6:	23 95       	inc	r18
 cd8:	02 2f       	mov	r16, r18
 cda:	7a 33       	cpi	r23, 0x3A	; 58
 cdc:	28 f0       	brcs	.+10     	; 0xce8 <__ftoa_engine+0x154>
 cde:	79 e3       	ldi	r23, 0x39	; 57
 ce0:	7d 93       	st	X+, r23
 ce2:	2a 95       	dec	r18
 ce4:	e9 f7       	brne	.-6      	; 0xce0 <__ftoa_engine+0x14c>
 ce6:	10 c0       	rjmp	.+32     	; 0xd08 <__ftoa_engine+0x174>
 ce8:	7d 93       	st	X+, r23
 cea:	2a 95       	dec	r18
 cec:	89 f6       	brne	.-94     	; 0xc90 <__ftoa_engine+0xfc>
 cee:	06 94       	lsr	r0
 cf0:	97 95       	ror	r25
 cf2:	67 95       	ror	r22
 cf4:	37 95       	ror	r19
 cf6:	17 95       	ror	r17
 cf8:	17 94       	ror	r1
 cfa:	e1 18       	sub	r14, r1
 cfc:	f1 0a       	sbc	r15, r17
 cfe:	43 0b       	sbc	r20, r19
 d00:	56 0b       	sbc	r21, r22
 d02:	c9 0b       	sbc	r28, r25
 d04:	d0 09       	sbc	r29, r0
 d06:	98 f0       	brcs	.+38     	; 0xd2e <__ftoa_engine+0x19a>
 d08:	23 95       	inc	r18
 d0a:	7e 91       	ld	r23, -X
 d0c:	73 95       	inc	r23
 d0e:	7a 33       	cpi	r23, 0x3A	; 58
 d10:	08 f0       	brcs	.+2      	; 0xd14 <__ftoa_engine+0x180>
 d12:	70 e3       	ldi	r23, 0x30	; 48
 d14:	7c 93       	st	X, r23
 d16:	20 13       	cpse	r18, r16
 d18:	b8 f7       	brcc	.-18     	; 0xd08 <__ftoa_engine+0x174>
 d1a:	7e 91       	ld	r23, -X
 d1c:	70 61       	ori	r23, 0x10	; 16
 d1e:	7d 93       	st	X+, r23
 d20:	30 f0       	brcs	.+12     	; 0xd2e <__ftoa_engine+0x19a>
 d22:	83 95       	inc	r24
 d24:	71 e3       	ldi	r23, 0x31	; 49
 d26:	7d 93       	st	X+, r23
 d28:	70 e3       	ldi	r23, 0x30	; 48
 d2a:	2a 95       	dec	r18
 d2c:	e1 f7       	brne	.-8      	; 0xd26 <__ftoa_engine+0x192>
 d2e:	11 24       	eor	r1, r1
 d30:	ef 90       	pop	r14
 d32:	ff 90       	pop	r15
 d34:	0f 91       	pop	r16
 d36:	1f 91       	pop	r17
 d38:	cf 91       	pop	r28
 d3a:	df 91       	pop	r29
 d3c:	99 27       	eor	r25, r25
 d3e:	87 fd       	sbrc	r24, 7
 d40:	90 95       	com	r25
 d42:	08 95       	ret

00000d44 <strnlen_P>:
 d44:	fc 01       	movw	r30, r24
 d46:	05 90       	lpm	r0, Z+
 d48:	61 50       	subi	r22, 0x01	; 1
 d4a:	70 40       	sbci	r23, 0x00	; 0
 d4c:	01 10       	cpse	r0, r1
 d4e:	d8 f7       	brcc	.-10     	; 0xd46 <strnlen_P+0x2>
 d50:	80 95       	com	r24
 d52:	90 95       	com	r25
 d54:	8e 0f       	add	r24, r30
 d56:	9f 1f       	adc	r25, r31
 d58:	08 95       	ret

00000d5a <strnlen>:
 d5a:	fc 01       	movw	r30, r24
 d5c:	61 50       	subi	r22, 0x01	; 1
 d5e:	70 40       	sbci	r23, 0x00	; 0
 d60:	01 90       	ld	r0, Z+
 d62:	01 10       	cpse	r0, r1
 d64:	d8 f7       	brcc	.-10     	; 0xd5c <strnlen+0x2>
 d66:	80 95       	com	r24
 d68:	90 95       	com	r25
 d6a:	8e 0f       	add	r24, r30
 d6c:	9f 1f       	adc	r25, r31
 d6e:	08 95       	ret

00000d70 <fputc>:
 d70:	0f 93       	push	r16
 d72:	1f 93       	push	r17
 d74:	cf 93       	push	r28
 d76:	df 93       	push	r29
 d78:	fb 01       	movw	r30, r22
 d7a:	23 81       	ldd	r18, Z+3	; 0x03
 d7c:	21 fd       	sbrc	r18, 1
 d7e:	03 c0       	rjmp	.+6      	; 0xd86 <fputc+0x16>
 d80:	8f ef       	ldi	r24, 0xFF	; 255
 d82:	9f ef       	ldi	r25, 0xFF	; 255
 d84:	2c c0       	rjmp	.+88     	; 0xdde <fputc+0x6e>
 d86:	22 ff       	sbrs	r18, 2
 d88:	16 c0       	rjmp	.+44     	; 0xdb6 <fputc+0x46>
 d8a:	46 81       	ldd	r20, Z+6	; 0x06
 d8c:	57 81       	ldd	r21, Z+7	; 0x07
 d8e:	24 81       	ldd	r18, Z+4	; 0x04
 d90:	35 81       	ldd	r19, Z+5	; 0x05
 d92:	42 17       	cp	r20, r18
 d94:	53 07       	cpc	r21, r19
 d96:	44 f4       	brge	.+16     	; 0xda8 <fputc+0x38>
 d98:	a0 81       	ld	r26, Z
 d9a:	b1 81       	ldd	r27, Z+1	; 0x01
 d9c:	9d 01       	movw	r18, r26
 d9e:	2f 5f       	subi	r18, 0xFF	; 255
 da0:	3f 4f       	sbci	r19, 0xFF	; 255
 da2:	31 83       	std	Z+1, r19	; 0x01
 da4:	20 83       	st	Z, r18
 da6:	8c 93       	st	X, r24
 da8:	26 81       	ldd	r18, Z+6	; 0x06
 daa:	37 81       	ldd	r19, Z+7	; 0x07
 dac:	2f 5f       	subi	r18, 0xFF	; 255
 dae:	3f 4f       	sbci	r19, 0xFF	; 255
 db0:	37 83       	std	Z+7, r19	; 0x07
 db2:	26 83       	std	Z+6, r18	; 0x06
 db4:	14 c0       	rjmp	.+40     	; 0xdde <fputc+0x6e>
 db6:	8b 01       	movw	r16, r22
 db8:	ec 01       	movw	r28, r24
 dba:	fb 01       	movw	r30, r22
 dbc:	00 84       	ldd	r0, Z+8	; 0x08
 dbe:	f1 85       	ldd	r31, Z+9	; 0x09
 dc0:	e0 2d       	mov	r30, r0
 dc2:	09 95       	icall
 dc4:	89 2b       	or	r24, r25
 dc6:	e1 f6       	brne	.-72     	; 0xd80 <fputc+0x10>
 dc8:	d8 01       	movw	r26, r16
 dca:	16 96       	adiw	r26, 0x06	; 6
 dcc:	8d 91       	ld	r24, X+
 dce:	9c 91       	ld	r25, X
 dd0:	17 97       	sbiw	r26, 0x07	; 7
 dd2:	01 96       	adiw	r24, 0x01	; 1
 dd4:	17 96       	adiw	r26, 0x07	; 7
 dd6:	9c 93       	st	X, r25
 dd8:	8e 93       	st	-X, r24
 dda:	16 97       	sbiw	r26, 0x06	; 6
 ddc:	ce 01       	movw	r24, r28
 dde:	df 91       	pop	r29
 de0:	cf 91       	pop	r28
 de2:	1f 91       	pop	r17
 de4:	0f 91       	pop	r16
 de6:	08 95       	ret

00000de8 <__ultoa_invert>:
 de8:	fa 01       	movw	r30, r20
 dea:	aa 27       	eor	r26, r26
 dec:	28 30       	cpi	r18, 0x08	; 8
 dee:	51 f1       	breq	.+84     	; 0xe44 <__ultoa_invert+0x5c>
 df0:	20 31       	cpi	r18, 0x10	; 16
 df2:	81 f1       	breq	.+96     	; 0xe54 <__ultoa_invert+0x6c>
 df4:	e8 94       	clt
 df6:	6f 93       	push	r22
 df8:	6e 7f       	andi	r22, 0xFE	; 254
 dfa:	6e 5f       	subi	r22, 0xFE	; 254
 dfc:	7f 4f       	sbci	r23, 0xFF	; 255
 dfe:	8f 4f       	sbci	r24, 0xFF	; 255
 e00:	9f 4f       	sbci	r25, 0xFF	; 255
 e02:	af 4f       	sbci	r26, 0xFF	; 255
 e04:	b1 e0       	ldi	r27, 0x01	; 1
 e06:	3e d0       	rcall	.+124    	; 0xe84 <__ultoa_invert+0x9c>
 e08:	b4 e0       	ldi	r27, 0x04	; 4
 e0a:	3c d0       	rcall	.+120    	; 0xe84 <__ultoa_invert+0x9c>
 e0c:	67 0f       	add	r22, r23
 e0e:	78 1f       	adc	r23, r24
 e10:	89 1f       	adc	r24, r25
 e12:	9a 1f       	adc	r25, r26
 e14:	a1 1d       	adc	r26, r1
 e16:	68 0f       	add	r22, r24
 e18:	79 1f       	adc	r23, r25
 e1a:	8a 1f       	adc	r24, r26
 e1c:	91 1d       	adc	r25, r1
 e1e:	a1 1d       	adc	r26, r1
 e20:	6a 0f       	add	r22, r26
 e22:	71 1d       	adc	r23, r1
 e24:	81 1d       	adc	r24, r1
 e26:	91 1d       	adc	r25, r1
 e28:	a1 1d       	adc	r26, r1
 e2a:	20 d0       	rcall	.+64     	; 0xe6c <__ultoa_invert+0x84>
 e2c:	09 f4       	brne	.+2      	; 0xe30 <__ultoa_invert+0x48>
 e2e:	68 94       	set
 e30:	3f 91       	pop	r19
 e32:	2a e0       	ldi	r18, 0x0A	; 10
 e34:	26 9f       	mul	r18, r22
 e36:	11 24       	eor	r1, r1
 e38:	30 19       	sub	r19, r0
 e3a:	30 5d       	subi	r19, 0xD0	; 208
 e3c:	31 93       	st	Z+, r19
 e3e:	de f6       	brtc	.-74     	; 0xdf6 <__ultoa_invert+0xe>
 e40:	cf 01       	movw	r24, r30
 e42:	08 95       	ret
 e44:	46 2f       	mov	r20, r22
 e46:	47 70       	andi	r20, 0x07	; 7
 e48:	40 5d       	subi	r20, 0xD0	; 208
 e4a:	41 93       	st	Z+, r20
 e4c:	b3 e0       	ldi	r27, 0x03	; 3
 e4e:	0f d0       	rcall	.+30     	; 0xe6e <__ultoa_invert+0x86>
 e50:	c9 f7       	brne	.-14     	; 0xe44 <__ultoa_invert+0x5c>
 e52:	f6 cf       	rjmp	.-20     	; 0xe40 <__ultoa_invert+0x58>
 e54:	46 2f       	mov	r20, r22
 e56:	4f 70       	andi	r20, 0x0F	; 15
 e58:	40 5d       	subi	r20, 0xD0	; 208
 e5a:	4a 33       	cpi	r20, 0x3A	; 58
 e5c:	18 f0       	brcs	.+6      	; 0xe64 <__ultoa_invert+0x7c>
 e5e:	49 5d       	subi	r20, 0xD9	; 217
 e60:	31 fd       	sbrc	r19, 1
 e62:	40 52       	subi	r20, 0x20	; 32
 e64:	41 93       	st	Z+, r20
 e66:	02 d0       	rcall	.+4      	; 0xe6c <__ultoa_invert+0x84>
 e68:	a9 f7       	brne	.-22     	; 0xe54 <__ultoa_invert+0x6c>
 e6a:	ea cf       	rjmp	.-44     	; 0xe40 <__ultoa_invert+0x58>
 e6c:	b4 e0       	ldi	r27, 0x04	; 4
 e6e:	a6 95       	lsr	r26
 e70:	97 95       	ror	r25
 e72:	87 95       	ror	r24
 e74:	77 95       	ror	r23
 e76:	67 95       	ror	r22
 e78:	ba 95       	dec	r27
 e7a:	c9 f7       	brne	.-14     	; 0xe6e <__ultoa_invert+0x86>
 e7c:	00 97       	sbiw	r24, 0x00	; 0
 e7e:	61 05       	cpc	r22, r1
 e80:	71 05       	cpc	r23, r1
 e82:	08 95       	ret
 e84:	9b 01       	movw	r18, r22
 e86:	ac 01       	movw	r20, r24
 e88:	0a 2e       	mov	r0, r26
 e8a:	06 94       	lsr	r0
 e8c:	57 95       	ror	r21
 e8e:	47 95       	ror	r20
 e90:	37 95       	ror	r19
 e92:	27 95       	ror	r18
 e94:	ba 95       	dec	r27
 e96:	c9 f7       	brne	.-14     	; 0xe8a <__ultoa_invert+0xa2>
 e98:	62 0f       	add	r22, r18
 e9a:	73 1f       	adc	r23, r19
 e9c:	84 1f       	adc	r24, r20
 e9e:	95 1f       	adc	r25, r21
 ea0:	a0 1d       	adc	r26, r0
 ea2:	08 95       	ret

00000ea4 <_exit>:
 ea4:	f8 94       	cli

00000ea6 <__stop_program>:
 ea6:	ff cf       	rjmp	.-2      	; 0xea6 <__stop_program>
